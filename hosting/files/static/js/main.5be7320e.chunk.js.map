{"version":3,"sources":["components/Home.js","components/RequestModule/RequestModuleHome.js","components/DonationModule/DonationModuleHome.js","components/GoogleMaps/Marker.js","components/GoogleMaps/GoogleMap.js","components/GoogleMaps/MarkerInfoWindowGmapsObj.js","lib/StitchFunctions.js","components/DispatchModule/DispatchModuleHome.js","contexts/Global/GlobalStateContext.js","contexts/RequestModule/RequestContext.js","contexts/DonationModule/DonationContext.js","contexts/DispatcherModule/DispatchContext.js","App.js","serviceWorker.js","contexts/Global/GlobalStateProvider.js","contexts/DonationModule/DonationProvider.js","contexts/RequestModule/RequestProvider.js","contexts/DispatcherModule/DispatchProvider.js","index.js","ContextWrapper.js","images/fulllogo.png"],"names":["Home","props","style","backgroundColor","height","color","paddingTop","className","fontSize","fontWeight","marginTop","onClick","history","push","paddingRight","paddingLeft","paddingBottom","size","window","location","replace","href","itemList","id","label","value","dropoff","time","RequestModuleHome","requestContext","state","step","loading","formData","errors","register","handleSubmit","clearError","setFormData","setLoading","setStep","validateStep1","validateStep2","validateStep3","fontFamily","onSubmit","ref","required","onChange","e","firstName","target","name","type","placeholder","marginBottom","message","lastName","phoneNumber","emailAddress","address","streetAddress","zipcode","zipCode","min","max","householdNum","document","getElementById","innerText","map","item","itemIndex","items","findIndex","a","itemsList","splice","key","disabled","length","additionalInfo","rows","width","src","fulllogo","DonationModuleHome","donationContext","showModal","setShowModal","submitDonation","console","log","Modal","show","onHide","Body","borderTop","letterSpacing","listStyleType","Spinner","animation","role","Wrapper","styled","div","Marker","alt","text","defaultProps","main","GoogleMap","children","bootstrapURLKeys","last","getInfoWindowString","place","status","MarkerInfoWindowGmapsObj","handleApiLoaded","maps","places","updateSelectedMarker","selectedMarker","setState","gMap","gMaps","markers","infowindows","this","forEach","position","lat","Number","geometry","lng","long","data","icon","path","SymbolPath","BACKWARD_CLOSED_ARROW","strokeColor","scale","FORWARD_CLOSED_ARROW","InfoWindow","content","slice","marker","i","addListener","open","setSelectedOrder","close","selectedOrder","coordinates","defaultZoom","center","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","orders","order","index","Component","intializeStitchClient","Stitch","initializeDefaultAppClient","err","defaultAppClient","anonymousUserLogin","client","auth","loginWithCredential","AnonymousCredential","getOrders","callFunction","result","errorCode","errorMessage","putOrder","body","isLoggedIn","logUserOut","toString","checkUserAuth","hasRedirectResult","handleRedirectResult","credential","GoogleRedirectCredential","loginWithRedirect","logout","DispatchModuleHome","dispatchContext","typeFilter","statusFilter","getOrdersForDispatcher","setTypeFilter","setStatusFilter","globalContext","isAuthenticated","user","checkAuthStatus","getUser","setIsAuthenticated","filteredOrders","useEffect","filter","applyFilters","title","profile","toast","class","aria-label","borderRight","display","aria-describedby","for","or","driver","selected","dropoffTime","Date","dateCreated","toLocaleDateString","toLocaleTimeString","GlobalStateContext","React","createContext","RequestContext","DonationContext","DispatchContext","App","Consumer","autoClose","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","toastClassName","progressClassName","exact","render","Boolean","hostname","match","GlobalStateProvider","useState","setErrors","setUser","prom","currentUser","Provider","errs","bool","DonationProvider","useForm","formattedData","formatRequest","response","quantity","num","RequestProvider","values","DispatchProvider","setOrders","obj","str","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.5be7320e.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport {ChevronRight} from 'react-feather'\n\nexport default function Home(props){\n    return (\n        <div style={{backgroundColor: \"rgb(158, 69, 183)\",height:'100vh',color:'white'}}>\n            <div style={{paddingTop: '10rem'}} className=\"mr-auto ml-auto\">\n                <p className=\"text-center lead\" style={{fontSize:'2.25rem',fontWeight:'bolder'}}>StayNeighbor</p>\n            </div>\n            <div className=\"lead col-11 mr-auto ml-auto text-center\" style={{fontSize:'1.25rem',marginTop:'2rem'}}>\n                A volunteer-powered network for essential supplies - delivered in a safe, healthy, and organized way.\n            </div>\n            <div style={{marginTop:'3rem'}}>\n                <div className=\"col-xl-6 col-12 text-center mr-auto ml-auto\">\n                    <button onClick={() => props.history.push('/request')} className=\"btn col-10 underline-hover\" style={{color:'white',backgroundColor:'#480d63',fontSize:'1.25rem',paddingRight:50,paddingLeft:50,paddingTop:10,paddingBottom:10}}>I <b style={{fontWeight:'bolder'}}>need</b> supplies</button>\n                </div>\n                <div className=\"col-xl-6 col-12 text-center mt-4 mr-auto ml-auto\">\n                    <button onClick={() => props.history.push('/donate')} className=\"btn col-10 underline-hover\" style={{color:'white',backgroundColor:'#480d63',fontSize:'1.25rem',paddingRight:50,paddingLeft:50,paddingTop:10,paddingBottom:10}}>I <b style={{fontWeight:'bolder'}}>have</b> supplies</button>\n                </div>\n            </div>\n            <div style={{marginTop:15}} className=\"col-12 text-center\">\n                <p onClick={() => props.history.push('/dispatcher')} className=\"lead underline-hover\" style={{fontSize:'1.25rem'}}>Dispatchers  <ChevronRight size={18}/></p>\n            </div>\n\n            <nav className=\"navbar fixed-bottom\" style={{backgroundColor: '#6f2c8e',paddingBottom:15}}>\n                <div className=\"mr-auto ml-auto\">\n                    <a onClick={() => window.location.replace('https://www.stayneighbor.com')} style={{fontSize:11,color:'white'}} href=\"#\">StayNeighbor is a community-built platform.  <b style={{color:'yellow'}}>GET INVOLVED</b></a>\n                </div>\n            </nav>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { ArrowLeftCircle, Circle, CheckCircle, Plus, CheckSquare, Check, Square } from 'react-feather';\nimport fulllogo from '../../images/fulllogo.png'\n\nconst itemList = [\n    { id: 1, label: 'Toilet Paper', value: 'toilet paper' },\n    { id: 2, label: 'Paper Towels', value: 'paper towels' },\n    { id: 3, label: 'Milk', value: 'milk' },\n    { id: 4, label: 'Eggs', value: 'eggs' },\n    { id: 5, label: 'Batteries - AA', value: 'batteries aa' },\n    { id: 6, label: 'Batteries - AAA', value: 'batters aaa' }\n];\n\nconst dropoff = [\n    { id: 'morning', label: 'Morning', time: '9am - 12pm' },\n    { id: 'afternoon', label: 'Afternoon', time: '12pm - 4pm' },\n    { id: 'evening', label: 'Evening', time: '4pm - 9pm' },\n];\n\nexport default function RequestModuleHome(props) {\n    const {step, loading, formData, errors} = props.requestContext.state; // provider state values\n    const { register, clearError, handleSubmit, setLoading, setFormData, setStep, validateStep1, validateStep2, validateStep3} = props.requestContext; // provider functions\n\n    if (step == 1) {\n        return (\n            <main>\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\n                    {/* <div className=\"col-2\">\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\n                    </div> */}\n                    <div className=\"col-12 mt-2 mr-auto\">\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\n                    </div>\n                </nav>\n                <div className=\"col-10 mr-auto ml-auto\">\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: '1.75rem', fontWeight: 'bold' }}>\n                        Howdy, Neighbor!\n                    </div>\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: '.9rem' }}>\n                        Let's get started with some information.\n                    </div>\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\n                        <i>While we need to share details with our volunteers, we will always keep your data private.</i>\n                    </div>\n\n                    <div style={{ marginTop: 30 }} className=\"text-center\">\n                        <form onSubmit={handleSubmit(validateStep1)}>\n                            <div className=\"form-row\">\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, firstName: e.target.value})}} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className=\"form-control lead\" id=\"inputEmail4\" placeholder=\"First Name\"></input>\n                                    {errors.firstName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.firstName.message || errors.firstName.type}</p>}\n                                </div>\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, lastName: e.target.value})}} name='lastName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Last Name\"></input>\n                                    {errors.lastName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.lastName.message || errors.lastName.type}</p>}\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, phoneNumber: e.target.value})}} name='phoneNumber' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Phone Number\"></input>\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\n                                </div>\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, emailAddress: e.target.value})}} name='emailAddress' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"email\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Email Address\"></input>\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, address: e.target.value})}} name='streetAddress' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Street Address\"></input>\n                                    {errors.streetAddress && <p style={{ color: 'red', marginBottom: 0 }}>{errors.streetAddress.message || errors.streetAddress.type}</p>}\n                                </div>\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} name='zipCode' onChange={(e) => {setFormData({...formData, zipcode: e.target.value})}} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Zip Code\"></input>\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group mr-auto ml-auto col-xl-4 col-md-8 mr-auto ml-auto text-center\">\n                                    <span className=\"text-center\" style={{ fontWeight: 'bolder', fontSize: '2rem' }} type=\"number\" id=\"peopleInHousehold\">0</span>\n                                    <input ref={register({ required: true, min: 0, max: 10 })} onChange={e => setFormData({...formData, householdNum: e.target.value})} name=\"peopleInHousehold\" ref={register({ required: true, max: 10, min: 1 })} name='phoneNumber' type=\"range\" defaultValue='0' onChange={(e) => document.getElementById('peopleInHousehold').innerText = e.target.value} className=\"custom-range\" min=\"0\" max=\"10\" id=\"customRange2\"></input>\n                                    <label className='lead'>People in Household</label>\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\n                                </div>\n                            </div>\n\n                            {!loading && <button onClick={() => validateStep1()} type=\"submit\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"col-xl-8 mr-auto ml-auto col-12 btn mt-4\">Continue</button>}\n                        </form>\n                    </div>\n                </div>\n            </main>\n        )\n    }\n\n    if (step == 2) {\n        return (\n            <main>\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\n                    {/* <div className=\"col-2\">\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\n                    </div> */}\n                    <div className=\"col-12 mt-2 mr-auto\">\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => setStep(1)} />\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\n                    </div>\n                </nav>\n\n                <div className=\"col-11 mr-auto ml-auto\">\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\n                        What can we provide?\n                    </div>\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\n                        Please let us know any essential supplies you might need and our dispatchers will take it from here.\n                    </div>\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\n                        <i>Please, only select things you or your ones NEED.</i>\n                    </div>\n                </div>\n\n                <div style={{ marginTop: '2rem' }} className=\"col-10 mr-auto ml-auto\">\n                    <form>\n                        <div className=\"form-row mr-auto ml-auto\">\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\n                                <ul className=\"list-group list-group-flush\">\n                                    {itemList.map(item => {\n                                        var itemIndex = formData.items.findIndex(a => a.value == item.value)\n                                        if (formData.items && itemIndex > -1) {\n                                            var itemsList = [...formData.items]\n                                            itemsList.splice(itemIndex, 1)\n                                            return <li key={item.id} onClick={() => setFormData({ ...formData, items: itemsList })} className=\"list-group-item underline-hover\"><CheckSquare className=\"mr-3 brand\" size={18} />{item.label}</li>\n                                        } else {\n                                            return (\n                                                <li key={item.id} onClick={() => setFormData({ ...formData, items: [...formData.items, item] })} className=\"underline-hover list-group-item\"><Square className=\"mr-3 brand\" size={18} />{item.label}</li>\n                                            )\n                                        }\n                                    })}\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\n                                <input name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"+ Add additional Item\"></input>\n                            </div>\n                        </div>\n                        <div className='form-row'>\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\n                                <button className=\"btn btn-sm btn-outline-brand\"><Plus /> Add Another</button>\n                            </div>\n                        </div>\n\n                        <div className=\"form-row mr-auto ml-auto text-center\">\n                            {!loading && <button onClick={() => validateStep2()} disabled={formData && (!formData.items || (formData.items && formData.items.length === 0))}  type=\"submit\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"btn text-center mr-auto ml-auto col-xl-6 col-12 mt-1\">Continue</button>}\n                        </div>\n\n                    </form>\n                </div>\n            </main>\n        )\n    }\n\n    if (step === 3) {\n        return (\n            <main>\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\n                    {/* <div className=\"col-2\">\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\n                    </div> */}\n                    <div className=\"col-12 mt-2 mr-auto\">\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => setStep(1)} />\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\n                    </div>\n                </nav>\n\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\n                    <div className=\"text-center\" style={{ marginTop: '7rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\n                        Just a few more details.\n                    </div>\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\n                        Now we just need some details for our drivers so they can safely deliver your supplies.\n                    </div>\n                </div>\n\n                <div style={{ marginTop: 50 }} className=\"col-xl-6 col-10 mr-auto ml-auto\">\n                    <form onSubmit={handleSubmit(validateStep3)}>\n                        <div className=\"form-row\">\n                            <span>DROPOFF TIME</span>\n\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\n                                <ul className=\"list-group list-group-flush\">\n                                    {dropoff.map(item => {\n                                        return <li key={item.id} onClick={() => setFormData({...formData, dropoff: item})} className=\"list-group-item underline-hover\">{formData.dropoff === item ? <CheckCircle className=\"mr-3 brand\" size={18} /> : <Circle className=\"mr-3 brand\" size={18} />}{item.label} ({item.time})</li>\n                                    })}\n                                </ul>\n                            </div>\n\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\n                                <label>Special Instructions</label>\n                                <textarea style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} onChange={e => setFormData({...formData, additionalInfo: e.target.value})} placeholder=\"Enter any special instructions for our driver, e.g. ring doorbell, leave at front desk, etc..\" className=\"form-control text-black\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                            </div>\n                        </div>\n\n                        {!loading && <button type=\"submit\" disabled={formData && (!formData.dropoff)} style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"btn col-12 mt-4\">Continue</button>}\n                    </form>\n                </div>\n            </main>\n        )\n    }\n\n    if(step == 4){\n        return (\n            <main>\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\n                    <div className=\"col-12 mt-2 mr-auto\">\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => {\n                            setStep(1)\n                            props.history.push('/')\n                        }} />\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\n                    </div>\n                </nav>\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\" style={{paddingTop:'8rem'}}>\n                    <div className=\"mr-auto ml-auto text-center\">\n                        <img className=\"mr-auto ml-auto\" style={{width:'25rem'}} src={fulllogo}/>\n                    </div>\n                    <div className=\"mr-auto ml-auto text-center mt-4\">\n                        <span className=\"lead\" style={{fontSize:'4rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Help is on the way.</span>\n                    </div>\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\n                        <span className=\"lead\" style={{fontSize:'1.5rem',color:\"rgba(0, 0, 0, 0.42)\"}}>When your order is assigned to a driver, we will let you know.</span>\n                    </div>\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\n                        <button onClick={() => {\n                            props.history.push('/')\n                            setStep(1)\n                        }} className=\"btn btn-outline-brand btn-lg\">Home</button>\n                        <button onClick={() => window.location.replace('https://stayneighbor.com')} className=\"btn btn-outline-brand btn-lg\">Learn More</button>\n                    </div>\n                </div>\n            </main>\n        )\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { ArrowLeftCircle, Circle, CheckCircle, Plus, CheckSquare, Square } from 'react-feather'\nimport {Modal,Spinner} from 'react-bootstrap'\nimport fulllogo from '../../images/fulllogo.png'\n\nconst dropoff = [\n    { id: 'morning', label: 'Morning', time: '9am - 12pm' },\n    { id: 'afternoon', label: 'Afternoon', time: '12pm - 4pm' },\n    { id: 'evening', label: 'Evening', time: '4pm - 9pm' },\n];\n\nconst itemList = [\n    { id: 1, label: 'Toilet Paper', value: 'toilet paper' },\n    { id: 2, label: 'Paper Towels', value: 'paper towels' },\n    { id: 3, label: 'Milk', value: 'milk' },\n    { id: 4, label: 'Eggs', value: 'eggs' },\n    { id: 5, label: 'Batteries - AA', value: 'batteries aa' },\n    { id: 6, label: 'Batteries - AAA', value: 'batters aaa' }\n];\n\nexport default function DonationModuleHome(props) {\n    const {step, loading, showModal, formData, errors} = props.donationContext.state; // provider state values\n    const { register, clearError, handleSubmit, setLoading, setFormData, setStep, validateStep1, validateStep2, validateStep3, setShowModal, submitDonation} = props.donationContext; // provider functions\n\n    if (step === 1) {\n        return (\n            <main>\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\n                    <div className=\"col-12 mt-2 mr-auto\">\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 underline-hover\" onClick={() => props.history.push('/')} />\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\n                    </div>\n                </nav>\n                <div className=\"col-10 mr-auto ml-auto\">\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: '1.75rem', fontWeight: 'bold' }}>\n                        Howdy, Neighbor!\n                    </div>\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: '.9rem' }}>\n                        Let's get started with some information.\n                    </div>\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\n                        <i>While we need to share details with our volunteers, we will always keep your data private.</i>\n                    </div>\n\n                    <div style={{ marginTop: 30 }} className=\"text-center\">\n                        <form onSubmit={handleSubmit(validateStep1)}>\n                            <div className=\"form-row\">\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, firstName: e.target.value})}} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"First Name\"></input>\n                                    {errors.firstName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.firstName.message || errors.firstName.type}</p>}\n                                </div>\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} name='lastName' onChange={(e) => setFormData({...formData, lastName: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Last Name\"></input>\n                                    {errors.lastName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.lastName.message || errors.lastName.type}</p>}\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} name='phoneNumber' onChange={(e) => setFormData({...formData, phoneNumber: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Phone Number\"></input>\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\n                                </div>\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} name='emailAddress' onChange={(e) => setFormData({...formData, emailAddress: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"email\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Email Address\"></input>\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} name='streetAddress' onChange={(e) => setFormData({...formData, address: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Street Address\"></input>\n                                    {errors.streetAddress && <p style={{ color: 'red', marginBottom: 0 }}>{errors.streetAddress.message || errors.streetAddress.type}</p>}\n                                </div>\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\n                                    <input ref={register({ required: true })} name='zipCode' onChange={(e) => setFormData({...formData, zipcode: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Zip Code\"></input>\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\n                                </div>\n                            </div>\n\n                            {!loading && <button onClick={() => validateStep1()} type=\"submit\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"col-xl-8 mr-auto btn-primary-hover ml-auto col-12 btn mt-4\">Continue</button>}\n                        </form>\n                    </div>\n                </div>\n            </main>\n        )\n    }\n\n    if (step === 2) {\n        return (\n            <main>\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\n                    {/* <div className=\"col-2\">\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\n                    </div> */}\n                    <div className=\"col-12 mt-2 mr-auto\">\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 underline-hover\" onClick={() => setStep(1)} />\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\n                    </div>\n                </nav>\n\n                <div className=\"col-11 mr-auto ml-auto\">\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\n                        What can you donate?\n                    </div>\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\n                        Please let us know any supplies you can donate and our dispatchers will take it from here.\n                    </div>\n                </div>\n\n                <div style={{ marginTop: '2rem' }} className=\"col-10 mr-auto ml-auto\">\n                    <form>\n                        <div className=\"form-row mr-auto ml-auto\">\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\n                                <ul className=\"list-group list-group-flush\">\n                                    {itemList.map(item => {\n                                        var itemIndex = formData.items.findIndex(a => a.value == item.value)\n                                        if (formData.items && itemIndex > -1) {\n                                            var itemsList = [...formData.items]\n                                            itemsList.splice(itemIndex, 1)\n                                            console.log(itemsList)\n                                            return <li key={item.id} onClick={() => setFormData({ ...formData, items: itemsList })} className=\"list-group-item underline-hover\"><CheckSquare className=\"mr-3 brand\" size={18} />{item.label}</li>\n                                        } else {\n                                            return (\n                                                <li key={item.id} onClick={() => setFormData({ ...formData, items: [...formData.items, item] })} className=\"list-group-item underline-hover\"><Square className=\"mr-3 brand\" size={18} />{item.label}</li>\n                                            )\n                                        }\n                                    })}\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\n                                <input name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"+ Add additional Item\"></input>\n                                <button className=\"btn btn-sm btn-outline-brand mt-3\"><Plus /> Add Another</button>\n                            </div>\n                        </div>\n\n                        <div className=\"form-row mr-auto ml-auto text-center\">\n                            {!loading && <button onClick={() => validateStep2()} disabled={formData && (!formData.items || (formData.items && formData.items.length === 0))} type=\"submit\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"btn btn-primary-hover text-center mr-auto ml-auto col-xl-6 col-12 mt-4\">Continue</button>}\n                        </div>\n\n                    </form>\n                </div>\n            </main>\n        )\n    }\n\n    if (step === 3) {\n        console.log(formData)\n        return (\n            <main>\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\n                    {/* <div className=\"col-2\">\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\n                    </div> */}\n                    <div className=\"col-12 mt-2 mr-auto\">\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3\" onClick={() => setStep(1)} />\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\n                    </div>\n                </nav>\n\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\n                    <div className=\"text-center\" style={{ marginTop: '7rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\n                        Just a few more details.\n                    </div>\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\n                        Now we just need some details for our drivers so they can safely pick up your donations.\n                    </div>\n                </div>\n\n                <div style={{ marginTop: 50 }} className=\"col-xl-6 col-10 mr-auto ml-auto\">\n                    <form onSubmit={handleSubmit(validateStep3)}>\n                        <div className=\"form-row\">\n                            <span>DROPOFF TIME</span>\n\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\n                                <ul className=\"list-group list-group-flush\">\n                                    {dropoff.map(item => {\n                                        return <li key={item.id} onClick={() => setFormData({...formData, dropoff: item})} className=\"list-group-item underline-hover\">{formData.dropoff === item ? <CheckCircle className=\"mr-3 brand\" size={18} /> : <Circle className=\"mr-3 brand\" size={18} />}{item.label} ({item.time})</li>\n                                    })}\n                                </ul>\n                            </div>\n\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\n                                <label>Special Instructions</label>\n                                <textarea onChange={e => setFormData({...formData, additionalInfo: e.target.value})} style={{backgroundColor: \"rgba(158, 69, 183, 0.14)\"}} placeholder=\"Enter any special instructions for our driver, e.g. ring doorbell, pick up box from front desk, etc..\" className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                            </div>\n                        </div>\n\n                        {!loading && <button type=\"submit\" disabled={formData && (!formData.dropoff)} className=\"btn btn-primary-hover col-12 mt-4\">Continue</button>}\n                    </form>\n                </div>\n                <Modal style={{paddingTop:75}} size='lg' show={showModal} onHide={() => {}}>\n                    <Modal.Body style={{borderTop:'10px solid #6f2c8e'}}>\n                        <div className=\"col-12 text-center\">\n                            <span style={{fontSize:20,fontWeight:600,color:\"#6f2c8e\",letterSpacing:'.025rem'}}>Confirm your request.</span>\n                        </div>\n                        \n                        <div className=\"col-12 row\" style={{marginTop:25}}>\n                            <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\n                                <div className=\"border-bottom pb-1 row\">\n                                    <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Your Info</div>\n                                    <div onClick={() => setStep(1)} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\n                                </div>\n                                <div>\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.firstName} {formData.lastName}</li>\n                                    <li className=\"mb-1 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.address}</li>\n                                    <li className=\"mb-3 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.zipcode}</li>\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.phoneNumber}</li>\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.emailAddress}</li>\n                                </div>\n                            </div>\n                            <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\n                                <div className=\"border-bottom pb-1 row\">\n                                    <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Items</div>\n                                    <div onClick={() => setStep(2)} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\n                                </div>\n                                <div>\n                                    {formData.items.map(item => {\n                                        return (\n                                            <li className=\"ml-3 lead\" style={{fontSize:14}}>{item.value}</li>\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-12 row\" style={{marginTop:25}}>\n                            <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\n                                <div className=\"border-bottom row pb-1\">\n                                    <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Drop Off Time</div>\n                                    <div onClick={() => {\n                                        setStep(3)\n                                        setShowModal(false)\n                                        }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\n                                </div>\n                                <div>\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.dropoff ? `${formData.dropoff.label} (${formData.dropoff.time})` : ''}</li>\n                                </div>\n                            </div>\n                            <div className=\"col-5 mr-auto ml-auto\"></div>\n                        </div>\n                        <div className=\"col-12 mr-auto ml-auto mt-4\">\n                            {!loading && <button onClick={submitDonation} className=\"btn col-12 btn-primary-hover\" type=\"button\">Send My Donation</button>}\n                            {loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\">\n                                <Spinner animation=\"border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </Spinner>\n                            </button>}\n                        </div>\n                    </Modal.Body>\n                </Modal>\n            </main>\n        )\n    }\n\n    if(step == 4){\n        return (\n            <main>\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\n                    {/* <div className=\"col-2\">\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\n                    </div> */}\n                    <div className=\"col-12 mt-2 mr-auto\">\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => {\n                            props.history.push('/')\n                            setStep(1)\n                        }} />\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\n                    </div>\n                </nav>\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\" style={{paddingTop:'8rem'}}>\n                    <div className=\"mr-auto ml-auto text-center\">\n                        <img className=\"mr-auto ml-auto\" style={{width:'25rem'}} src={fulllogo}/>\n                    </div>\n                    <div className=\"mr-auto ml-auto text-center mt-4\">\n                        <span className=\"lead\" style={{fontSize:'4rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Thank you!</span>\n                    </div>\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\n                        <span className=\"lead\" style={{fontSize:'2.0rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Words cannot express our gratitude.</span>\n                    </div>\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\n                        <span className=\"lead\" style={{fontSize:'1.5rem',color:\"rgba(0, 0, 0, 0.42)\"}}>A driver will pickup your order and ensure it reaches someone in need.</span>\n                    </div>\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\n                        <button onClick={() => {\n                            props.history.push('/')\n                            setStep(1)\n                        }} className=\"btn btn-outline-brand btn-lg\">Home</button>\n                        <button onClick={() => window.location.replace('https://stayneighbor.com')} className=\"btn btn-outline-brand btn-lg\">Learn More</button>\n                    </div>\n                </div>\n            </main>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 12px;\n  height: 12px;\n  background-color: ${props => (props.type === 'REQUEST') ? 'red' : 'green'};\n  border-radius: ${props => (props.type === 'REQUEST') ? '10%' : '50%'};\n  user-select: none;\n  cursor: ${props => (props.onClick ? 'pointer' : 'default')};\n  &:hover {\n    z-index: 1;\n  }\n`;\n\nconst Marker = props => (\n  <Wrapper\n    alt={props.text}\n    type={props.text}\n    {...props.onClick ? { onClick: props.onClick } : {}}\n  />\n);\n\nMarker.defaultProps = {\n  onClick: null,\n};\n\nMarker.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Marker;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GoogleMapReact from 'google-map-react';\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n\nconst GoogleMap = ({ children, ...props }) => (\n  <Wrapper>\n    <GoogleMapReact\n      bootstrapURLKeys={{\n        key: \"AIzaSyD1t2vfHVpI_2dw0uqllA4lR5Q2Kjw9wdY\",\n      }}\n      {...props}\n    >\n      {children}\n    </GoogleMapReact>\n  </Wrapper>\n);\n\nGoogleMap.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n};\n\nGoogleMap.defaultProps = {\n  children: null,\n};\n\nexport default GoogleMap;\n","import React, { Component, Fragment } from 'react';\nimport { isEmpty } from 'lodash';\nimport Marker from './Marker'\n\n// examples:\nimport GoogleMap from './GoogleMap';\n\n// consts: [34.0522, -118.2437]\nvar last = null\nvar selected = false\nvar records = ''\n// var records = [\n//   {\n//     name: \"Home\",\n//     types: ['Request'],\n//     geometry: {\n//       location: {\n//         lat: 34.23,\n//         lng: -77.94\n//       }\n//     },\n//     address: '2131 S 17th Street'\n//   },\n//   {\n//     name: \"Home1\",\n//     types: ['Donation'],\n//     geometry: {\n//       location: {\n//         lat: 34.148562,\n//         lng: -77.935982\n//       }\n//     }\n//   },\n//   {\n//     name: \"Home2\",\n//     types: ['Request'],\n//     geometry: {\n//       location: {\n//         lat: 34.206362,\n//         lng: -77.922413\n//       }\n//     }\n//   }\n// ]\n\nconst getInfoWindowString = place => `\n    <div>\n      <div style=\"font-size: 16px;\">\n        ${place.status}\n      </div>\n      <div style=\"font-size: 14px; color: grey;\">\n        ${place.type}\n      </div>\n    </div>`\n\n\n\n\n// Refer to https://github.com/google-map-react/google-map-react#use-google-maps-api\n// const handleApiLoaded = (map, maps, places, props, updateSelectedMarker, selectedMarker) => {\n//   this.setState({gMap: map, gMaps: maps})\n//   return\n\n\n// const markers = [{}];\n// const infowindows = [];\n\n// var places = [\n//   {\n//     name: \"Home\",\n//     types: ['Request'],\n//     geometry: {\n//       location: {\n//         lat: 34.23,\n//         lng: -77.94\n//       }\n//     },\n//     address: '2131 S 17th Street'\n//   },\n//   {\n//     name: \"Home1\",\n//     types: ['Donation'],\n//     geometry: {\n//       location: {\n//         lat: 34.148562,\n//         lng: -77.935982\n//       }\n//     }\n//   },\n//   {\n//     name: \"Home2\",\n//     types: ['Request'],\n//     geometry: {\n//       location: {\n//         lat: 34.206362,\n//         lng: -77.922413\n//       }\n//     }\n//   }\n// ]\n\n// for using a custom image as a marker\n// var image = {\n//   url: 'https://cdn4.iconfinder.com/data/icons/contact-us-19/48/35-512.png',\n//   scaledSize: new maps.Size(25, 25),\n// }\n\n// places.forEach((place) => {\n//   markers.push(new maps.Marker({\n//     position: {\n//       lat: Number(place.geometry.lat),\n//       lng: Number(place.geometry.long),\n//     },\n//     map,\n//     data: place,\n//     // icon: image,\n//     icon: place.type === 'REQUEST' ? {\n//       path: maps.SymbolPath.BACKWARD_CLOSED_ARROW,\n//       strokeColor: 'red',\n//       scale: 5\n//     } : {\n//         path: maps.SymbolPath.FORWARD_CLOSED_ARROW,\n//         strokeColor: 'blue',\n//         scale: 5\n//       },\n//   }));\n\n//   infowindows.push(new maps.InfoWindow({\n//     content: getInfoWindowString(place),\n//   }));\n// });\n\n// markers.slice(1).forEach((marker, i) => {\n//   marker.addListener('click', () => {\n//     infowindows[i].open(map, marker)\n//     props.setSelectedOrder(marker.data)\n//     if (last) last.close()\n//     last = infowindows[i]\n//   })\n// });\n// console.log(markers)\n// records = markers.slice(1)\n//};\n\nclass MarkerInfoWindowGmapsObj extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      places: [],\n      selectedMarker: false,\n      gMap: false,\n      gMaps: false\n    };\n  }\n\n  updateSelectedMarker(item) {\n    //this.setState({selectedMarker: item})\n  }\n\n  handleApiLoaded = (map, maps, places, props, updateSelectedMarker, selectedMarker) => {\n    console.log(map)\n    this.setState({ gMap: map, gMaps: maps })\n    return\n  }\n\n  getPlaces(places, props) {\n    const markers = [{}];\n    const infowindows = [];\n    var gMaps = this.state.gMaps\n    var gMap = this.state.gMap\n\n    places.forEach((place) => {\n      markers.push(new gMaps.Marker({\n        position: {\n          lat: Number(place.geometry.lat),\n          lng: Number(place.geometry.long),\n        },\n        gMap,\n        data: place,\n        // icon: image,\n        icon: place.type === 'REQUEST' ? {\n          path: gMaps.SymbolPath.BACKWARD_CLOSED_ARROW,\n          strokeColor: 'red',\n          scale: 5\n        } : {\n            path: gMaps.SymbolPath.FORWARD_CLOSED_ARROW,\n            strokeColor: 'blue',\n            scale: 5\n          },\n      }));\n\n      infowindows.push(new gMaps.InfoWindow({\n        content: getInfoWindowString(place),\n      }));\n    });\n\n    markers.slice(1).forEach((marker, i) => {\n      marker.addListener('click', () => {\n        infowindows[i].open(gMap, marker)\n        props.setSelectedOrder(marker.data)\n        if (last) last.close()\n        last = infowindows[i]\n      })\n    });\n\n    console.log(markers)\n    return markers.slice(1)\n  }\n\n  render() {\n    if (this.props.selectedOrder && this.props.selectedOrder != this.state.selectedMarker) this.setState({ selectedMarker: this.props.selectedOrder })\n    const defaultCenter = { lat: 34.23, lng: -77.94 };\n    const coordinates = this.props.selectedOrder ? { lat: Number(this.props.selectedOrder.geometry.lat), lng: Number(this.props.selectedOrder.geometry.long) } : defaultCenter;\n    return (\n      <div style={{ height: '90vh', width: '100%' }}>\n        <GoogleMap\n          defaultZoom={12}\n          center={coordinates}\n          bootstrapURLKeys={{ key: \"AIzaSyD1t2vfHVpI_2dw0uqllA4lR5Q2Kjw9wdY\" }}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps, this.props.orders, this.props)}\n        >\n          {this.props.orders.map((order, index) => {\n            return (\n              <Marker\n                key={index}\n                text={order.type}\n                lat={Number(order.geometry.lat)}\n                lng={Number(order.geometry.long)}\n                onClick={() => this.props.setSelectedOrder(order)}\n              />\n            )\n          })}\n        </GoogleMap>\n      </div>\n\n    );\n  }\n}\n\nexport default MarkerInfoWindowGmapsObj;\n","import {Stitch,RemoteMongoClient,AnonymousCredential,GoogleRedirectCredential} from 'mongodb-stitch-browser-sdk'\n\nfunction getAppId(){\n    if(process.env.NODE_ENV === 'development') return 'stayneighbor-bjuma'\n    if(process.env.NODE_ENV !== 'development') return 'stayneighbor-bjuma'\n}\n\nfunction getDb(){\n    if(process.env.NODE_ENV === 'development') return 'stayneighbor'\n    if(process.env.NODE_ENV !== 'development') return 'stayneighbor'\n}\n\nfunction establishMongoDbConnection(){\n    //get our default app client\n    const client = intializeStitchClient()\n\n    if(client.errorCode) return {errorCode: '002', errorMessage: client}\n\n    const mongodb = initalizeStitchServiceClient(client)\n\n    if(mongodb.errorCode) return {errorCode: '003', errorMessage: mongodb}\n    \n    return mongodb\n}\n\nexport function initalizeStitchServiceClient(client){\n    try{\n        return client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db(getDb());\n    } catch(err){\n        return {errorCode: '002', errorMessage: err}\n    }\n}\n\nexport function intializeStitchClient(){\n    try {\n        //return Stitch.initializeDefaultAppClient('stayneighbor-bjuma');\n        return Stitch.initializeDefaultAppClient(getAppId());\n    } catch(err){\n        return Stitch.defaultAppClient\n    }\n}\n\nexport async function anonymousUserLogin(){\n    try {\n        var client = intializeStitchClient()\n        var auth = await client.auth.loginWithCredential(new AnonymousCredential)\n        console.log(auth)\n    } catch(e) {\n        return e\n    }\n}\n\nexport async function getOrders(){\n    const client = intializeStitchClient()\n\n    try {\n        var result = await client.callFunction(\"listOrders\", []);\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\n        return result\n    } catch(e){\n        console.log(e)\n        return e\n    }\n}\n\nexport async function putOrder(body){\n    \n    try{\n        //get our default app client\n        const client = intializeStitchClient()\n        if(!client.auth.isLoggedIn) await anonymousUserLogin()\n\n        var result = await client.callFunction(\"createOrder\", [body]);\n        logUserOut()\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\n        else return true\n    } catch(e){\n        return {errorCode: '002', errorMessage: e.toString()}\n    }\n}\n\nexport async function checkUserAuth(){\n    try {\n        //get our default app client\n        const client = intializeStitchClient()\n\n        if(client.auth.isLoggedIn){\n            return true\n        } else {\n            if(client.auth.hasRedirectResult()){\n                var result = await client.auth.handleRedirectResult()\n                if(result.isLoggedIn === true) return true\n            }\n\n            const credential = new GoogleRedirectCredential()\n            await client.auth.loginWithRedirect(credential)\n            return null\n        }\n    } catch (e){\n\n    }\n}\n\nexport async function logUserOut(){\n    await intializeStitchClient().auth.logout()\n    return true\n}\n\nexport function getUserInfo(){\n    return intializeStitchClient().auth.currentUser\n}","import React, {useEffect} from 'react'\nimport MarkerInfoWindowGmapsObj from '../GoogleMaps/MarkerInfoWindowGmapsObj'\nimport { ArrowLeftCircle,LogOut,X,User,CheckCircle,ShoppingCart} from 'react-feather'\nimport {logUserOut} from '../../lib/StitchFunctions'\nimport {toast} from 'react-toastify'\n\nexport default function DispatchModuleHome(props){\n    const { orders, selectedOrder, typeFilter, statusFilter } = props.dispatchContext.state\n    const { getOrdersForDispatcher, setSelectedOrder, setTypeFilter, setStatusFilter } = props.dispatchContext\n    var { isAuthenticated, user } = props.globalContext.state\n    var { checkAuthStatus, getUser, setIsAuthenticated } = props.globalContext\n    var filteredOrders = []\n\n    useEffect(() => {\n        checkAuthStatus()\n        if(isAuthenticated) getUser()\n        if(isAuthenticated && user && !orders) getOrdersForDispatcher()\n    }, [isAuthenticated, user, orders])\n\n    function applyFilters(orders){\n        console.log(typeFilter, statusFilter)\n        if(typeFilter) orders = orders.filter(a => a.type === typeFilter)\n        if(statusFilter) orders = orders.filter(a => a.status === statusFilter)\n        return orders\n    }\n\n    if(orders) filteredOrders = applyFilters(orders)\n\n    return (\n        <main>\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6F2C8E', paddingBottom: 15 }}>\n                <div className=\"col-12 mt-2 mr-auto\">\n                    <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\n                    {isAuthenticated === true && user ? <span title=\"Log Out\" className=\"ml-auto float-right text-white\">Welcome {user.profile.data.name}!  <LogOut onClick={() => {\n                        logUserOut()\n                        setIsAuthenticated(false)\n                        props.history.push('/')\n                        toast(\"You have been logged out!\")\n                    }} className=\"hover ml-2\"/></span> : ''}\n                </div>\n            </nav>\n\n            {isAuthenticated && user && orders ? \n                <div className=\"col-12 row mr-auto\" style={{marginTop:75}}>\n                    <div style={{paddingLeft:0,paddingRight:0,width:'20%'}}>\n                        <div className={{width:'100%',height:\"100%\"}}>\n                            <div style={{paddingLeft:'1.50rem'}}>\n                                <label style={{width:'100%',fontSize:'.9rem'}} className=\"mb-0 pb-0 ml-2 lead\">Order Type</label>\n                                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <button onClick={() => setTypeFilter('REQUEST')} type=\"button\" class={`${typeFilter === 'REQUEST' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Requests ({filteredOrders.filter(a => a.type === 'REQUEST').length})</button>\n                                    <button onClick={() => setTypeFilter('DONATION')} type=\"button\" class={`${typeFilter === 'DONATION' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Donations ({filteredOrders.filter(a => a.type === 'DONATION').length})</button>\n                                    <X onClick={() => setTypeFilter(false)} style={{marginTop:'.75rem',color:\"grey\"}} className=\"hover ml-1\"/>\n                                </div>\n                            </div>\n                            <div style={{paddingLeft:'1.50rem'}}>\n                                <label style={{width:'100%',fontSize:'.9rem'}} className=\"mb-0 pb-0 ml-2 lead\">Order Status</label>\n                                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                    <button onClick={() => setStatusFilter('PENDING')} type=\"button\" class={`${statusFilter === 'PENDING' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Pending ({filteredOrders.filter(a => a.status === 'PENDING').length})</button>\n                                    <button onClick={() => setStatusFilter('ASSIGNED')} class={`${statusFilter === 'ASSIGNED' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Assigned ({filteredOrders.filter(a => a.type === 'ASSIGNED').length})</button>\n                                    <button onClick={() => setStatusFilter('COMPLETED')} class={`${statusFilter === 'COMPLETED' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Completed ({filteredOrders.filter(a => a.type === 'COMPLETED').length})</button>\n                                    <X onClick={() => setStatusFilter(false)} style={{marginTop:'.75rem',color:\"grey\"}} className=\"hover ml-1\"/>\n                                </div>\n                            </div>\n                            <div style={{paddingLeft:-50,paddingRight:0,borderRight:\"2px solid black\"}} className=\"mt-2\">\n                                {orders && filteredOrders.map(order => {\n                                    return (\n                                        <li style={{fontSize:12,paddingLeft:'1.5rem',paddingRight:5,paddingBottom:'.25rem'}} class={`list-group-item order-list text-center ${order == selectedOrder ? 'active-order': \"\"}`} onClick={() => setSelectedOrder(order)}>\n                                            <form>\n                                                <div className=\"form-row\" style={{paddingTop:'.25rem'}}>\n                                                    <div className=\"form-group col-3 mr-2\">\n                                                        {/* <label for=\"exampleInputEmail1\" className=\"lead\" style={{fontSize:'1.1rem'}}>Type</label> */}\n                                                        <span style={{display:'block',fontSize:'.9rem'}} className={order.type === \"REQUEST\" ? 'request-type' : 'donation-type'}>{order.type}</span>\n                                                    </div>\n                                                    <div className=\"form-group col-4 mr-2\">\n                                                        {/* <label for=\"exampleInputEmail1\" className=\"lead\" style={{fontSize:'.9rem'}}><b>Name</b></label> */}\n                                                        <span type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{order.firstName} {order.lastName}</span>\n                                                    </div>\n                                                    {/* <div className=\"form-group col-2 mr-2\">\n                                                        <label for=\"exampleInputEmail1\"><b>People</b></label>\n                                                        <span type=\"email\" style={{display:'block'}} aria-describedby=\"emailHelp\">{order.householdNum}</span>\n                                                    </div> */}\n                                                    <div className=\"form-group col-3 mr-2\">\n                                                        {/* <label for=\"exampleInputEmail1\" className=\"lead\" style={{fontSize:'.9rem'}}><b>Status</b></label> */}\n                                                        <span type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{order.status}</span>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </li>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={selectedOrder ? \"col-7\" : 'col-9'}>\n                        <MarkerInfoWindowGmapsObj setSelectedOrder={setSelectedOrder} orders={filteredOrders} selectedOrder={selectedOrder}/>\n                    </div>\n                    \n                    {selectedOrder ? \n                        <div style={{width:\"20%\",fontSize:12}} className=\"ml-auto pl-2\">\n                            <form className=\"col-12 mr-auto ml-auto\">\n                                <div className=\"form-row\">\n                                    <label style={{width:'100%',fontSize:'1.2rem',letterSpacing:'.03rem'}} className=\"mb-2 pb-0 lead\"><u>{selectedOrder.type} Details</u></label>\n                                    {/* <span style={{fontWeight:'bolder'}}><u>{selectedOrder.type} Details</u></span> */}\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group mr-2\">\n                                        <label for=\"exampleInputEmail1\" className=\"lead\" style={{fontSize:'.9rem'}}><b>Type</b></label>\n                                        <span style={{display:'block',fontSize:'.9rem'}} className={selectedOrder.type === \"REQUEST\" ? 'request-type lead mt-1' : 'donation-type lead mt-1'}>{selectedOrder.type}</span>\n                                    </div>\n                                    <div className=\"form-group mr-2\">\n                                        <label for=\"exampleInputEmail1\" className=\"lead\" style={{fontSize:'.9rem'}}><b>Name</b></label>\n                                        <span className=\"lead\" type=\"email\" style={{display:'block'}} aria-describedby=\"emailHelp\">{selectedOrder.firstName} {selectedOrder.lastName}</span>\n                                    </div>\n                                    <div className=\"form-group mr-2\">\n                                        {/* <label for=\"exampleInputEmail1\"><b># in House</b></label> */}\n                                        <User/>\n                                        <span className=\"ml-2 lead mt-2\" type=\"email\" style={{display:'block',fontSize:\"1.0rem\"}} aria-describedby=\"emailHelp\">{selectedOrder.householdNum}</span>\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group mr-2 col-5\">\n                                        <label className='lead' style={{fontSize:'.9rem'}} or=\"exampleInputEmail1\"><b>Assigned To</b></label>\n                                        <select style={{display:'block'}} >{['','Patrick Willetts','Dillon Harless'].map(driver => {\n                                            return <option>{driver}</option>\n                                        })}</select>\n                                    </div>\n                                    <div className=\"form-group col-5 mr-2\">\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Status</b></label>\n                                        <select selected={selectedOrder.status} style={{display:'block'}} >{['ASSIGNED','PENDING','COMPLETED'].map(status => {\n                                            return <option selected={selectedOrder.status === status ? true : false}>{status}</option>\n                                        })}</select>\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group mr-2 col-5\">\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Address</b></label>\n                                        <span className='lead' style={{display:'block', fontSize:'.9rem'}}>{selectedOrder.address}</span>\n                                    </div>\n                                    <div className='lead' className=\"form-group mr-2 col-5\">\n                                        <label className=\"lead\" style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Zip Code</b></label>\n                                        <span className='lead' type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.zipcode}</span>\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group mr-2 col-5\">\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>{selectedOrder.type === 'DONATION' ? 'Pickup Time' : 'Delivery Time'}</b></label>\n                                        <span className='lead' type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.dropoffTime}</span>\n                                    </div>\n                                    <div className=\"form-group mr-2 col-5\">\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Phone Number</b></label>\n                                        <span className='lead' type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.phoneNumber}</span>\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group mr-2 col-5\">\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Date Created</b></label>\n                                        <span type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{new Date(selectedOrder.dateCreated).toLocaleDateString()} {new Date(selectedOrder.dateCreated).toLocaleTimeString()}</span>\n                                    </div>\n                                    <div className=\"form-group mr-2 col-5\">\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Phone Number</b></label>\n                                        <span type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.phoneNumber}</span>\n                                    </div>\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group mr-2 col-5\">\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Items</b></label>\n                                        <span type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.items.map(item => item.name)}</span>\n                                    </div>\n                                    <div className=\"form-group mr-2 col-5\">\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Additional Info</b></label>\n                                        <span type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.additionalInfo}</span>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    : ''}\n                </div> \n            \n            : ''}\n\n            {!isAuthenticated ? \n                <div className=\"text-center mr-auto ml-auto\" style={{marginTop:'15rem',width:'20%'}}>\n                    <div>\n                        <span className=\"h5\">Select a login partner...</span>\n                    </div>\n                </div>\n            : ''}\n        </main>\n    )\n}","import React from 'react';\n\nconst GlobalStateContext = React.createContext();\n\nexport default GlobalStateContext; ","import React from 'react';\n\nconst RequestContext = React.createContext();\n\nexport default RequestContext; ","import React from 'react';\n\nconst DonationContext = React.createContext();\n\nexport default DonationContext; ","import React from 'react';\n\nconst DispatchContext = React.createContext();\n\nexport default DispatchContext; ","import React from 'react';\nimport {BrowserRouter,Route,Redirect,Switch} from 'react-router-dom'\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\nimport Home from './components/Home'\nimport RequestModule from './components/RequestModule/RequestModuleHome'\nimport DonationModule from './components/DonationModule/DonationModuleHome'\nimport DispatchModule from './components/Dispatch'\nimport GoogleMaps from './components/GoogleMaps/GoogleMap'\nimport MarkerInfoWindowGmapsObj from './components/GoogleMaps/MarkerInfoWindowGmapsObj'\nimport './css/App.css';\nimport './css/bootstrap.min.css'\nimport DispatchModuleHome from './components/DispatchModule/DispatchModuleHome';\nimport GlobalStateContext from './contexts/Global/GlobalStateContext';\nimport RequestContext from './contexts/RequestModule/RequestContext';\nimport DonationContext from './contexts/DonationModule/DonationContext';\nimport DispatchContext from './contexts/DispatcherModule/DispatchContext';\n\nfunction App() {\n  return (\n    <GlobalStateContext.Consumer>\n      {globalContext => (\n        <BrowserRouter>\n        <ToastContainer\n            autoClose={5000}\n            newestOnTop\n            closeOnClick\n            rtl={false}\n            pauseOnVisibilityChange\n            draggable\n            pauseOnHover\n            className='toast-container'\n            toastClassName=\"toastify-brand\"\n            progressClassName=\"toastify-progress-bar\"\n        />\n\n        <Switch>\n            <Route exact={true} path=\"/\" render={(props) => <Home globalContext={globalContext} {...props}/>}/>\n            <Route exact={true} path=\"/request\" render={(props) => <RequestContext.Consumer>{requestContext => (<RequestModule globalContext={globalContext} requestContext={requestContext} {...props}/>)}</RequestContext.Consumer>}/>\n            <Route exact={true} path=\"/donate\" render={(props) => <DonationContext.Consumer>{donationContext => (<DonationModule globalContext={globalContext} donationContext={donationContext} {...props}/>)}</DonationContext.Consumer>}/>\n            <Route exact={true} path=\"/dispatcher\" render={(props) => <DispatchContext.Consumer>{dispatchContext => (<DispatchModuleHome globalContext={globalContext} dispatchContext={dispatchContext} {...props}/>)}</DispatchContext.Consumer>}/>\n        </Switch>\n      </BrowserRouter>\n      )}\n    </GlobalStateContext.Consumer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// All things that should be accessed in a global setting will live here\nimport React, {useState} from 'react';\nimport GlobalStateContext from './GlobalStateContext';\nimport {checkUserAuth,getUserInfo} from '../../lib/StitchFunctions'\n\nconst GlobalStateProvider = props => {\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\n    const [errors, setErrors] = useState({});\n    const [user, setUser] = useState(null);\n\n    const checkAuthStatus = async () =>{\n        const prom = await checkUserAuth()\n        setIsAuthenticated(prom)\n    }\n\n    const getUser = async () => {\n     //example of calling a stich function inside here\n        const prom = getUserInfo();\n        setUser(prom);\n    }\n    \n    return (\n        <GlobalStateContext.Provider // this is where we expose state values and functions to the rest of the application\n            value={{\n                state: { // for organization reasons I like keep all state values inside a state object\n                    isAuthenticated: isAuthenticated,\n                    errors: errors,\n                    user: user\n                },\n                setErrors: (errs) => setErrors(errs),\n                setIsAuthenticated: (bool) => setIsAuthenticated(bool), // expose only the functions that are necessary\n                checkAuthStatus: () => checkAuthStatus(),\n                getUser: () => getUser()\n            }}\n        >\n            {props.children}\n        </GlobalStateContext.Provider>\n    )\n};\n\nexport default GlobalStateProvider;","import React, {useState} from 'react';\nimport DonationContext from './DonationContext';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport { putOrder } from '../../lib/StitchFunctions';\n\nconst DonationProvider = props => {\n    var { register, errors, clearError, handleSubmit } = useForm();\n    const [step, setStep] = useState(1);\n    var [loading, setLoading] = useState(false);\n    const [showModal, setShowModal] = useState(false)\n    const [formData, setFormData] = useState({ \n        firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], dropoff: null });\n\n    const validateStep1 = () => {\n        // todo handle address validation logic\n        setStep(2)\n    };\n\n    const validateStep2 = () => {\n        // todo handle requested item validation\n        setStep(3);\n    };\n\n    const validateStep3 = async () => {\n        setShowModal(true)\n    };\n\n    const submitDonation = async () => {\n        console.log('here')\n        // todo handle dropoff time validation\n        setLoading(true);\n        // format put request data\n        const formattedData = formatRequest();\n        const response = await putOrder(formattedData);\n        setLoading(false);\n        if(response && !response.errorCode){\n            toast('Donation submitted successfully!')\n            setStep(4)\n        } else {\n            toast('There was an error submitting your donation.');\n        }\n    }\n\n    const formatRequest = () => {\n        // todo write logic to format the request object to match the data model given by backend\n        const body = {};\n        body.firstName = formData.firstName;\n        body.lastName = formData.lastName;\n        body.address = formData.address;\n        body.phoneNumber =  formData.phoneNumber;\n        body.emailAddress = formData.emailAddress;\n        body.zipcode = formData.zipcode;\n        body.time = formData.dropoff.id;\n        body.type = 'DONATION';\n        body.items = formData.items.map(item => ({name: item.value, quantity: 1}));\n        body.additionalInfo =formData.additionalInfo;\n        return body;\n    };\n\n    return(\n        <DonationContext.Provider\n            value={{\n                state: {\n                    // put state values here\n                    step, // shorthand for step: step\n                    loading,\n                    showModal,\n                    formData,\n                    errors\n                },\n                // put functions you want to expose here\n                setStep: (num) => setStep(num),\n                setLoading: (bool) => setLoading(bool),\n                setShowModal: (bool) => setShowModal(bool),\n                setFormData: (data) => setFormData(data),\n                register: () => register(),\n                clearError: () => clearError(),\n                handleSubmit: (e) => handleSubmit(e),\n                validateStep1: () => validateStep1(),\n                validateStep2: () => validateStep2(),\n                validateStep3: () => validateStep3(),\n                submitDonation: () =>  submitDonation()\n            }}\n        >\n            {props.children}\n        </DonationContext.Provider>\n    )\n}\n\nexport default DonationProvider;","import React, {useState} from 'react';\nimport { useForm } from 'react-hook-form';\nimport RequestContext from './RequestContext';\nimport { toast } from 'react-toastify';\nimport { putOrder } from '../../lib/StitchFunctions';\n\nconst RequestProvider = props => {\n    const { register, errors, clearError, handleSubmit } = useForm();\n    \n    const [step, setStep] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [formData, setFormData] = useState({ \n        firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], dropoff: null });\n\n    const validateStep1 = (values) => {\n        setFormData({ ...formData, values });\n        // todo handle address validation logic\n        setStep(2)\n    };\n\n    const validateStep2 = () => {\n        // todo handle requested item validation\n        setStep(3)\n    };\n\n    const validateStep3 = async() => {\n        // todo handle dropoff time validation\n        setLoading(true);\n        // format put request data\n        const formattedData = formatRequest();\n        const response = await putOrder(formattedData);\n        setLoading(false);\n        if(response && !response.errorCode){\n            toast('Request submitted successfully!')\n            setStep(4)\n        } else {\n            toast('There was an error submitting your request.');\n        }\n    };\n\n    const formatRequest = () => {\n        // todo write logic to format the request object to match the data model given by backend\n        const body = {};\n        body.firstName = formData.firstName;\n        body.lastName = formData.lastName;\n        body.address = formData.address;\n        body.phoneNumber =  formData.phoneNumber;\n        body.zipcode = formData.zipcode;\n        body.time = formData.dropoff.id;\n        body.type = 'REQUEST';\n        body.items = formData.items.map(item => ({name: item.value, quantity: 1}));\n        body.additionalInfo = formData.additionalInfo;\n        body.householdNum = formData.householdNum;\n        return body; \n    };\n\n    return (\n        <RequestContext.Provider \n            value={{\n                state: {\n                    step, // shorthand for step: step\n                    loading,\n                    formData,\n                    errors\n                    // state values you want to expose go here\n                },\n                setStep: (num) => setStep(num),\n                setLoading: (bool) => setLoading(bool),\n                setFormData: (data) => setFormData(data),\n                register: () => register(),\n                clearError: () => clearError(),\n                handleSubmit: (e) => handleSubmit(e),\n                validateStep1: () => validateStep1(),\n                validateStep2: () => validateStep2(),\n                validateStep3: () => validateStep3() \n                // functions you want to expose go here\n            }}\n        >\n            {props.children}\n        </RequestContext.Provider>\n    )\n};\n\nexport default RequestProvider;","import React, { useState } from 'react';\nimport DispatchContext from './DispatchContext';\nimport { getOrders } from '../../lib/StitchFunctions';\n\nconst DispatchProvider = props => {\n    const [orders, setOrders] = useState(false)\n    const [selectedOrder, setSelectedOrder] = useState(false)\n    const [typeFilter, setTypeFilter] = useState(false)\n    const [statusFilter, setStatusFilter] = useState(false)\n\n    const getOrdersForDispatcher = async () =>{\n\n        try{\n            const prom = await getOrders()\n            if(prom.errorCode) return //set into global error state or local?\n            setOrders(prom)\n        } catch(e){\n            console.log(e)\n            //set error into global state?\n        }\n    } \n\n    return (\n        <DispatchContext.Provider \n            value={{\n                state: {\n                    // put your state that you want to expose in here\n                    orders: orders,\n                    selectedOrder: selectedOrder,\n                    typeFilter: typeFilter,\n                    statusFilter: statusFilter\n                },\n                // expose functions here\n                getOrdersForDispatcher: () => getOrdersForDispatcher(),\n                setSelectedOrder: (obj) => setSelectedOrder(obj),\n                setTypeFilter: (str) => setTypeFilter(str),\n                setStatusFilter: (str) => setStatusFilter(str)\n            }}\n        >\n            {props.children}\n        </DispatchContext.Provider>\n    )\n};\n\nexport default DispatchProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ContextWrapper from './ContextWrapper';\n\nReactDOM.render(<ContextWrapper><App /></ContextWrapper>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// manage the context providers in here, this function will just return the context providers which wraps app.js\n// global state is the only provider and consumer most likely in here\nimport React from 'react';\nimport GlobalStateProvider from \"./contexts/Global/GlobalStateProvider\";\nimport GlobalStateContext from \"./contexts/Global/GlobalStateContext\";\nimport DonationProvider from \"./contexts/DonationModule/DonationProvider\";\nimport RequestProvider from './contexts/RequestModule/RequestProvider';\nimport DispatchProvider from './contexts/DispatcherModule/DispatchProvider';\n\n// if you want you can pass the globalContext right into your provider as a prop. It will then be available\nexport default props => (\n    <GlobalStateProvider>\n        <GlobalStateContext.Consumer>\n            {globalContext => (\n                <DonationProvider>\n                    <RequestProvider>\n                        <DispatchProvider>\n                            {props.children}\n                        </DispatchProvider>\n                    </RequestProvider>\n                </DonationProvider>\n            )}\n        </GlobalStateContext.Consumer>\n    </GlobalStateProvider>\n)","module.exports = __webpack_public_path__ + \"static/media/fulllogo.ec71ed57.png\";"],"sourceRoot":""}