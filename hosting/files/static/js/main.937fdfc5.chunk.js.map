{"version":3,"sources":["components/StayNeighborBrand.js","components/Home.js","components/RequestModule/RequestModuleHome.js","components/DonationModule/DonationModuleHome.js","components/Error.js","components/Loading.js","lib/StitchFunctions.js","components/Order/OrderComplete.js","components/DispatchModule/ConfirmChangesModal.js","components/GoogleMaps/Marker.js","components/GoogleMaps/GoogleMap.js","components/GoogleMaps/MarkerInfoWindowGmapsObj.js","components/DispatchModule/DispatchModuleHome.js","contexts/Global/GlobalStateContext.js","contexts/RequestModule/RequestContext.js","contexts/DonationModule/DonationContext.js","contexts/DispatcherModule/DispatchContext.js","App.js","serviceWorker.js","contexts/Global/GlobalStateProvider.js","contexts/DonationModule/DonationProvider.js","contexts/RequestModule/RequestProvider.js","contexts/DispatcherModule/DispatchProvider.js","index.js","ContextWrapper.js","images/fulllogo.png"],"names":["StayNeighborBrand","className","style","paddingTop","width","maxWidth","src","fulllogo","Home","props","backgroundColor","paddingBottom","fontSize","color","href","height","marginTop","fontWeight","onClick","history","push","paddingRight","paddingLeft","size","window","location","replace","itemList","id","label","value","dropoff","time","RequestModuleHome","requestContext","state","step","loading","formData","errors","showModal","register","handleSubmit","clearError","setShowModal","submitRequest","stepOneIsValid","stepTwoIsValid","stepThreeIsValid","setFormData","setLoading","setStep","validateStep1","validateStep2","validateStep3","fontFamily","onSubmit","required","ref","onChange","e","firstName","target","name","type","placeholder","marginBottom","message","lastName","phoneNumber","emailAddress","address","zipcode","zipCode","householdNum","document","getElementById","innerText","disabled","map","item","itemIndex","items","findIndex","a","itemsList","splice","key","freeTextItems","index","list","length","title","additionalInfo","rows","Modal","show","onHide","Body","borderTop","letterSpacing","listStyleType","Spinner","animation","role","DonationModuleHome","donationContext","submitDonation","streetAddress","Error","globalContext","login","Loading","establishMongoDbConnection","client","intializeStitchClient","errorCode","errorMessage","mongodb","getServiceClient","RemoteMongoClient","factory","db","err","initalizeStitchServiceClient","Stitch","initializeDefaultAppClient","defaultAppClient","anonymousUserLogin","auth","loginWithCredential","AnonymousCredential","console","log","getOrders","callFunction","result","putOrder","body","isLoggedIn","logUserOut","toString","checkUserAuth","hasRedirectResult","handleRedirectResult","credential","GoogleRedirectCredential","loginWithRedirect","logout","getUserInfo","refreshCustomData","collection","findOne","user_id","user","currentUser","customData","getDrivers","assignOrder","orderId","driverEmail","updateOrderStatus","orderStatus","updateOrderFields","order","addressUpdated","_id","getOrder","completeOrder","OrderComplete","useHistory","useState","orderUpdateStatus","setOrderUpdateStatus","pathname","split","pop","useEffect","orderCompletion","res","status","ConfirmChangesModal","dispatchContext","showConfirmModal","orderChanges","selectedOrder","setShowConfirmModal","updateOrder","driver","Object","keys","change","originalValue","updatedValue","Wrapper","styled","div","Marker","alt","text","defaultProps","main","GoogleMap","children","bootstrapURLKeys","last","getInfoWindowString","place","MarkerInfoWindowGmapsObj","handleApiLoaded","maps","places","updateSelectedMarker","selectedMarker","setState","gMap","gMaps","markers","infowindows","this","forEach","position","lat","Number","geometry","lng","long","data","icon","path","SymbolPath","BACKWARD_CLOSED_ARROW","strokeColor","scale","FORWARD_CLOSED_ARROW","InfoWindow","content","slice","marker","i","addListener","open","setSelectedOrder","close","coordinates","defaultZoom","center","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","orders","Component","DispatchModuleHome","typeFilter","statusFilter","drivers","getOrdersForDispatcher","setTypeFilter","setStatusFilter","setOrderChanges","getDriversForDispatcher","setFormValue","isAuthenticated","checkAuthStatus","getUser","setIsAuthenticated","filteredOrders","deriveDriverName","assignedToDriver","email","filter","applyFilters","profile","toast","maxHeight","class","aria-label","marginLeft","overflowY","charAt","toUpperCase","date","hoursSince","differenceInHours","Date","differenceInMinutes","differenceInDays","timeSince","dateCreated","toLowerCase","display","for","aria-describedby","or","enabled","JSON","parse","stringify","selected","find","wordWrap","zipcodes","sort","defaultValue","toLocaleDateString","toLocaleTimeString","GlobalStateContext","React","createContext","RequestContext","DonationContext","DispatchContext","App","Consumer","autoClose","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","toastClassName","progressClassName","exact","render","Boolean","hostname","match","GlobalStateProvider","setErrors","setUser","prom","Provider","errs","bool","DonationProvider","useForm","formattedData","formatRequest","response","quantity","num","RequestProvider","DispatchProvider","setOrders","setDrivers","notify","b","addressChanged","newFormData","obj","str","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.937fdfc5.chunk.js","sourcesContent":["import React from 'react'\r\nimport fulllogo from '../images/fulllogo.png'\r\n\r\nexport default function StayNeighborBrand(){\r\n    return (\r\n        <div className=\"mr-auto ml-auto text-center\" style={{ paddingTop: '7rem' }}>\r\n            <img className=\"mr-auto ml-auto\" style={{ width:'50%',maxWidth:'25rem' }} src={fulllogo} />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport StayNeighborBrand from './StayNeighborBrand'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n\r\nexport default function Home(props) {\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                </div>\r\n            </nav>\r\n            <div style={{ backgroundColor: \"rgb(255, 255, 255)\", height: '100vh', color: 'white' }}>\r\n                <StayNeighborBrand/>\r\n                <div className=\"lead col-10 col-xl-6 col-md-8 mr-auto ml-auto text-center\" style={{ fontSize: '1.25rem', marginTop: '2rem', color: 'rgb(0, 0, 0)', fontWeight: 400 }}>\r\n                    A volunteer-powered network for essential supplies - delivered in a safe, healthy, and organized way.\r\n                </div>\r\n                <div style={{ marginTop: '3rem' }}>\r\n                    <div className=\"col-xl-6 col-12 text-center mr-auto ml-auto\">\r\n                        <button onClick={() => props.history.push('/request')} className=\"btn col-10 underline-hover btn-outline-brand\" style={{ color: 'white', fontSize: '1.25rem', paddingRight: 50, paddingLeft: 50, paddingTop: 10, paddingBottom: 10 }}>I <b style={{ fontWeight: 'bolder' }}>need</b> supplies</button>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-12 text-center mt-4 mr-auto ml-auto\">\r\n                        <button onClick={() => props.history.push('/donate')} className=\"btn col-10 underline-hover btn-outline-brand\" style={{ color: 'white', fontSize: '1.25rem', paddingRight: 50, paddingLeft: 50, paddingTop: 10, paddingBottom: 10 }}>I <b style={{ fontWeight: 'bolder' }}>have</b> supplies</button>\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginTop: 15 }} className=\"col-12 text-center\">\r\n                    <p onClick={() => props.history.push('/dispatcher')} className=\"lead underline-hover\" style={{ fontSize: '1.25rem', color: 'rgb(158, 69, 183)', paddingTop: 10, fontWeight: 400 }}>Dispatchers  <ChevronRight size={18} /></p>\r\n                </div>\r\n\r\n                <nav className=\"navbar fixed-bottom\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    <div className=\"mr-auto ml-auto\">\r\n                        <a onClick={() => window.location.replace('https://www.stayneighbor.com')} style={{ fontSize: 11, color: 'white' }} href=\"#\">StayNeighbor is a community-built platform.  <b style={{ color: 'yellow' }}>GET INVOLVED</b></a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {Modal,Spinner} from 'react-bootstrap'\r\nimport { ArrowLeftCircle, Circle, CheckCircle, Plus, CheckSquare, Check, Square, PlusSquare, Trash2 } from 'react-feather';\r\nimport StayNeighborBrand from '../StayNeighborBrand';\r\n\r\nconst itemList = [\r\n    { id: 1, label: 'Toilet Paper', value: 'toilet paper' },\r\n    { id: 2, label: 'Paper Towels', value: 'paper towels' },\r\n    { id: 3, label: 'Milk', value: 'milk' },\r\n    { id: 4, label: 'Eggs', value: 'eggs' },\r\n    { id: 5, label: 'Batteries - AA', value: 'batteries aa' },\r\n    { id: 6, label: 'Batteries - AAA', value: 'batters aaa' }\r\n];\r\n\r\nconst dropoff = [\r\n    { id: 'morning', label: 'Morning', time: '9am - 12pm' },\r\n    { id: 'afternoon', label: 'Afternoon', time: '12pm - 4pm' },\r\n    { id: 'evening', label: 'Evening', time: '4pm - 9pm' },\r\n];\r\n\r\nexport default function RequestModuleHome(props) {\r\n    const {step, loading, formData, errors, showModal} = props.requestContext.state; // provider state values\r\n    const { register, clearError, handleSubmit, setShowModal, submitRequest, stepOneIsValid, stepTwoIsValid, stepThreeIsValid, setLoading, setFormData, setStep, validateStep1, validateStep2, validateStep3} = props.requestContext; // provider functions\r\n\r\n    if (step == 1) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: '1.75rem', fontWeight: 'bold' }}>\r\n                        Howdy, Neighbor!\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: '.9rem' }}>\r\n                        Let's get started with some information.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>While we need to share details with our volunteers, we will always keep your data private.</i>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 30 }} className=\"text-center\">\r\n                        <form onSubmit={handleSubmit(validateStep1)}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input required={true} ref={register({ required: true })} onChange={(e) => {setFormData({...formData, firstName: e.target.value})}} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" value={formData.firstName} className=\"form-control lead\" id=\"inputEmail4\" placeholder=\"First Name\"></input>\r\n                                    {errors.firstName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.firstName.message || errors.firstName.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input required={true} onChange={(e) => {setFormData({...formData, lastName: e.target.value})}} name='lastName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.lastName} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Last Name\"></input>\r\n                                    {errors.lastName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.lastName.message || errors.lastName.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input required={true} onChange={(e) => {setFormData({...formData, phoneNumber: e.target.value})}} name='phoneNumber' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.phoneNumber} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Phone Number\"></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input required={true} onChange={(e) => {setFormData({...formData, emailAddress: e.target.value})}} name='emailAddress' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.emailAddress} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Email Address\"></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input required={true} onChange={(e) => {setFormData({...formData, address: e.target.value})}} name='streetAddress' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.address} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Address\"></input>\r\n                                    {errors.address && <p style={{ color: 'red', marginBottom: 0 }}>{errors.address.message || errors.address.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input required={true} name='zipCode' onChange={(e) => {setFormData({...formData, zipcode: e.target.value})}} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.zipcode} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Zip Code\"></input>\r\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group mr-auto ml-auto col-xl-4 col-md-8 mr-auto ml-auto text-center\">\r\n                                    <span className=\"text-center\" style={{ fontWeight: 'bolder', fontSize: '2rem' }} type=\"number\" id=\"peopleInHousehold\">{formData.householdNum}</span>\r\n                                    <input required={true} onChange={e => setFormData({...formData, householdNum: e.target.value})} name=\"peopleInHousehold\" name='phoneNumber' type=\"range\" value={formData.householdNum} onChange={(e) => {\r\n                                        document.getElementById('peopleInHousehold').innerText = e.target.value\r\n                                        setFormData({...formData, householdNum: e.target.value})\r\n                                     }} className=\"custom-range\" min=\"1\" max=\"10\" id=\"customRange2\"></input>\r\n                                    <label className='lead'>People in Household</label>\r\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {!loading && <button type=\"submit\" disabled={stepOneIsValid()} className=\"col-xl-8 col-12 mr-auto ml-auto btn mt-4 btn-primary-hover\">Continue</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step == 2) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => setStep(1)} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"col-11 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                        What can we provide?\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                        Please let us know any essential supplies you might need and our dispatchers will take it from here.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>Please, only select things you or your ones NEED.</i>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ marginTop: '2rem' }} className=\"col-10 mr-auto ml-auto\">\r\n                    <form>\r\n                        <div className=\"form-row mr-auto ml-auto\">\r\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {itemList.map(item => {\r\n                                        var itemIndex = formData.items.findIndex(a => a.value == item.value)\r\n                                        if (formData.items && itemIndex > -1) {\r\n                                            var itemsList = [...formData.items]\r\n                                            itemsList.splice(itemIndex, 1)\r\n                                            return <li key={item.id} onClick={() => setFormData({ ...formData, items: itemsList })} className=\"list-group-item underline-hover\"><CheckSquare className=\"mr-3 brand\" size={18} />{item.label}</li>\r\n                                        } else {\r\n                                            return (\r\n                                                <li key={item.id} onClick={() => setFormData({ ...formData, items: [...formData.items, item] })} className=\"underline-hover list-group-item d-flex\"><Square className=\"mr-3 brand\" size={18} />{item.label}</li>\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                                {formData.freeTextItems.map((item, index) => {\r\n                                    return (\r\n                                        <div className=\"d-flex\">\r\n                                            <input onChange={(e) => {\r\n                                                var list = [...formData.freeTextItems]\r\n                                                list[index] = e.target.value\r\n                                                setFormData({...formData, freeTextItems: list})\r\n                                            }} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className=\"form-control pl-3 pr-3\" id=\"newListItem\" placeholder=\"+ Add additional Item\" value={item}>\r\n                                            </input>\r\n                                            <Trash2 onClick={() => {\r\n                                                var list = [...formData.freeTextItems]\r\n                                                if(list.length === 1) {\r\n                                                    list[index] = ''\r\n                                                } else {\r\n                                                    list.splice(index,1)\r\n                                                }\r\n                                                setFormData({...formData, freeTextItems: list})\r\n                                            }} style={{height:'100%'}} className=\"mt-2 hover brand\"/>\r\n                                        </div>\r\n                                        \r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-row'>\r\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                                <button type=\"button\" onClick={() => setFormData({...formData, freeTextItems: [...formData.freeTextItems, '']})} className=\"btn btn-sm btn-outline-brand\"><Plus /> Add Another</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mr-auto ml-auto text-center\">\r\n                            {!loading && <button title={formData && (!formData.items || (formData.items && formData.items.length === 0)) ? 'Please select an item' : ''} onClick={() => validateStep2()} disabled={stepTwoIsValid()}  type=\"submit\" className=\"btn text-center mr-auto ml-auto col-xl-6 col-12 mt-1 btn-primary-hover\">Continue</button>}\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 3) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => setStep(1)} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '7rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                        Just a few more details.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                        Now we just need some details for our drivers so they can safely deliver your supplies.\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ marginTop: 50 }} className=\"col-xl-6 col-10 mr-auto ml-auto\">\r\n                    <form onSubmit={handleSubmit(validateStep3)}>\r\n                        <div className=\"form-row\">\r\n                            <span>DROPOFF TIME</span>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {dropoff.map(item => {\r\n                                        return <li key={item.id} onClick={() => setFormData({...formData, dropoff: item})} className=\"list-group-item underline-hover\">{formData.dropoff === item ? <CheckCircle className=\"mr-3 brand\" size={18} /> : <Circle className=\"mr-3 brand\" size={18} />}{item.label} ({item.time})</li>\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                                <label>Special Instructions</label>\r\n                                <textarea style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} onChange={e => setFormData({...formData, additionalInfo: e.target.value})} placeholder=\"Enter any special instructions for our driver, e.g. ring doorbell, leave at front desk, etc..\" className=\"form-control text-black\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {!loading && <button type=\"submit\" disabled={stepThreeIsValid()} className=\"btn col-12 mt-4 btn-primary-hover\">Continue</button>}\r\n                    </form>\r\n                </div>\r\n                <Modal style={{paddingTop:75}} size='lg' show={showModal} onHide={() => {}}>\r\n                    <Modal.Body style={{borderTop:'10px solid #6f2c8e'}}>\r\n                        <div className=\"col-12 text-center\">\r\n                            <span style={{fontSize:20,fontWeight:600,color:\"#6f2c8e\",letterSpacing:'.025rem'}}>Is everything correct?</span>\r\n                        </div>\r\n                        <div className=\"col-12 row\" style={{marginTop:25}}>\r\n                            <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                                <div className=\"border-bottom pb-1 row\">\r\n                                    <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Your Info</div>\r\n                                    <div onClick={() => {\r\n                                        setStep(1)\r\n                                        setShowModal(false)\r\n                                        }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                                </div>\r\n                                <div>\r\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.firstName} {formData.lastName}</li>\r\n                                    <li className=\"mb-1 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.address}</li>\r\n                                    <li className=\"mb-3 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.zipcode}</li>\r\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.phoneNumber}</li>\r\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.emailAddress}</li>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                                <div className=\"border-bottom pb-1 row\">\r\n                                    <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Items</div>\r\n                                    <div onClick={() => {\r\n                                        setStep(2)\r\n                                        setShowModal(false)\r\n                                        }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                                </div>\r\n                                <div>\r\n                                    {formData.items.map(item => {\r\n                                        return (\r\n                                            <li className=\"ml-3 lead\" style={{fontSize:14}}>{item.value}</li>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 row\" style={{marginTop:25}}>\r\n                            <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                                <div className=\"border-bottom row pb-1\">\r\n                                    <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Drop Off Time</div>\r\n                                    <div onClick={() => {\r\n                                        setStep(3)\r\n                                        setShowModal(false)\r\n                                        }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                                </div>\r\n                                <div>\r\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.dropoff ? `${formData.dropoff.label} (${formData.dropoff.time})` : ''}</li>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-5 mr-auto ml-auto\"></div>\r\n                        </div>\r\n                        <div className=\"col-12 mr-auto ml-auto mt-4 text-center\">\r\n                            {!loading && <button onClick={submitRequest} className=\"btn col-12 btn-primary-hover\" type=\"button\">Submit</button>}\r\n                            {loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\">\r\n                                <Spinner animation=\"border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </Spinner>\r\n                            </button>}\r\n                            <span className=\"text-center mr-auto ml-auto\">Please note our deliveries are contactless, we will leave the item where you specify.</span>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if(step == 4){\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => {\r\n                            setStep(1)\r\n                            props.history.push('/')\r\n                        }} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                    <StayNeighborBrand/>\r\n                    <div className=\"mr-auto ml-auto text-center mt-3\">\r\n                        <span className=\"lead\" style={{fontSize:'3rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Help is on the way.</span>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                        <span className=\"lead\" style={{fontSize:'1.5rem',color:\"rgba(0, 0, 0, 0.42)\"}}>When your order is assigned to a driver, we will let you know.</span>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                        <button onClick={() => {\r\n                            props.history.push('/')\r\n                            setStep(1)\r\n                        }} className=\"btn btn-outline-brand btn-lg\">Home</button>\r\n                        <button onClick={() => window.location.replace('https://stayneighbor.com')} className=\"btn btn-lg btn-outline-brand\">Learn More</button>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { ArrowLeftCircle, Circle, CheckCircle, Plus, CheckSquare, Square } from 'react-feather'\r\nimport {Modal,Spinner} from 'react-bootstrap'\r\nimport StayNeighborBrand from '../StayNeighborBrand'\r\n\r\nconst dropoff = [\r\n    { id: 'morning', label: 'Morning', time: '9am - 12pm' },\r\n    { id: 'afternoon', label: 'Afternoon', time: '12pm - 4pm' },\r\n    { id: 'evening', label: 'Evening', time: '4pm - 9pm' },\r\n];\r\n\r\nconst itemList = [\r\n    { id: 1, label: 'Toilet Paper', value: 'toilet paper' },\r\n    { id: 2, label: 'Paper Towels', value: 'paper towels' },\r\n    { id: 3, label: 'Milk', value: 'milk' },\r\n    { id: 4, label: 'Eggs', value: 'eggs' },\r\n    { id: 5, label: 'Batteries - AA', value: 'batteries aa' },\r\n    { id: 6, label: 'Batteries - AAA', value: 'batters aaa' }\r\n];\r\n\r\nexport default function DonationModuleHome(props) {\r\n    const {step, loading, showModal, formData, errors} = props.donationContext.state; // provider state values\r\n    const { stepOneIsValid, stepTwoIsValid, stepThreeIsValid, register, clearError, handleSubmit, setLoading, setFormData, setStep, validateStep1, validateStep2, validateStep3, setShowModal, submitDonation} = props.donationContext; // provider functions\r\n\r\n    if (step === 1) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 underline-hover\" onClick={() => props.history.push('/')} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: '1.75rem', fontWeight: 'bold' }}>\r\n                        Howdy, Neighbor!\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: '.9rem' }}>\r\n                        Let's get started with some information.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>While we need to share details with our volunteers, we will always keep your data private.</i>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 30 }} className=\"text-center\">\r\n                        <form onSubmit={handleSubmit(validateStep1)}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input onChange={(e) => {setFormData({...formData, firstName: e.target.value})}} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"First Name\" value={formData.firstName}></input>\r\n                                    {errors.firstName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.firstName.message || errors.firstName.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input name='lastName' onChange={(e) => setFormData({...formData, lastName: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Last Name\" value={formData.lastName}></input>\r\n                                    {errors.lastName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.lastName.message || errors.lastName.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input name='phoneNumber' onChange={(e) => setFormData({...formData, phoneNumber: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Phone Number\" value={formData.phoneNumber}></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input name='emailAddress' onChange={(e) => setFormData({...formData, emailAddress: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Email Address\" value={formData.emailAddress}></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input name='streetAddress' onChange={(e) => setFormData({...formData, address: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Street Address\" value={formData.address}></input>\r\n                                    {errors.streetAddress && <p style={{ color: 'red', marginBottom: 0 }}>{errors.streetAddress.message || errors.streetAddress.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input name='zipCode' onChange={(e) => setFormData({...formData, zipcode: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Zip Code\" value={formData.zipcode}></input>\r\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {!loading && <button onClick={() => validateStep1()} disabled={stepOneIsValid()} type=\"submit\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"col-xl-8 mr-auto btn-primary-hover ml-auto col-12 btn mt-4\">Continue</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 2) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 underline-hover\" onClick={() => setStep(1)} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"col-11 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                        What can you donate?\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                        Please let us know any supplies you can donate and our dispatchers will take it from here.\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ marginTop: '2rem' }} className=\"col-10 mr-auto ml-auto\">\r\n                    <form>\r\n                        <div className=\"form-row mr-auto ml-auto\">\r\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {itemList.map(item => {\r\n                                        var itemIndex = formData.items.findIndex(a => a.value == item.value)\r\n                                        if (formData.items && itemIndex > -1) {\r\n                                            var itemsList = [...formData.items]\r\n                                            itemsList.splice(itemIndex, 1)\r\n                                            return <li key={item.id} onClick={() => setFormData({ ...formData, items: itemsList })} className=\"list-group-item underline-hover\"><CheckSquare className=\"mr-3 brand\" size={18} />{item.label}</li>\r\n                                        } else {\r\n                                            return (\r\n                                                <li key={item.id} onClick={() => setFormData({ ...formData, items: [...formData.items, item] })} className=\"ml-1 list-group-item underline-hover\"><Square className=\"mr-3 brand\" size={18} />{item.label}</li>\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                                <input name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"+ Add additional Item\"></input>\r\n                                <button className=\"btn btn-sm btn-outline-brand mt-3\"><Plus /> Add Another</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mr-auto ml-auto text-center\">\r\n                            {!loading && <button onClick={() => validateStep2()} disabled={stepTwoIsValid()} type=\"submit\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"btn btn-primary-hover text-center mr-auto ml-auto col-xl-6 col-12 mt-4\">Continue</button>}\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 3) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3\" onClick={() => setStep(1)} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '7rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                        Just a few more details.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                        Now we just need some details for our drivers so they can safely pick up your donations.\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ marginTop: 50 }} className=\"col-xl-6 col-10 mr-auto ml-auto\">\r\n                    <form onSubmit={handleSubmit(validateStep3)}>\r\n                        <div className=\"form-row\">\r\n                            <span>DROPOFF TIME</span>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {dropoff.map(item => {\r\n                                        return <li key={item.id} onClick={() => setFormData({...formData, dropoff: item})} className=\"list-group-item underline-hover\">{formData.dropoff === item ? <CheckCircle className=\"mr-3 brand\" size={18} /> : <Circle className=\"mr-3 brand\" size={18} />}{item.label} ({item.time})</li>\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                                <label>Special Instructions</label>\r\n                                <textarea onChange={e => setFormData({...formData, additionalInfo: e.target.value})} style={{backgroundColor: \"rgba(158, 69, 183, 0.14)\"}} placeholder=\"Enter any special instructions for our driver, e.g. ring doorbell, pick up box from front desk, etc..\" className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {!loading && <button type=\"submit\" disabled={stepThreeIsValid()} className=\"btn btn-primary-hover col-12 mt-4\">Continue</button>}\r\n                    </form>\r\n                </div>\r\n                <Modal style={{paddingTop:75}} size='lg' show={showModal} onHide={() => {}}>\r\n                    <Modal.Body style={{borderTop:'10px solid #6f2c8e'}}>\r\n                        <div className=\"col-12 text-center\">\r\n                            <span style={{fontSize:20,fontWeight:600,color:\"#6f2c8e\",letterSpacing:'.025rem'}}>Confirm your donation.</span>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-12 row\" style={{marginTop:25}}>\r\n                            <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                                <div className=\"border-bottom pb-1 row\">\r\n                                    <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Your Info</div>\r\n                                    <div onClick={() => {\r\n                                        setStep(1)\r\n                                        setShowModal(false)\r\n                                        }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                                </div>\r\n                                <div>\r\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.firstName} {formData.lastName}</li>\r\n                                    <li className=\"mb-1 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.address}</li>\r\n                                    <li className=\"mb-3 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.zipcode}</li>\r\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.phoneNumber}</li>\r\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.emailAddress}</li>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                                <div className=\"border-bottom pb-1 row\">\r\n                                    <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Items</div>\r\n                                    <div onClick={() => {\r\n                                        setStep(2)\r\n                                        setShowModal(false)\r\n                                        }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                                </div>\r\n                                <div>\r\n                                    {formData.items.map(item => {\r\n                                        return (\r\n                                            <li className=\"ml-3 lead\" style={{fontSize:14}}>{item.value}</li>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 row\" style={{marginTop:25}}>\r\n                            <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                                <div className=\"border-bottom row pb-1\">\r\n                                    <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Pick Up Time</div>\r\n                                    <div onClick={() => {\r\n                                        setStep(3)\r\n                                        setShowModal(false)\r\n                                        }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                                </div>\r\n                                <div>\r\n                                    <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.dropoff ? `${formData.dropoff.label} (${formData.dropoff.time})` : ''}</li>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-5 mr-auto ml-auto\"></div>\r\n                        </div>\r\n                        <div className=\"col-12 mr-auto ml-auto mt-4 text-center\">\r\n                            {!loading && <button onClick={submitDonation} className=\"btn col-12 btn-primary-hover\" type=\"button\">Send My Donation</button>}\r\n                            {loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\">\r\n                                <Spinner animation=\"border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </Spinner>\r\n                            </button>}\r\n                            <span className=\"text-center mr-auto ml-auto\">Please note our pickups are contactless, we will pickup the items from you specify</span>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if(step == 4){\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => {\r\n                            props.history.push('/')\r\n                            setStep(1)\r\n                        }} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\" style={{paddingTop:'8rem'}}>\r\n                    <StayNeighborBrand/>\r\n                    <div className=\"mr-auto ml-auto text-center mt-4\">\r\n                        <span className=\"lead\" style={{fontSize:'4rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Thank you!</span>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                        <span className=\"lead\" style={{fontSize:'2.0rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Words cannot express our gratitude.</span>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                        <span className=\"lead\" style={{fontSize:'1.5rem',color:\"rgba(0, 0, 0, 0.42)\"}}>A driver will pickup your order and ensure it reaches someone in need.</span>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                        <button onClick={() => {\r\n                            props.history.push('/')\r\n                            setStep(1)\r\n                        }} className=\"btn btn-outline-brand btn-lg\">Home</button>\r\n                        <button onClick={() => window.location.replace('https://stayneighbor.com')} className=\"btn btn-outline-brand btn-lg\">Learn More</button>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {ArrowLeftCircle} from 'react-feather'\r\n\r\nexport default function Error(props){\r\n    var { errors } = props.globalContext.state\r\n\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6F2C8E', paddingBottom: 15 }}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                </div>\r\n            </nav>\r\n            <div className=\"col-12 row mr-auto\" style={{marginTop:75}}>\r\n                <div style={{paddingLeft:0,paddingRight:0,width:'20%'}}>\r\n                    {errors.login}\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Loading(){\r\n    return (\r\n        <div className=\"text-center my-4 loading\">\r\n            <h5>Loading...</h5>\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Stitch,RemoteMongoClient,AnonymousCredential,GoogleRedirectCredential, BSON} from 'mongodb-stitch-browser-sdk'\r\n\r\nfunction getAppId(){\r\n    if(process.env.NODE_ENV !== 'development') return 'stayneighbor-bjuma'\r\n    if(process.env.NODE_ENV === 'development') return 'stayneighbor-bjuma'\r\n}\r\n\r\nfunction getDb(){\r\n\r\n    if(process.env.NODE_ENV === 'development') return 'stayneighbor'\r\n    if(process.env.NODE_ENV !== 'development') return 'stayneighbor'\r\n}\r\n\r\nexport function establishMongoDbConnection(){\r\n    //get our default app client\r\n    const client = intializeStitchClient()\r\n\r\n    if(client.errorCode) return {errorCode: '002', errorMessage: client}\r\n\r\n    const mongodb = initalizeStitchServiceClient(client)\r\n\r\n    if(mongodb.errorCode) return {errorCode: '003', errorMessage: mongodb}\r\n    \r\n    return mongodb\r\n}\r\n\r\nexport function initalizeStitchServiceClient(client){\r\n    try{\r\n        return client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db(getDb());\r\n    } catch(err){\r\n        return {errorCode: '002', errorMessage: err}\r\n    }\r\n}\r\n\r\nexport function intializeStitchClient(){\r\n    try {\r\n        //return Stitch.initializeDefaultAppClient('stayneighbor-bjuma');\r\n        return Stitch.initializeDefaultAppClient(getAppId());\r\n    } catch(err){\r\n        return Stitch.defaultAppClient\r\n    }\r\n}\r\n\r\nexport async function anonymousUserLogin(){\r\n    try {\r\n        var client = intializeStitchClient()\r\n        var auth = await client.auth.loginWithCredential(new AnonymousCredential)\r\n        console.log(auth)\r\n    } catch(e) {\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function getOrders(){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"listOrders\", []);\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function putOrder(body){\r\n    try{\r\n        //get our default app client\r\n        const client = intializeStitchClient()\r\n        if(!client.auth.isLoggedIn) await anonymousUserLogin()\r\n\r\n        var result = await client.callFunction(\"createOrder\", [body]);\r\n        logUserOut()\r\n        // if(result && result.status !== '200') return result\r\n        // else return true\r\n        return result\r\n    } catch(e){\r\n        return {errorCode: '002', errorMessage: e.toString()}\r\n    }\r\n}\r\n\r\nexport async function checkUserAuth(){\r\n    try {\r\n        //get our default app client\r\n        const client = intializeStitchClient()\r\n\r\n        if(client.auth.isLoggedIn){\r\n            return true\r\n        } else {\r\n            if(client.auth.hasRedirectResult()){\r\n                var result = await client.auth.handleRedirectResult()\r\n                if(result.isLoggedIn === true) return true\r\n            }\r\n\r\n            const credential = new GoogleRedirectCredential()\r\n            await client.auth.loginWithRedirect(credential)\r\n            return null\r\n        }\r\n    } catch (e){\r\n\r\n    }\r\n}\r\n\r\nexport async function logUserOut(){\r\n    await intializeStitchClient().auth.logout()\r\n    return true\r\n}\r\n\r\nexport async function getUserInfo(){\r\n    var client = intializeStitchClient()\r\n    var db = establishMongoDbConnection()\r\n\r\n    await client.auth.refreshCustomData()\r\n\r\n    var user = await db.collection('user_data').findOne({user_id: client.auth.user.id})\r\n\r\n    if(!user) return false\r\n\r\n    return {...client.auth.currentUser, customData: {...user}}\r\n\r\n    //return intializeStitchClient().auth.currentUser\r\n}\r\n\r\nexport async function getDrivers(){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"getDrivers\", [])\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function assignOrder(orderId, driverEmail){\r\n    const client = intializeStitchClient()\r\n    try {\r\n        var result = await client.callFunction(\"assignOrder\", [orderId.toString(), driverEmail]);\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        console.log(result)\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function updateOrderStatus(orderId, orderStatus){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"updateOrderStatus\", [orderId.toString(), orderStatus]);\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\n\r\nexport async function updateOrderFields(order, addressUpdated){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"updateOrder\", [order._id.toString(), order, addressUpdated])\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function getOrder(orderId){\r\n    try{\r\n        var db = establishMongoDbConnection()\r\n        var user = await db.collection('orders').findOne({_id: orderId})\r\n        return user\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport async function completeOrder(orderId){\r\n    try {\r\n\r\n        const client = intializeStitchClient()\r\n        //Non logged in drivers should be able to complete\r\n        if(!client.auth.isLoggedIn) await anonymousUserLogin()\r\n\r\n        return await client.callFunction(\"completeOrder\", [orderId.toString()]);\r\n\r\n    } catch(e){\r\n        console.log(e);\r\n        return e\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport Loading from '../Loading'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {ArrowLeftCircle} from 'react-feather';\r\nimport {completeOrder} from '../../lib/StitchFunctions';\r\nimport StayNeighborBrand from '../StayNeighborBrand'\r\nimport './OrderComplete.scss';\r\n\r\nconst OrderComplete = props => {\r\n    let history = useHistory();\r\n    const [orderUpdateStatus, setOrderUpdateStatus] = useState(null)\r\n    const orderId = history.location.pathname.split('/').pop();\r\n\r\n    useEffect(() => {\r\n        if(orderUpdateStatus === null && orderId != '') orderCompletion(orderId)\r\n    },[orderUpdateStatus])\r\n\r\n    const orderCompletion = async () => {\r\n        let res = await completeOrder(orderId);\r\n        setOrderUpdateStatus(res)\r\n    }\r\n\r\n    if(orderUpdateStatus === null && (orderId !== '' && orderId != 'complete')) return <Loading/>\r\n\r\n    return (\r\n        <main className='order-complete'>\r\n            <nav className=\"navbar fixed-top col-12\" style={{backgroundColor: '#6F2C8E', paddingBottom: 15}}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')}/>\r\n                    <span style={{fontSize: 18, color: 'white'}} href=\"#\">StayNeighbor</span>\r\n                </div>\r\n            </nav>\r\n\r\n            <StayNeighborBrand/>\r\n\r\n            {orderId === '' || orderId === 'complete' ? \r\n                <div className=\"col-10 mr-auto ml-auto mt-4\" >\r\n                    <div className='col-12 text-center'>\r\n                        <span className='lead text-center mr-auto ml-auto' style={{fontSize:'1.75rem'}}><b>Sorry, we were unable to find this order.</b></span>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n\r\n            {orderUpdateStatus && orderUpdateStatus.status === '200' ? \r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div style={{marginTop: 100}}>\r\n                        <div className='col-12'>\r\n                            <h1 style={{marginBottom: 90}}><b>Order</b> #{orderId}</h1>\r\n                            <div className='row'>\r\n                                <div className='col-6'>\r\n                                    <p><label>Status</label>: <b>{orderUpdateStatus.status}</b></p>\r\n                                    <p><label>Message</label>: <b>{orderUpdateStatus.message}</b></p>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n\r\n            {orderUpdateStatus && orderUpdateStatus.status === '400' ? \r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div style={{marginTop: 100}}>\r\n                        <div className='col-12'>\r\n                            <h1 style={{marginBottom: 90}}><b>Order</b> #{orderId}</h1>\r\n                            <div className='row'>\r\n                                <div className='col-6'>\r\n                                    <p><label>Status</label>: <b>{orderUpdateStatus.status}</b></p>\r\n                                    <p><label>Message</label>: <b>{orderUpdateStatus.message}</b></p>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default OrderComplete;","import React from 'react'\r\nimport {Modal,Button,Spinner} from 'react-bootstrap'\r\nimport {X} from 'react-feather'\r\n\r\nexport default function ConfirmChangesModal(props){\r\n    const { loading, showConfirmModal, orderChanges, selectedOrder } = props.dispatchContext.state\r\n    const { setShowConfirmModal, updateOrder } = props.dispatchContext\r\n\r\n    return (\r\n        <Modal style={{paddingTop:75}} size='lg' show={showConfirmModal} onHide={() => {}}>\r\n            <Modal.Body style={{borderTop:'10px solid #6f2c8e'}}>\r\n                <div className=\"form-row border-bottom col-12 mr-auto ml-auto\">\r\n                        <span className=\"mr-auto ml-auto\" style={{fontSize:20,fontWeight:600,color:\"#6f2c8e\",letterSpacing:'.025rem'}}>Please confirm your changes.</span>\r\n                        <span onClick={() => setShowConfirmModal(false)} className=\"float-right mt-2\"><X className=\"hover\"/></span>\r\n                    </div>\r\n                <div className=\"col-12 row d-flex ml-2 mr-2\" style={{marginTop:25}}>\r\n                    {orderChanges.driver === '' || orderChanges.driver ? \r\n                        <div className=\"col-12 col-xl-5\">\r\n                            <div className=\"border-bottom pb-1 row\">\r\n                                <div className='col-12 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Assignment Changes</div>\r\n                            </div>\r\n                            <div>\r\n                                {/* <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.firstName} {formData.lastName}</li>\r\n                                <li className=\"mb-1 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.address}</li>\r\n                                <li className=\"mb-3 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.zipcode}</li>\r\n                                <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.phoneNumber}</li>\r\n                                <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.emailAddress}</li> */}\r\n                            </div>\r\n                        </div>\r\n                    : ''}\r\n                    {orderChanges.status ?\r\n                        <div className=\"col-12 col-xl-5\">\r\n                            <div className=\"border-bottom pb-1 row\">\r\n                                <div className='col-12 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Status Changes</div>\r\n                            </div>\r\n                            <div>\r\n                                {/* {formData.items.map(item => {\r\n                                    return (\r\n                                        <li className=\"ml-3 lead\" style={{fontSize:14}}>{item.value}</li>\r\n                                    )\r\n                                })} */}\r\n                            </div>\r\n                        </div>\r\n                    : ''}\r\n                </div>\r\n                <div className=\"col-12 row\">\r\n                    <div className=\"col-12\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <th>Field</th>\r\n                                <th>Original</th>\r\n                                <th>Updated</th>\r\n                            </thead>\r\n                            <tbody>\r\n                            {Object.keys(orderChanges).map((change) => {\r\n                                if(change === 'enabled') return\r\n                                var originalValue = selectedOrder[change]\r\n                                var updatedValue = orderChanges[change]\r\n\r\n                                if(change === 'driver') {\r\n                                    if(!selectedOrder[change]) originalValue = ''\r\n                                    else originalValue = selectedOrder[change].name\r\n                                    updatedValue = orderChanges[change].name\r\n                                }\r\n\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{change}</td>\r\n                                        <td>{originalValue}</td>\r\n                                        <td>{updatedValue}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                    </div>\r\n                    <div className=\"col-5 mr-auto ml-auto\"></div>\r\n                </div>\r\n                <div className=\"col-12 mr-auto ml-auto mt-4 text-center\">\r\n                    {!loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\" onClick={updateOrder}>Submit</button>}\r\n                    {loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\">\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </button>}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 12px;\r\n  height: 12px;\r\n  background-color: ${props => (props.type === 'REQUEST') ? '#3498e1' : '#3fb94c'};\r\n  border-radius: ${props => (props.type === 'REQUEST') ? '10%' : '50%'};\r\n  user-select: none;\r\n  cursor: ${props => (props.onClick ? 'pointer' : 'default')};\r\n  &:hover {\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst Marker = props => (\r\n  <Wrapper\r\n    alt={props.text}\r\n    type={props.text}\r\n    {...props.onClick ? { onClick: props.onClick } : {}}\r\n  />\r\n);\r\n\r\nMarker.defaultProps = {\r\n  onClick: null,\r\n};\r\n\r\nMarker.propTypes = {\r\n  onClick: PropTypes.func,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Marker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst Wrapper = styled.main`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst GoogleMap = ({ children, ...props }) => (\r\n  <Wrapper>\r\n    <GoogleMapReact\r\n      bootstrapURLKeys={{\r\n        key: \"AIzaSyD1t2vfHVpI_2dw0uqllA4lR5Q2Kjw9wdY\",\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </GoogleMapReact>\r\n  </Wrapper>\r\n);\r\n\r\nGoogleMap.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.arrayOf(PropTypes.node),\r\n  ]),\r\n};\r\n\r\nGoogleMap.defaultProps = {\r\n  children: null,\r\n};\r\n\r\nexport default GoogleMap;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { isEmpty } from 'lodash';\r\nimport Marker from './Marker'\r\n\r\n// examples:\r\nimport GoogleMap from './GoogleMap';\r\n\r\n// consts: [34.0522, -118.2437]\r\nvar last = null\r\nvar selected = false\r\nvar records = ''\r\n// var records = [\r\n//   {\r\n//     name: \"Home\",\r\n//     types: ['Request'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.23,\r\n//         lng: -77.94\r\n//       }\r\n//     },\r\n//     address: '2131 S 17th Street'\r\n//   },\r\n//   {\r\n//     name: \"Home1\",\r\n//     types: ['Donation'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.148562,\r\n//         lng: -77.935982\r\n//       }\r\n//     }\r\n//   },\r\n//   {\r\n//     name: \"Home2\",\r\n//     types: ['Request'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.206362,\r\n//         lng: -77.922413\r\n//       }\r\n//     }\r\n//   }\r\n// ]\r\n\r\nconst getInfoWindowString = place => `\r\n    <div>\r\n      <div style=\"font-size: 16px;\">\r\n        ${place.status}\r\n      </div>\r\n      <div style=\"font-size: 14px; color: grey;\">\r\n        ${place.type}\r\n      </div>\r\n    </div>`\r\n\r\n\r\n\r\n\r\n// Refer to https://github.com/google-map-react/google-map-react#use-google-maps-api\r\n// const handleApiLoaded = (map, maps, places, props, updateSelectedMarker, selectedMarker) => {\r\n//   this.setState({gMap: map, gMaps: maps})\r\n//   return\r\n\r\n\r\n// const markers = [{}];\r\n// const infowindows = [];\r\n\r\n// var places = [\r\n//   {\r\n//     name: \"Home\",\r\n//     types: ['Request'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.23,\r\n//         lng: -77.94\r\n//       }\r\n//     },\r\n//     address: '2131 S 17th Street'\r\n//   },\r\n//   {\r\n//     name: \"Home1\",\r\n//     types: ['Donation'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.148562,\r\n//         lng: -77.935982\r\n//       }\r\n//     }\r\n//   },\r\n//   {\r\n//     name: \"Home2\",\r\n//     types: ['Request'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.206362,\r\n//         lng: -77.922413\r\n//       }\r\n//     }\r\n//   }\r\n// ]\r\n\r\n// for using a custom image as a marker\r\n// var image = {\r\n//   url: 'https://cdn4.iconfinder.com/data/icons/contact-us-19/48/35-512.png',\r\n//   scaledSize: new maps.Size(25, 25),\r\n// }\r\n\r\n// places.forEach((place) => {\r\n//   markers.push(new maps.Marker({\r\n//     position: {\r\n//       lat: Number(place.geometry.lat),\r\n//       lng: Number(place.geometry.long),\r\n//     },\r\n//     map,\r\n//     data: place,\r\n//     // icon: image,\r\n//     icon: place.type === 'REQUEST' ? {\r\n//       path: maps.SymbolPath.BACKWARD_CLOSED_ARROW,\r\n//       strokeColor: 'red',\r\n//       scale: 5\r\n//     } : {\r\n//         path: maps.SymbolPath.FORWARD_CLOSED_ARROW,\r\n//         strokeColor: 'blue',\r\n//         scale: 5\r\n//       },\r\n//   }));\r\n\r\n//   infowindows.push(new maps.InfoWindow({\r\n//     content: getInfoWindowString(place),\r\n//   }));\r\n// });\r\n\r\n// markers.slice(1).forEach((marker, i) => {\r\n//   marker.addListener('click', () => {\r\n//     infowindows[i].open(map, marker)\r\n//     props.setSelectedOrder(marker.data)\r\n//     if (last) last.close()\r\n//     last = infowindows[i]\r\n//   })\r\n// });\r\n// console.log(markers)\r\n// records = markers.slice(1)\r\n//};\r\n\r\nclass MarkerInfoWindowGmapsObj extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      places: [],\r\n      selectedMarker: false,\r\n      gMap: false,\r\n      gMaps: false\r\n    };\r\n  }\r\n\r\n  updateSelectedMarker(item) {\r\n    //this.setState({selectedMarker: item})\r\n  }\r\n\r\n  handleApiLoaded = (map, maps, places, props, updateSelectedMarker, selectedMarker) => {\r\n    console.log(map)\r\n    this.setState({ gMap: map, gMaps: maps })\r\n    return\r\n  }\r\n\r\n  getPlaces(places, props) {\r\n    const markers = [{}];\r\n    const infowindows = [];\r\n    var gMaps = this.state.gMaps\r\n    var gMap = this.state.gMap\r\n\r\n    places.forEach((place) => {\r\n      markers.push(new gMaps.Marker({\r\n        position: {\r\n          lat: Number(place.geometry.lat),\r\n          lng: Number(place.geometry.long),\r\n        },\r\n        gMap,\r\n        data: place,\r\n        // icon: image,\r\n        icon: place.type === 'REQUEST' ? {\r\n          path: gMaps.SymbolPath.BACKWARD_CLOSED_ARROW,\r\n          strokeColor: 'red',\r\n          scale: 5\r\n        } : {\r\n            path: gMaps.SymbolPath.FORWARD_CLOSED_ARROW,\r\n            strokeColor: 'blue',\r\n            scale: 5\r\n          },\r\n      }));\r\n\r\n      infowindows.push(new gMaps.InfoWindow({\r\n        content: getInfoWindowString(place),\r\n      }));\r\n    });\r\n\r\n    markers.slice(1).forEach((marker, i) => {\r\n      marker.addListener('click', () => {\r\n        infowindows[i].open(gMap, marker)\r\n        props.setSelectedOrder(marker.data)\r\n        if (last) last.close()\r\n        last = infowindows[i]\r\n      })\r\n    });\r\n\r\n    console.log(markers)\r\n    return markers.slice(1)\r\n  }\r\n\r\n  render() {\r\n    if (this.props.selectedOrder && this.props.selectedOrder != this.state.selectedMarker) this.setState({ selectedMarker: this.props.selectedOrder })\r\n    const defaultCenter = { lat: 34.23, lng: -77.94 };\r\n    const coordinates = this.props.selectedOrder ? { lat: Number(this.props.selectedOrder.geometry.lat), lng: Number(this.props.selectedOrder.geometry.long) } : defaultCenter;\r\n    return (\r\n      <div style={{ height: '90vh', width: '100%' }}>\r\n        <GoogleMap\r\n          defaultZoom={12}\r\n          center={coordinates}\r\n          bootstrapURLKeys={{ key: \"AIzaSyD1t2vfHVpI_2dw0uqllA4lR5Q2Kjw9wdY\" }}\r\n          yesIWantToUseGoogleMapApiInternals\r\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps, this.props.orders, this.props)}\r\n        >\r\n          {this.props.orders.map((order, index) => {\r\n            return (\r\n              <Marker\r\n                key={index}\r\n                text={order.type}\r\n                lat={Number(order.geometry.lat)}\r\n                lng={Number(order.geometry.long)}\r\n                onClick={() => this.props.setSelectedOrder(order)}\r\n              />\r\n            )\r\n          })}\r\n        </GoogleMap>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default MarkerInfoWindowGmapsObj;\r\n","import React, {useEffect} from 'react'\r\nimport Loading from '../Loading'\r\nimport ConfirmChangesModal from './ConfirmChangesModal'\r\nimport MarkerInfoWindowGmapsObj from '../GoogleMaps/MarkerInfoWindowGmapsObj'\r\nimport { ArrowLeftCircle , LogOut , X , User , RefreshCw, Edit, Circle, PlayCircle, CheckCircle, XCircle, AlertCircle } from 'react-feather'\r\nimport {logUserOut, watcher} from '../../lib/StitchFunctions'\r\nimport {Spinner} from 'react-bootstrap'\r\nimport {toast} from 'react-toastify'\r\nimport {differenceInHours, differenceInDays, differenceInMinutes} from 'date-fns'\r\n\r\nexport default function DispatchModuleHome(props){\r\n    const { orders, selectedOrder, typeFilter, statusFilter, orderChanges, drivers, loading, showConfirmModal } = props.dispatchContext.state\r\n    const { getOrdersForDispatcher, setSelectedOrder, setTypeFilter, setStatusFilter, setOrderChanges, getDriversForDispatcher, setFormValue, updateOrder, setShowConfirmModal, setLoading } = props.dispatchContext\r\n    var { isAuthenticated, user, errors } = props.globalContext.state\r\n    var { checkAuthStatus, getUser, setIsAuthenticated } = props.globalContext\r\n    var filteredOrders = []\r\n\r\n    useEffect(() => {\r\n        checkAuthStatus()\r\n        if(isAuthenticated && !user) getUser()\r\n        if(isAuthenticated && user && !orders) getOrdersForDispatcher()\r\n        if(isAuthenticated && user && orders && !drivers) getDriversForDispatcher()\r\n    }, [isAuthenticated, user, orders, drivers])\r\n\r\n    if(!user || !orders || !drivers) return <Loading/>\r\n\r\n    function applyFilters(orders){\r\n        if(typeFilter) orders = orders.filter(a => a.type === typeFilter)\r\n        if(statusFilter) orders = orders.filter(a => a.status === statusFilter)\r\n        return orders\r\n    }\r\n\r\n    function deriveDriverName(driver){\r\n        if(!selectedOrder){\r\n            if(driver.name === '') return true\r\n        }\r\n\r\n        if(selectedOrder && selectedOrder.assignedToDriver === driver.email){\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    function timeSince(date){\r\n        var hoursSince = differenceInHours(new Date(), new Date(date))\r\n        if(hoursSince < 1) return `${differenceInMinutes(new Date(), new Date(date))} minutes ago`\r\n        if(hoursSince > 24) return `${differenceInDays(new Date(), new Date(date))} days ago`\r\n        return `${hoursSince} hours ago`\r\n    }\r\n\r\n    if(orders) filteredOrders = applyFilters(orders)\r\n\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6F2C8E', paddingBottom: 15 }}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    {isAuthenticated === true && user ? <span title=\"Log Out\" className=\"ml-auto float-right text-white\">Welcome {user.profile.data.name}!  <LogOut onClick={() => {\r\n                        logUserOut()\r\n                        setIsAuthenticated(false)\r\n                        props.history.push('/')\r\n                        toast(\"You have been logged out!\")\r\n                    }} className=\"hover ml-2\"/></span> : ''}\r\n                </div>\r\n            </nav>\r\n\r\n            {isAuthenticated && user && orders ? \r\n                <div className=\"col-12 d-flex pl-0 flex-wrap\" style={{marginTop:60,maxHeight:'50vh'}}>\r\n                    <div className=\"col-12 col-md-4 col-xl-3\" style={{paddingLeft:20,paddingRight:20}}>\r\n                        <div className={{width:'100%'}}>\r\n                            <div className=\"form-row border-bottom\" style={{paddingBottom:5}}>\r\n                                <span className=\"pb-0 lead pt-1 pb-1\">Order Filters</span>\r\n                            </div>\r\n                            <div>\r\n                                <label style={{width:'100%',fontSize:'.9rem'}} className=\"mb-0 pb-0 ml-2 lead\">Type</label>\r\n                                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button onClick={() => setTypeFilter(typeFilter === 'REQUEST' ? '' : 'REQUEST')} type=\"button\" class={`${typeFilter === 'REQUEST' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Requests</button>\r\n                                    <button onClick={() => setTypeFilter(typeFilter === 'DONATION' ? '' : 'DONATION')} type=\"button\" class={`${typeFilter === 'DONATION' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Donations</button>\r\n                                    <X onClick={() => setTypeFilter(false)} style={{marginTop:'.40rem',color:\"grey\"}} className=\"hover ml-1\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <label style={{width:'100%',fontSize:'.9rem'}} className=\"mb-0 pb-0 ml-2 lead\">Status</label>\r\n                                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button onClick={() => setStatusFilter(statusFilter === 'PENDING' ? '' : 'PENDING')} type=\"button\" class={`${statusFilter === 'PENDING' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><Circle/></button>\r\n                                    <button onClick={() => setStatusFilter(statusFilter === 'IN PROGRESS' ? '' : 'IN PROGRESS')} class={`${statusFilter === 'IN PROGRESS' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><PlayCircle/></button>\r\n                                    <button onClick={() => setStatusFilter(statusFilter === 'COMPLETED' ? '' : 'COMPLETED')} class={`${statusFilter === 'COMPLETED' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><CheckCircle/></button>\r\n                                    <button onClick={() => setStatusFilter(statusFilter === 'CANCELLED' ? '' : 'CANCELLED')} class={`${statusFilter === 'CANCELLED' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><XCircle/></button>\r\n                                    <button onClick={() => setStatusFilter(statusFilter === 'ERROR/ACTION' ? '' : 'ERROR/ACTION')} class={`${statusFilter === 'ERROR/ACTION' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><AlertCircle/></button>\r\n                                    <X onClick={() => setStatusFilter(false)} style={{marginTop:'.40rem',color:\"grey\"}} className=\"hover ml-1\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row border-bottom\" style={{paddingBottom:5}}>\r\n                                <span className=\"pb-0 lead pt-1 pb-1\">Order List</span>\r\n                                <RefreshCw onClick={() => {\r\n                                    getOrdersForDispatcher(true)\r\n                                }} className=\"hover brand\" style={{marginTop:'.40rem',marginLeft:'1rem'}}/>\r\n                                \r\n                            </div>\r\n                            <div style={{maxHeight:'60vh',overflowY:'auto'}} className=\"mt-2\">\r\n                                {orders && filteredOrders.length > 0 && filteredOrders.map(order => {\r\n                                    return (\r\n                                        <li style={{fontSize:12,paddingRight:0,paddingBottom:'.25rem'}} class={`d-flex list-group-item order-list text-center pl-0 pr-0 pt-2 pb-1 ${selectedOrder._id ? order._id.toString() == selectedOrder._id.toString() ? 'active-order': \"\" : ''}`} onClick={() => {\r\n                                            setSelectedOrder(order)\r\n                                            setOrderChanges(false)\r\n                                        }}>\r\n                                            <span className={order.type === \"REQUEST\" ? 'request-type ml-1 mr-1' : 'donation-type  ml-1 mr-1'}>{order.type.charAt(0).toUpperCase()}</span>\r\n                                            <span className=\"ml-2 mt-2 text-left\" style={{width:'33%'}}>{order.status}</span>\r\n                                            <span className=\"ml-2 mt-2 text-left\" style={{width:'33%'}}>{order.firstName} {order.lastName}</span>\r\n                                            <span className=\"ml-2 mt-2 text-left\" style={{width:'33%'}}>{timeSince(order.dateCreated)}</span>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                                {orders && filteredOrders.length === 0 ? \r\n                                    <span className=\"col-10 mr-auto ml-auto lead\">No orders found.</span>\r\n                                : ''}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{paddingTop:20}} className={selectedOrder ? 'col-xl-6 col-md-6' : 'col-xl-9 col-md-8'}>\r\n                        <MarkerInfoWindowGmapsObj setSelectedOrder={setSelectedOrder} orders={filteredOrders} selectedOrder={selectedOrder}/>\r\n                    </div>\r\n                    \r\n                    {selectedOrder ? \r\n                        <div className=\"col-12 col-sm-12 col-xl-3 col-md-2\" style={{fontSize:12,paddingLeft:0,paddingRight:0}}>\r\n                            <form className=\"col-12\">\r\n                                <div className=\"form-row border-bottom d-flex flex-nowrap\" style={{paddingBottom:5}}>\r\n                                    <span className=\"pb-0 lead pt-1 pb-1\">{selectedOrder.type.charAt(0)}{selectedOrder.type.slice(1).toLowerCase()} Details</span>\r\n                                    <span className=\"ml-auto mt-2\"><X className=\"hover\" onClick={() => {\r\n                                        setSelectedOrder(false)\r\n                                        setOrderChanges(false)\r\n                                    }}/></span>\r\n                                </div>\r\n                                <div className=\"form-row row pr-0 pl-0\" style={{paddingTop:10}}>\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-1 mt-1\">\r\n                                        <label className=\"lead mb-0\" style={{fontSize:'.9rem'}}><b>Type</b></label>\r\n                                        <span style={{display:'block',fontSize:'.9rem'}} className={selectedOrder.type === \"REQUEST\" ? 'request-type-details lead' : 'donation-type-details lead'}>{selectedOrder.type}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-xl-6\">\r\n                                        <label for=\"exampleInputEmail1\" className=\"lead mb-0\" style={{fontSize:'.9rem'}}><b>Name</b></label>\r\n                                        <span className=\"lead\" type=\"email\" style={{display:'block',fontWeight:400}} aria-describedby=\"emailHelp\">{selectedOrder.firstName} {selectedOrder.lastName}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} or=\"exampleInputEmail1\"><b>Assigned To</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={(e) => setOrderChanges({...orderChanges, driver: e.target.value == '' ? '' : JSON.parse(e.target.value)})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select lead' : 'custom-select no-border lead'} style={{display:'block',fontSize:14}} >{drivers && [{name: ''}, ...drivers].map(driver => {\r\n                                                return <option value={driver.email === '' ? '' : JSON.stringify(driver)} selected={deriveDriverName(driver)}>{driver.name}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{drivers.find(a => a.email == setFormValue('assignedToDriver')) ? drivers.find(a => a.email == setFormValue('assignedToDriver')).name : ''}</span>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Status</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={e => setOrderChanges({...orderChanges, status: e.target.value})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select lead ' : 'custom-select no-border lead'} style={{display:'block',fontSize:'1rem'}} >{['PENDING','IN PROGRESS','COMPLETED','CANCELLED','ERROR/ACTION'].map(status => {\r\n                                                return <option selected={setFormValue('status') === status ? true : false}>{status}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{setFormValue('status')}</span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Address</b></label>\r\n                                        <input onChange={e => setOrderChanges({...orderChanges, address: e.target.value})} className={orderChanges.enabled ? 'lead form-control' : 'lead form-control no-border'} disabled={orderChanges.enabled ? false : true} style={{display:'inline',fontWeight:600,width:200,wordWrap:'break-word'}} value={setFormValue('address')}></input>\r\n                                    </div>\r\n                                    <div className='lead' className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className=\"lead label-half text-secondary\" style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Zip Code</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={e => setOrderChanges({...orderChanges, zipcode: e.target.value})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select lead' : 'custom-select no-border lead'} style={{fontWeight:600,color:'black'}} >{user.customData.zipcodes.sort().map(zipcode => {\r\n                                                return <option selected={setFormValue('zipcode') === zipcode ? true : false}>{zipcode}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{setFormValue('zipcode')}</span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>{selectedOrder.type === 'DONATION' ? 'Pickup Time' : 'Delivery Time'}</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={e => setOrderChanges({...orderChanges, time: e.target.value})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select text-dark lead' : 'custom-select no-border text-dark lead'} style={{display:'block',fontSize:'1rem'}} >{['morning', 'afternoon', 'evening'].map(time => {\r\n                                                return <option selected={setFormValue('time') === time ? true : false}>{time.charAt(0).toUpperCase()}{time.slice(1)}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{setFormValue('time').charAt(0).toUpperCase()}{setFormValue('time').slice(1)}</span>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Phone Number</b></label>\r\n                                        <input onChange={e => setOrderChanges({...orderChanges, phoneNumber: e.target.value})} className={orderChanges.enabled ? 'form-control text-dark' : 'form-control no-border text-dark'} type=\"text\" disabled={orderChanges.enabled ? false : true} style={{fontWeight:600,display:'block'}} aria-describedby=\"emailHelp\" value={setFormValue('phoneNumber')}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Date Created</b></label>\r\n                                        <input type=\"text\" className={orderChanges.enabled ? 'form-control text-dark' : 'form-control no-border text-dark'} disabled={true} style={{fontWeight:600,display:'block'}} aria-describedby=\"emailHelp\" defaultValue={`${new Date(selectedOrder.dateCreated).toLocaleDateString()} ${new Date(selectedOrder.dateCreated).toLocaleTimeString()}`}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Items</b></label>\r\n                                        <ul class=\"list-group flex-md-row flex-wrap ml-3\">\r\n                                            {selectedOrder.items.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index} className=\"context-list lead\" style={{width:'50%',fontWeight:600,fontSize:'1rem'}}>{item.name}</li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row mt-2\">\r\n                                    <div className=\"form-group col-12\">\r\n                                        <label className='lead text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Additional Info</b></label>\r\n                                        <textarea onChange={e => setOrderChanges({...orderChanges, additionalInfo: e.target.value})} className={orderChanges.enabled ? 'form-control' : 'form-control no-border'} type=\"text\" disabled={orderChanges.enabled ? false : true} style={{fontWeight:600,display:'block',fontSize:'.9rem',width:'100%'}} aria-describedby=\"emailHelp\" value={selectedOrder.additionalInfo}></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row pl-0\">\r\n                                    <div className=\"form-group col-12\">\r\n                                        {orderChanges.enabled && Object.keys(orderChanges).length > 1 && !loading && <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\" onClick={() => setShowConfirmModal(true)}>Save Order</button>}\r\n                                        {orderChanges.enabled && loading &&  \r\n                                            <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\">\r\n                                                <Spinner animation=\"border\" role=\"status\">\r\n                                                    <span className=\"sr-only\">Loading...</span>\r\n                                                </Spinner>\r\n                                            </button>\r\n                                        }\r\n                                        {orderChanges.enabled && <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\" onClick={() => setOrderChanges(false)}>Cancel</button>}\r\n                                        {!orderChanges.enabled && <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\" onClick={() => setOrderChanges({enabled: true})}>Edit Order</button>}\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    : ''}\r\n                </div>\r\n            : ''}\r\n\r\n            {showConfirmModal ? \r\n                <ConfirmChangesModal {...props}/>\r\n            : ''}\r\n\r\n            {!isAuthenticated ? \r\n                <div className=\"text-center mr-auto ml-auto\" style={{marginTop:'15rem',width:'20%'}}>\r\n                    <div>\r\n                        <span className=\"h5\">Select a login partner...</span>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n\r\n            {errors.login ? \r\n                <div className=\"text-center mr-auto ml-auto\" style={{marginTop:'15rem',width:'20%'}}>\r\n                    <div>\r\n                        <span className=\"h5\">{errors.login}</span>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n        </main>\r\n    )\r\n}","import React from 'react';\r\n\r\nconst GlobalStateContext = React.createContext();\r\n\r\nexport default GlobalStateContext; ","import React from 'react';\r\n\r\nconst RequestContext = React.createContext();\r\n\r\nexport default RequestContext; ","import React from 'react';\r\n\r\nconst DonationContext = React.createContext();\r\n\r\nexport default DonationContext; ","import React from 'react';\r\n\r\nconst DispatchContext = React.createContext();\r\n\r\nexport default DispatchContext; ","import React from 'react';\r\nimport {BrowserRouter,Route,Redirect,Switch} from 'react-router-dom'\r\nimport {ToastContainer} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Home from './components/Home'\r\nimport RequestModule from './components/RequestModule/RequestModuleHome'\r\nimport DonationModule from './components/DonationModule/DonationModuleHome'\r\nimport Error from './components/Error'\r\nimport OrderComplete from './components/Order/OrderComplete';\r\nimport './css/App.css';\r\nimport './css/bootstrap.min.css'\r\nimport DispatchModuleHome from './components/DispatchModule/DispatchModuleHome';\r\nimport GlobalStateContext from './contexts/Global/GlobalStateContext';\r\nimport RequestContext from './contexts/RequestModule/RequestContext';\r\nimport DonationContext from './contexts/DonationModule/DonationContext';\r\nimport DispatchContext from './contexts/DispatcherModule/DispatchContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalStateContext.Consumer>\r\n      {globalContext => (\r\n        <BrowserRouter>\r\n        <ToastContainer\r\n            autoClose={5000}\r\n            newestOnTop\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnVisibilityChange\r\n            draggable\r\n            pauseOnHover\r\n            className='toast-container'\r\n            toastClassName=\"toastify-brand\"\r\n            progressClassName=\"toastify-progress-bar\"\r\n        />\r\n\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={(props) => <Home globalContext={globalContext} {...props}/>}/>\r\n          <Route exact={true} path=\"/request\" render={(props) => <RequestContext.Consumer>{requestContext => (<RequestModule globalContext={globalContext} requestContext={requestContext} {...props}/>)}</RequestContext.Consumer>}/>\r\n          <Route exact={true} path=\"/donate\" render={(props) => <DonationContext.Consumer>{donationContext => (<DonationModule globalContext={globalContext} donationContext={donationContext} {...props}/>)}</DonationContext.Consumer>}/>\r\n          <Route exact={true} path=\"/dispatcher\" render={(props) => <DispatchContext.Consumer>{dispatchContext => (<DispatchModuleHome globalContext={globalContext} dispatchContext={dispatchContext} {...props}/>)}</DispatchContext.Consumer>}/>\r\n          <Route exact={true} path=\"/error\" render={(props) => <DispatchContext.Consumer>{dispatchContext => (<Error globalContext={globalContext} dispatchContext={dispatchContext} {...props}/>)}</DispatchContext.Consumer>}/>\r\n          <Route exact path='/order/complete/:uuid?' render={props => <OrderComplete globalContext={globalContext}/>}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      )}\r\n    </GlobalStateContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// All things that should be accessed in a global setting will live here\r\nimport React, {useState} from 'react';\r\nimport GlobalStateContext from './GlobalStateContext';\r\nimport {checkUserAuth,getUserInfo} from '../../lib/StitchFunctions'\r\n\r\nconst GlobalStateProvider = props => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n    const [errors, setErrors] = useState({});\r\n    const [user, setUser] = useState(null);\r\n\r\n    const checkAuthStatus = async () =>{\r\n        const prom = await checkUserAuth()\r\n        setIsAuthenticated(prom)\r\n    }\r\n\r\n    const getUser = async () => {\r\n     //example of calling a stich function inside here\r\n        const prom = await getUserInfo();\r\n        if(!prom) setErrors({...errors, login: 'We had trouble logging you in, please try again later.'})\r\n        else setUser(prom);\r\n    }\r\n    \r\n    return (\r\n        <GlobalStateContext.Provider // this is where we expose state values and functions to the rest of the application\r\n            value={{\r\n                state: { // for organization reasons I like keep all state values inside a state object\r\n                    isAuthenticated: isAuthenticated,\r\n                    errors: errors,\r\n                    user: user\r\n                },\r\n                setErrors: (errs) => setErrors(errs),\r\n                setIsAuthenticated: (bool) => setIsAuthenticated(bool), // expose only the functions that are necessary\r\n                checkAuthStatus: () => checkAuthStatus(),\r\n                getUser: () => getUser()\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalStateContext.Provider>\r\n    )\r\n};\r\n\r\nexport default GlobalStateProvider;","import React, {useState} from 'react';\r\nimport DonationContext from './DonationContext';\r\nimport { useForm } from 'react-hook-form';\r\nimport { toast } from 'react-toastify';\r\nimport { putOrder } from '../../lib/StitchFunctions';\r\n\r\nconst DonationProvider = props => {\r\n    var { register, errors, clearError, handleSubmit } = useForm();\r\n    const [step, setStep] = useState(1);\r\n    var [loading, setLoading] = useState(false);\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [formData, setFormData] = useState({ \r\n        firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], dropoff: null });\r\n\r\n\r\n    const stepOneIsValid = () => {\r\n        if(!formData.firstName) return true\r\n        if(!formData.lastName) return true\r\n        if(!formData.phoneNumber || !formData.phoneNumber.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/g)) return true\r\n        if(!formData.emailAddress) return true\r\n        if(!formData.address) return true\r\n        if(!formData.zipcode) return true\r\n        return false\r\n    }\r\n\r\n    const stepTwoIsValid = () => {\r\n        if(!formData.items || (formData.items && formData.items.length === 0)) return true\r\n        return false\r\n    }\r\n\r\n    const stepThreeIsValid = () => {\r\n        if(!formData.dropoff) return true\r\n        return false\r\n    }\r\n\r\n    const validateStep1 = () => {\r\n        // todo handle address validation logic\r\n        setStep(2)\r\n    };\r\n\r\n    const validateStep2 = () => {\r\n        // todo handle requested item validation\r\n        setStep(3);\r\n    };\r\n\r\n    const validateStep3 = async () => {\r\n        setShowModal(true)\r\n    };\r\n\r\n    const submitDonation = async () => {\r\n        // todo handle dropoff time validation\r\n        setLoading(true);\r\n        // format put request data\r\n        const formattedData = formatRequest();\r\n        const response = await putOrder(formattedData);\r\n        setLoading(false);\r\n        if(response.status === '200'){\r\n            toast('Donation submitted successfully!')\r\n            setStep(4)\r\n            setShowModal(false)\r\n        } else {\r\n            toast(response.message);\r\n        }\r\n    }\r\n\r\n    const formatRequest = () => {\r\n        // todo write logic to format the request object to match the data model given by backend\r\n        const body = {};\r\n        body.firstName = formData.firstName;\r\n        body.lastName = formData.lastName;\r\n        body.address = formData.address;\r\n        body.phoneNumber =  formData.phoneNumber;\r\n        body.emailAddress = formData.emailAddress;\r\n        body.zipcode = formData.zipcode;\r\n        body.time = formData.dropoff.id;\r\n        body.type = 'DONATION';\r\n        body.items = formData.items.map(item => ({name: item.value, quantity: 1}));\r\n        body.additionalInfo =formData.additionalInfo;\r\n        return body;\r\n    };\r\n\r\n    return(\r\n        <DonationContext.Provider\r\n            value={{\r\n                state: {\r\n                    // put state values here\r\n                    step, // shorthand for step: step\r\n                    loading,\r\n                    showModal,\r\n                    formData,\r\n                    errors\r\n                },\r\n                // put functions you want to expose here\r\n                setStep: (num) => setStep(num),\r\n                setLoading: (bool) => setLoading(bool),\r\n                setShowModal: (bool) => setShowModal(bool),\r\n                setFormData: (data) => setFormData(data),\r\n                register: () => register(),\r\n                clearError: () => clearError(),\r\n                handleSubmit: (e) => handleSubmit(e),\r\n                stepOneIsValid: () => stepOneIsValid(),\r\n                stepTwoIsValid: () => stepTwoIsValid(),\r\n                stepThreeIsValid: () => stepThreeIsValid(),\r\n                validateStep1: () => validateStep1(),\r\n                validateStep2: () => validateStep2(),\r\n                validateStep3: () => validateStep3(),\r\n                submitDonation: () =>  submitDonation()\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DonationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DonationProvider;","import React, {useState} from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport RequestContext from './RequestContext';\r\nimport { toast } from 'react-toastify';\r\nimport { putOrder } from '../../lib/StitchFunctions';\r\n\r\nconst RequestProvider = props => {\r\n    const { register, errors, clearError, handleSubmit } = useForm();\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [step, setStep] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [formData, setFormData] = useState({ \r\n        firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], freeTextItems: [''], dropoff: null, householdNum: 1 });\r\n\r\n    const stepOneIsValid = () => {\r\n        if(!formData.firstName) return true\r\n        if(!formData.lastName) return true\r\n        if(!formData.phoneNumber || !formData.phoneNumber.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/g)) return true\r\n        if(!formData.emailAddress) return true\r\n        if(!formData.address) return true\r\n        if(!formData.zipcode) return true\r\n        if(!formData.householdNum || formData.householdNum === 0) return true\r\n        return false\r\n    }\r\n\r\n    const stepTwoIsValid = () => {\r\n        if(formData.items.length === 0) return true\r\n        return false\r\n    }\r\n\r\n    const stepThreeIsValid = () => {\r\n        if(!formData.dropoff) return true\r\n        return false\r\n    }\r\n\r\n    const validateStep1 = (values) => {\r\n        // todo handle address validation logic\r\n        setStep(2)\r\n    };\r\n\r\n    const validateStep2 = () => {\r\n        // todo handle requested item validation\r\n        setStep(3)\r\n    };\r\n\r\n    const validateStep3 = async() => {\r\n        setShowModal(true)\r\n    }\r\n\r\n    const submitRequest = async() => {\r\n        // todo handle dropoff time validation\r\n        setLoading(true);\r\n        // format put request data\r\n        const formattedData = formatRequest();\r\n        const response = await putOrder(formattedData);\r\n        setLoading(false);\r\n\r\n        if(response.status === '200'){\r\n            toast('Request submitted successfully!')\r\n            setFormData({ \r\n                firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], freeTextItems: [''], dropoff: null, householdNum: 0 })\r\n            setStep(4)\r\n        } else {\r\n            toast(response.message);\r\n        }\r\n    };\r\n\r\n    const formatRequest = () => {\r\n        // todo write logic to format the request object to match the data model given by backend\r\n        const body = {};\r\n        body.firstName = formData.firstName;\r\n        body.lastName = formData.lastName;\r\n        body.address = formData.address;\r\n        body.emailAddress = formData.emailAddress;\r\n        body.phoneNumber =  formData.phoneNumber;\r\n        body.zipcode = formData.zipcode;\r\n        body.time = formData.dropoff.id;\r\n        body.type = 'REQUEST';\r\n        body.items = formData.items.map(item => ({name: item.value, quantity: 1}));\r\n        body.additionalInfo = formData.additionalInfo;\r\n        body.householdNum = formData.householdNum;\r\n        return body; \r\n    };\r\n\r\n    return (\r\n        <RequestContext.Provider \r\n            value={{\r\n                state: {\r\n                    step, // shorthand for step: step\r\n                    loading,\r\n                    showModal,\r\n                    formData,\r\n                    errors\r\n                    // state values you want to expose go here\r\n                },\r\n                setStep: (num) => setStep(num),\r\n                setLoading: (bool) => setLoading(bool),\r\n                setFormData: (data) => setFormData(data),\r\n                setShowModal: (bool) => setShowModal(bool),\r\n                register: () => register(),\r\n                clearError: () => clearError(),\r\n                handleSubmit: (e) => handleSubmit(e),\r\n                validateStep1: () => validateStep1(),\r\n                stepOneIsValid: () => stepOneIsValid(),\r\n                stepTwoIsValid: () => stepTwoIsValid(),\r\n                stepThreeIsValid: () => stepThreeIsValid(),\r\n                validateStep2: () => validateStep2(),\r\n                validateStep3: () => validateStep3(), \r\n                submitRequest: () => submitRequest()\r\n                // functions you want to expose go here\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n};\r\n\r\nexport default RequestProvider;","import React, { useState } from 'react';\r\nimport DispatchContext from './DispatchContext';\r\nimport { getOrders, getDrivers, assignOrder, updateOrderStatus, getOrder, updateOrderFields, establishMongoDbConnection } from '../../lib/StitchFunctions';\r\nimport {toast} from 'react-toastify'\r\n\r\nconst DispatchProvider = props => {\r\n    const [orders, setOrders] = useState(false)\r\n    const [drivers, setDrivers] = useState(false)\r\n    const [selectedOrder, setSelectedOrder] = useState(false)\r\n    const [typeFilter, setTypeFilter] = useState(false)\r\n    const [statusFilter, setStatusFilter] = useState(false)\r\n    const [orderChanges, setOrderChanges] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false)\r\n    const [watcherSet, setWatcherSet] = useState(false)\r\n\r\n    const getOrdersForDispatcher = async (notify) =>{\r\n        try{\r\n            const prom = await getOrders()\r\n            if(prom.status === '200') setOrders(prom.data.sort((a, b) => a.dateCreated < b.dateCreated))\r\n            if(notify) toast('Orders updated!')\r\n            if(loading) setLoading(false)\r\n        } catch(e){\r\n            console.log(e)\r\n            //set error into global state?\r\n        }\r\n    }\r\n\r\n    async function checkSelectedOrder(){\r\n        console.log(selectedOrder)\r\n        setSelectedOrder(await getOrder(selectedOrder._id))\r\n    }\r\n\r\n    const getDriversForDispatcher = async () => {\r\n        try {\r\n            const prom = await getDrivers()\r\n            if(prom.status === '200') setDrivers(prom.data)    \r\n            console.log(prom.data)\r\n        } catch(e) {\r\n            \r\n        }\r\n    }\r\n\r\n    const setFormValue = (key) => {\r\n        try {\r\n            if(!orderChanges.enabled) {  \r\n                if(!selectedOrder[key]) return {}\r\n                return selectedOrder[key]\r\n            }\r\n            else {\r\n                if(orderChanges[key]) return orderChanges[key]\r\n                else {\r\n                    if(!selectedOrder[key]) return {}\r\n                    return selectedOrder[key]\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const updateOrder = async () => {\r\n        if(!orderChanges) return\r\n        setLoading(true)\r\n        if(orderChanges.driver === '' || orderChanges.driver) { //process driver change with assignOrder api\r\n            let prom = await assignOrder(selectedOrder._id, orderChanges.driver.email ? orderChanges.driver.email : '')\r\n            if(prom.status === '400') {\r\n                toast('We had an issue updating the order. Please try again later.')\r\n                setLoading(false)\r\n                return\r\n            }\r\n        }\r\n\r\n        if(orderChanges.status){\r\n            let prom = await updateOrderStatus(selectedOrder._id, orderChanges.status)\r\n            if(prom.status === '400') {\r\n                toast('We had an issue updating the order. Please try again later.')\r\n                setLoading(false)\r\n                return\r\n            }\r\n        }\r\n\r\n        const addressChanged = orderChanges.address ? true : false\r\n        let newFormData = {...selectedOrder}\r\n\r\n        Object.keys(orderChanges).forEach((key) => {\r\n            newFormData[key] = orderChanges[key]\r\n        })\r\n\r\n        let updateProm = await updateOrderFields(newFormData ,addressChanged)\r\n\r\n        if(updateProm.status === '400') {\r\n            toast('We had an issue updating the order. Please try again later.')\r\n            setLoading(false)\r\n            return\r\n        }\r\n\r\n        toast('Order successfully updated!')\r\n        await getOrdersForDispatcher()\r\n        setSelectedOrder(await getOrder(selectedOrder._id))\r\n        setLoading(false)\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    return (\r\n        <DispatchContext.Provider \r\n            value={{\r\n                state: {\r\n                    // put your state that you want to expose in here\r\n                    orders: orders,\r\n                    selectedOrder: selectedOrder,\r\n                    typeFilter: typeFilter,\r\n                    statusFilter: statusFilter,\r\n                    drivers: drivers,\r\n                    orderChanges: orderChanges,\r\n                    loading: loading,\r\n                    showConfirmModal: showConfirmModal\r\n                },\r\n                // expose functions here\r\n                getOrdersForDispatcher: (bool) => getOrdersForDispatcher(bool),\r\n                getDriversForDispatcher: () => getDriversForDispatcher(),\r\n                setSelectedOrder: (obj) => setSelectedOrder(obj),\r\n                setTypeFilter: (str) => setTypeFilter(str),\r\n                setStatusFilter: (str) => setStatusFilter(str),\r\n                setDrivers: () => setDrivers(),\r\n                setOrderChanges: (bool) => setOrderChanges(bool),\r\n                setFormValue: (str) => setFormValue(str),\r\n                updateOrder: () => updateOrder(),\r\n                setShowConfirmModal: (bool) => setShowConfirmModal(bool),\r\n                setLoading: (bool) => setLoading(bool)\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DispatchContext.Provider>\r\n    )\r\n};\r\n\r\nexport default DispatchProvider;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ContextWrapper from './ContextWrapper';\r\n\r\nReactDOM.render(<ContextWrapper><App /></ContextWrapper>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// manage the context providers in here, this function will just return the context providers which wraps app.js\r\n// global state is the only provider and consumer most likely in here\r\nimport React from 'react';\r\nimport GlobalStateProvider from \"./contexts/Global/GlobalStateProvider\";\r\nimport GlobalStateContext from \"./contexts/Global/GlobalStateContext\";\r\nimport DonationProvider from \"./contexts/DonationModule/DonationProvider\";\r\nimport RequestProvider from './contexts/RequestModule/RequestProvider';\r\nimport DispatchProvider from './contexts/DispatcherModule/DispatchProvider';\r\n\r\n// if you want you can pass the globalContext right into your provider as a prop. It will then be available\r\nexport default props => (\r\n    <GlobalStateProvider>\r\n        <GlobalStateContext.Consumer>\r\n            {globalContext => (\r\n                <DonationProvider>\r\n                    <RequestProvider>\r\n                        <DispatchProvider>\r\n                            {props.children}\r\n                        </DispatchProvider>\r\n                    </RequestProvider>\r\n                </DonationProvider>\r\n            )}\r\n        </GlobalStateContext.Consumer>\r\n    </GlobalStateProvider>\r\n)","module.exports = __webpack_public_path__ + \"static/media/fulllogo.ec71ed57.png\";"],"sourceRoot":""}