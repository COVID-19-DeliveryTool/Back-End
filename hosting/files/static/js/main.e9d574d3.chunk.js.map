{"version":3,"sources":["images/fulllogo.png","images/headerLogo.png","components/Home.js","components/RequestModule/RequestModuleHome.js","components/DonationModule/DonationModuleHome.js","lib/StitchFunctions.js","components/DispatchModule/DispatchModuleHome.js","contexts/Global/GlobalStateContext.js","contexts/RequestModule/RequestContext.js","contexts/DonationModule/DonationContext.js","contexts/DispatcherModule/DispatchContext.js","App.js","serviceWorker.js","contexts/Global/GlobalStateProvider.js","contexts/DonationModule/DonationProvider.js","contexts/RequestModule/RequestProvider.js","contexts/DispatcherModule/DispatchProvider.js","index.js","ContextWrapper.js"],"names":["module","exports","Home","props","style","backgroundColor","height","color","paddingTop","className","fontSize","fontWeight","marginTop","onClick","history","push","paddingRight","paddingLeft","paddingBottom","size","window","location","replace","href","itemList","id","label","value","dropoff","time","RequestModuleHome","requestContext","state","step","loading","formData","errors","register","handleSubmit","clearError","setFormData","setLoading","setStep","validateStep1","validateStep2","validateStep3","fontFamily","onSubmit","ref","required","onChange","e","firstName","target","name","type","placeholder","marginBottom","message","lastName","phoneNumber","emailAddress","address","streetAddress","zipcode","zipCode","min","max","householdNum","document","getElementById","innerText","console","log","map","item","itemIndex","items","findIndex","a","itemsList","splice","key","disabled","length","additionalInfo","rows","width","src","fulllogo","DonationModuleHome","donationContext","establishMongoDbConnection","client","intializeStitchClient","errorCode","errorMessage","mongodb","getServiceClient","RemoteMongoClient","factory","db","err","initalizeStitchServiceClient","Stitch","initializeDefaultAppClient","defaultAppClient","anonymousUserLogin","auth","loginWithCredential","AnonymousCredential","getOrders","collection","find","toArray","orders","putOrder","body","callFunction","result","toString","checkUserAuth","isLoggedIn","hasRedirectResult","handleRedirectResult","credential","GoogleRedirectCredential","loginWithRedirect","logout","DispatchModuleHome","dispatchContext","selectedOrder","typeFilter","statusFilter","getOrdersForDispatcher","setSelectedOrder","setTypeFilter","setStatusFilter","globalContext","isAuthenticated","user","checkAuthStatus","getUser","setIsAuthenticated","useEffect","title","profile","data","logUserOut","toast","class","role","aria-label","filter","status","maxHeight","overflowY","applyFilters","order","for","display","aria-describedby","letterSpacing","or","driver","selected","dropoffTime","Date","dateCreated","toLocaleDateString","toLocaleTimeString","GlobalStateContext","React","createContext","RequestContext","DonationContext","DispatchContext","App","Consumer","autoClose","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","toastClassName","progressClassName","exact","path","render","Boolean","hostname","match","GlobalStateProvider","useState","setErrors","setUser","prom","currentUser","Provider","errs","bool","children","DonationProvider","useForm","formattedData","formatRequest","response","quantity","num","RequestProvider","values","DispatchProvider","setOrders","obj","str","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e9d574d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fulllogo.ec71ed57.png\";","module.exports = __webpack_public_path__ + \"static/media/headerLogo.b0b37d28.png\";","import React, {useState,useEffect} from 'react'\r\nimport {ChevronRight} from 'react-feather'\r\n\r\nexport default function Home(props){\r\n    return (\r\n        <div style={{backgroundColor: \"rgb(158, 69, 183)\",height:'100vh',color:'white'}}>\r\n            <div style={{paddingTop: '10rem'}} className=\"mr-auto ml-auto\">\r\n                <p className=\"text-center lead\" style={{fontSize:'2.25rem',fontWeight:'bolder'}}>StayNeighbor</p>\r\n            </div>\r\n            <div className=\"lead col-11 mr-auto ml-auto text-center\" style={{fontSize:'1.25rem',marginTop:'2rem'}}>\r\n                A volunteer-powered network for essential supplies - delivered in a safe, healthy, and organized way.\r\n            </div>\r\n            <div style={{marginTop:'3rem'}}>\r\n                <div className=\"col-xl-6 col-12 text-center mr-auto ml-auto\">\r\n                    <button onClick={() => props.history.push('/request')} className=\"btn col-10 underline-hover\" style={{color:'white',backgroundColor:'#480d63',fontSize:'1.25rem',paddingRight:50,paddingLeft:50,paddingTop:10,paddingBottom:10}}>I <b style={{fontWeight:'bolder'}}>need</b> supplies</button>\r\n                </div>\r\n                <div className=\"col-xl-6 col-12 text-center mt-4 mr-auto ml-auto\">\r\n                    <button onClick={() => props.history.push('/donate')} className=\"btn col-10 underline-hover\" style={{color:'white',backgroundColor:'#480d63',fontSize:'1.25rem',paddingRight:50,paddingLeft:50,paddingTop:10,paddingBottom:10}}>I <b style={{fontWeight:'bolder'}}>have</b> supplies</button>\r\n                </div>\r\n            </div>\r\n            <div style={{marginTop:15}} className=\"col-12 text-center\">\r\n                <p onClick={() => props.history.push('/dispatcher')} className=\"lead underline-hover\" style={{fontSize:'1.25rem'}}>Dispatchers  <ChevronRight size={18}/></p>\r\n            </div>\r\n\r\n            <nav className=\"navbar fixed-bottom\" style={{backgroundColor: '#6f2c8e',paddingBottom:15}}>\r\n                <div className=\"mr-auto ml-auto\">\r\n                    <a onClick={() => window.location.replace('https://www.stayneighbor.com')} style={{fontSize:11,color:'white'}} href=\"#\">StayNeighbor is a community-built platform.  <b style={{color:'yellow'}}>GET INVOLVED</b></a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { ArrowLeftCircle, Circle, CheckCircle, Plus } from 'react-feather';\r\nimport fulllogo from '../../images/fulllogo.png'\r\n\r\nconst itemList = [\r\n    { id: 1, label: 'Toilet Paper', value: 'toilet paper' },\r\n    { id: 2, label: 'Paper Towels', value: 'paper towels' },\r\n    { id: 3, label: 'Milk', value: 'milk' },\r\n    { id: 4, label: 'Eggs', value: 'eggs' },\r\n    { id: 5, label: 'Batteries - AA', value: 'batteries aa' },\r\n    { id: 6, label: 'Batteries - AAA', value: 'batters aaa' }\r\n];\r\n\r\nconst dropoff = [\r\n    { id: 'morning', label: 'Morning', time: '9am - 12pm' },\r\n    { id: 'afternoon', label: 'Afternoon', time: '12pm - 4pm' },\r\n    { id: 'evening', label: 'Evening', time: '4pm - 9pm' },\r\n];\r\n\r\nexport default function RequestModuleHome(props) {\r\n    const {step, loading, formData, errors} = props.requestContext.state; // provider state values\r\n    const { register, clearError, handleSubmit, setLoading, setFormData, setStep, validateStep1, validateStep2, validateStep3} = props.requestContext; // provider functions\r\n\r\n    if (step == 1) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: '1.75rem', fontWeight: 'bold' }}>\r\n                        Howdy, Neighbor!\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: '.9rem' }}>\r\n                        Let's get started with some information.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>While we need to share details with our volunteers, we will always keep your data private.</i>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 30 }} className=\"text-center\">\r\n                        <form onSubmit={handleSubmit(validateStep1)}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, firstName: e.target.value})}} name='firstName' style={{ backgroundColor: \"#00000017\" }} type=\"name\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"First Name\"></input>\r\n                                    {errors.firstName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.firstName.message || errors.firstName.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, lastName: e.target.value})}} name='lastName' style={{ backgroundColor: \"#00000017\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Last Name\"></input>\r\n                                    {errors.lastName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.lastName.message || errors.lastName.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, phoneNumber: e.target.value})}} name='phoneNumber' style={{ backgroundColor: \"#00000017\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Phone Number\"></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, emailAddress: e.target.value})}} name='emailAddress' style={{ backgroundColor: \"#00000017\" }} type=\"email\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Email Address\"></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, address: e.target.value})}} name='streetAddress' style={{ backgroundColor: \"#00000017\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Street Address\"></input>\r\n                                    {errors.streetAddress && <p style={{ color: 'red', marginBottom: 0 }}>{errors.streetAddress.message || errors.streetAddress.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} name='zipCode' onChange={(e) => {setFormData({...formData, zipcode: e.target.value})}} style={{ backgroundColor: \"#00000017\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Zip Code\"></input>\r\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group mr-auto ml-auto col-xl-4 col-md-8 mr-auto ml-auto text-center\">\r\n                                    <span className=\"text-center\" style={{ fontWeight: 'bolder', fontSize: '2rem' }} type=\"number\" id=\"peopleInHousehold\">0</span>\r\n                                    <input ref={register({ required: true, min: 0, max: 10 })} onChange={e => setFormData({...formData, householdNum: e.target.value})} name=\"peopleInHousehold\" ref={register({ required: true, max: 10, min: 1 })} name='phoneNumber' type=\"range\" defaultValue='0' onChange={(e) => document.getElementById('peopleInHousehold').innerText = e.target.value} className=\"custom-range\" min=\"0\" max=\"10\" id=\"customRange2\"></input>\r\n                                    <label className='lead'>People in Household</label>\r\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {!loading && <button onClick={() => validateStep1()} type=\"submit\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"col-xl-8 mr-auto ml-auto col-12 btn mt-4\">Continue</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n    console.log(formData)\r\n    if (step == 2) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => setStep(1)} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"col-11 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                        What can we provide?\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                        Please let us know any essential supplies you might need and our dispatchers will take it from here.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>Please, only select things you or your ones NEED.</i>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ marginTop: '2rem' }} className=\"col-10 mr-auto ml-auto\">\r\n                    <form>\r\n                        <div className=\"form-row mr-auto ml-auto\">\r\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {itemList.map(item => {\r\n                                        var itemIndex = formData.items.findIndex(a => a.value == item.value)\r\n                                        console.log('item is ', item);\r\n                                        console.log('itemIndex ', itemIndex);\r\n                                        if (formData.items && itemIndex > -1) {\r\n                                            var itemsList = [...formData.items]\r\n                                            itemsList.splice(itemIndex, 1)\r\n                                            console.log('item list ', itemsList)\r\n                                            return <li key={item.id} onClick={() => setFormData({ ...formData, items: itemsList })} className=\"list-group-item underline-hover\"><CheckCircle className=\"mr-3\" size={14} />{item.label}</li>\r\n                                        } else {\r\n                                            return (\r\n                                                <li key={item.id} onClick={() => setFormData({ ...formData, items: [...formData.items, item] })} className=\"underline-hover list-group-item\"><Circle className=\"mr-3\" size={14} />{item.label}</li>\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                                <input name='firstName' style={{ backgroundColor: \"#00000017\" }} type=\"name\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"+ Add additional Item\"></input>\r\n                                <button className=\"btn btn-sm btn-outline-success mt-3\"><Plus /> Add Another</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mr-auto ml-auto text-center\">\r\n                            {!loading && <button onClick={() => validateStep2()} disabled={formData && (!formData.items || (formData.items && formData.items.length === 0))}  type=\"submit\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"btn text-center mr-auto ml-auto col-xl-6 col-12 mt-4\">Continue</button>}\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 3) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => setStep(1)} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '7rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                        Just a few more details.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                        Now we just need some details for our drivers so they can safely deliver your supplies.\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ marginTop: 50 }} className=\"col-xl-6 col-10 mr-auto ml-auto\">\r\n                    <form onSubmit={handleSubmit(validateStep3)}>\r\n                        <div className=\"form-row\">\r\n                            <span>DROPOFF TIME</span>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {dropoff.map(item => {\r\n                                        return <li key={item.id} onClick={() => setFormData({...formData, dropoff: item})} className=\"list-group-item underline-hover\">{formData.dropoff === item ? <CheckCircle className=\"mr-3\" size={14} /> : <Circle className=\"mr-3\" size={14} />}{item.label} ({item.time})</li>\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                                <label>Special Instructions</label>\r\n                                <textarea onChange={e => setFormData({...formData, additionalInfo: e.target.value})} placeholder=\"Enter any special instructions for our driver, e.g. ring doorbell, leave at front desk, etc..\" className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {!loading && <button type=\"submit\" disabled={formData && (!formData.dropoff)} style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"btn col-12 mt-4\">Continue</button>}\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if(step == 4){\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\" style={{paddingTop:'8rem'}}>\r\n                    <div className=\"mr-auto ml-auto text-center\">\r\n                        <img className=\"mr-auto ml-auto\" style={{width:'25rem'}} src={fulllogo}/>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-4\">\r\n                        <span className=\"lead\" style={{fontSize:'4rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Help is on the way.</span>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                        <span className=\"lead\" style={{fontSize:'1.5rem',color:\"rgba(0, 0, 0, 0.42)\"}}>When your order is assigned to a driver, we will let you know.</span>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                        <button onClick={() => props.history.push('/')} className=\"btn btn-outline-brand btn-lg\">Home</button>\r\n                        <button onClick={() => window.location.replace('https://stayneighbor.com')} className=\"btn btn-outline-brand btn-lg\">Learn More</button>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { ArrowLeftCircle, Circle, CheckCircle, Plus } from 'react-feather'\r\nimport fulllogo from '../../images/fulllogo.png'\r\nimport headerLogo from '../../images/headerLogo.png'\r\n\r\nconst dropoff = [\r\n    { id: 'morning', label: 'Morning', time: '9am - 12pm' },\r\n    { id: 'afternoon', label: 'Afternoon', time: '12pm - 4pm' },\r\n    { id: 'evening', label: 'Evening', time: '4pm - 9pm' },\r\n];\r\n\r\nconst itemList = [\r\n    { id: 1, label: 'Toilet Paper', value: 'toilet paper' },\r\n    { id: 2, label: 'Paper Towels', value: 'paper towels' },\r\n    { id: 3, label: 'Milk', value: 'milk' },\r\n    { id: 4, label: 'Eggs', value: 'eggs' },\r\n    { id: 5, label: 'Batteries - AA', value: 'batteries aa' },\r\n    { id: 6, label: 'Batteries - AAA', value: 'batters aaa' }\r\n];\r\n\r\nexport default function DonationModuleHome(props) {\r\n    const {step, loading, formData, errors} = props.donationContext.state; // provider state values\r\n    const { register, clearError, handleSubmit, setLoading, setFormData, setStep, validateStep1, validateStep2, validateStep3} = props.donationContext; // provider functions\r\n\r\n    if (step === 1) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 underline-hover\" onClick={() => props.history.push('/')} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: '1.75rem', fontWeight: 'bold' }}>\r\n                        Howdy, Neighbor!\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: '.9rem' }}>\r\n                        Let's get started with some information.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>While we need to share details with our volunteers, we will always keep your data private.</i>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 30 }} className=\"text-center\">\r\n                        <form onSubmit={handleSubmit(validateStep1)}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} onChange={(e) => {setFormData({...formData, firstName: e.target.value})}} name='firstName' style={{ backgroundColor: \"#00000017\" }} type=\"name\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"First Name\"></input>\r\n                                    {errors.firstName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.firstName.message || errors.firstName.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} name='lastName' onChange={(e) => setFormData({...formData, lastName: e.target.value})} style={{ backgroundColor: \"#00000017\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Last Name\"></input>\r\n                                    {errors.lastName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.lastName.message || errors.lastName.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} name='phoneNumber' onChange={(e) => setFormData({...formData, phoneNumber: e.target.value})} style={{ backgroundColor: \"#00000017\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Phone Number\"></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} name='emailAddress' onChange={(e) => setFormData({...formData, emailAddress: e.target.value})} style={{ backgroundColor: \"#00000017\" }} type=\"email\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Email Address\"></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} name='streetAddress' onChange={(e) => setFormData({...formData, address: e.target.value})} style={{ backgroundColor: \"#00000017\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Street Address\"></input>\r\n                                    {errors.streetAddress && <p style={{ color: 'red', marginBottom: 0 }}>{errors.streetAddress.message || errors.streetAddress.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input ref={register({ required: true })} name='zipCode' onChange={(e) => setFormData({...formData, zipcode: e.target.value})} style={{ backgroundColor: \"#00000017\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Zip Code\"></input>\r\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {!loading && <button onClick={() => validateStep1()} type=\"submit\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"col-xl-8 mr-auto ml-auto col-12 btn mt-4\">Continue</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 2) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 underline-hover\" onClick={() => setStep(1)} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"col-11 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                        What can you donate?\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                        Please let us know any supplies you can donate and our dispatchers will take it from here.\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ marginTop: '2rem' }} className=\"col-10 mr-auto ml-auto\">\r\n                    <form>\r\n                        <div className=\"form-row mr-auto ml-auto\">\r\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {itemList.map(item => {\r\n                                        var itemIndex = formData.items.findIndex(a => a.value == item.value)\r\n                                        if (formData.items && itemIndex > -1) {\r\n                                            var itemsList = [...formData.items]\r\n                                            itemsList.splice(itemIndex, 1)\r\n                                            console.log(itemsList)\r\n                                            return <li key={item.id} onClick={() => setFormData({ ...formData, items: itemsList })} className=\"list-group-item underline-hover\"><CheckCircle className=\"mr-3\" size={14} />{item.label}</li>\r\n                                        } else {\r\n                                            return (\r\n                                                <li key={item.id} onClick={() => setFormData({ ...formData, items: [...formData.items, item] })} className=\"list-group-item underline-hover\"><Circle className=\"mr-3\" size={14} />{item.label}</li>\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                                <input name='firstName' style={{ backgroundColor: \"#00000017\" }} type=\"name\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"+ Add additional Item\"></input>\r\n                                <button className=\"btn btn-sm btn-outline-success mt-3\"><Plus /> Add Another</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mr-auto ml-auto text-center\">\r\n                            {!loading && <button onClick={() => validateStep2()} disabled={formData && (!formData.items || (formData.items && formData.items.length === 0))} type=\"submit\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"btn text-center mr-auto ml-auto col-xl-6 col-12 mt-4\">Continue</button>}\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 3) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3\" onClick={() => setStep(1)} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '7rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                        Just a few more details.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                        Now we just need some details for our drivers so they can safely pick up your donations.\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ marginTop: 50 }} className=\"col-xl-6 col-10 mr-auto ml-auto\">\r\n                    <form onSubmit={handleSubmit(validateStep3)}>\r\n                        <div className=\"form-row\">\r\n                            <span>DROPOFF TIME</span>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    {dropoff.map(item => {\r\n                                        return <li key={item.id} onClick={() => setFormData({...formData, dropoff: item})} className=\"list-group-item underline-hover\">{formData.dropoff === item ? <CheckCircle className=\"mr-3\" size={14} /> : <Circle className=\"mr-3\" size={14} />}{item.label} ({item.time})</li>\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                                <label>Special Instructions</label>\r\n                                <textarea onChange={e => setFormData({...formData, additionalInfo: e.target.value})} placeholder=\"Enter any special instructions for our driver, e.g. ring doorbell, pick up box from front desk, etc..\" className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {!loading && <button type=\"submit\" disabled={formData && (!formData.dropoff)} style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"btn col-12 mt-4\">Continue</button>}\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if(step == 4){\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-xl-6 col-11 mr-auto ml-auto\" style={{paddingTop:'8rem'}}>\r\n                    <div className=\"mr-auto ml-auto text-center\">\r\n                        <img className=\"mr-auto ml-auto\" style={{width:'25rem'}} src={fulllogo}/>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-4\">\r\n                        <span className=\"lead\" style={{fontSize:'4rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Thank you!</span>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                        <span className=\"lead\" style={{fontSize:'2.0rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Words cannot express our gratitude.</span>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                        <span className=\"lead\" style={{fontSize:'1.5rem',color:\"rgba(0, 0, 0, 0.42)\"}}>A driver will pickup your order and ensure it reaches someone in need.</span>\r\n                    </div>\r\n                    <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                        <button onClick={() => props.history.push('/')} className=\"btn btn-outline-brand btn-lg\">Home</button>\r\n                        <button onClick={() => window.location.replace('https://stayneighbor.com')} className=\"btn btn-outline-brand btn-lg\">Learn More</button>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}","import {Stitch,RemoteMongoClient,AnonymousCredential,GoogleRedirectCredential} from 'mongodb-stitch-browser-sdk'\r\nimport {toast} from 'react-toastify'\r\n\r\nfunction establishMongoDbConnection(){\r\n    //get our default app client\r\n    const client = intializeStitchClient()\r\n\r\n    if(client.errorCode) return {errorCode: '002', errorMessage: client}\r\n\r\n    const mongodb = initalizeStitchServiceClient(client)\r\n\r\n    if(mongodb.errorCode) return {errorCode: '003', errorMessage: mongodb}\r\n    \r\n    return mongodb\r\n}\r\n\r\nexport function initalizeStitchServiceClient(client){\r\n    try{\r\n        return client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db('stayneighbor-dev');\r\n    } catch(err){\r\n        return {errorCode: '002', errorMessage: err}\r\n    }\r\n}\r\n\r\nexport function intializeStitchClient(){\r\n    try {\r\n        //return Stitch.initializeDefaultAppClient('stayneighbor-bjuma');\r\n        return Stitch.initializeDefaultAppClient('stayneighbor_dev-nszik');\r\n    } catch(err){\r\n        return Stitch.defaultAppClient\r\n    }\r\n}\r\n\r\nexport async function anonymousUserLogin(){\r\n    try {\r\n        var client = intializeStitchClient()\r\n        var auth = await client.auth.loginWithCredential(new AnonymousCredential)\r\n        console.log(auth)\r\n    } catch(e) {\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function getOrders(){\r\n    await anonymousUserLogin()\r\n    var db = establishMongoDbConnection()\r\n\r\n    try {\r\n        const orders = await db.collection('orders').find().toArray()\r\n        return orders\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function putOrder(body){\r\n    await anonymousUserLogin();\r\n    try{\r\n        //get our default app client\r\n        const client = intializeStitchClient()\r\n        var result = await client.callFunction(\"createOrder\", [body]);\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        else return true\r\n    } catch(e){\r\n        return {errorCode: '002', errorMessage: e.toString()}\r\n    }\r\n}\r\n\r\nexport async function checkUserAuth(){\r\n    try {\r\n        //get our default app client\r\n        const client = intializeStitchClient()\r\n\r\n        if(client.auth.isLoggedIn){\r\n            return true\r\n        } else {\r\n            if(client.auth.hasRedirectResult()){\r\n                var result = await client.auth.handleRedirectResult()\r\n                if(result.isLoggedIn === true) return true\r\n            }\r\n\r\n            const credential = new GoogleRedirectCredential()\r\n            await client.auth.loginWithRedirect(credential)\r\n            return null\r\n        }\r\n    } catch (e){\r\n\r\n    }\r\n}\r\n\r\nexport async function logUserOut(){\r\n    await intializeStitchClient().auth.logout()\r\n    return true\r\n}\r\n\r\nexport function getUserInfo(){\r\n    return intializeStitchClient().auth.currentUser\r\n}","import React, {useEffect} from 'react'\r\nimport { ArrowLeftCircle,LogOut,X,User} from 'react-feather'\r\nimport {logUserOut} from '../../lib/StitchFunctions'\r\nimport {toast} from 'react-toastify'\r\n\r\nexport default function DispatchModuleHome(props){\r\n    const { orders, selectedOrder, typeFilter, statusFilter } = props.dispatchContext.state\r\n    const { getOrdersForDispatcher, setSelectedOrder, setTypeFilter, setStatusFilter } = props.dispatchContext\r\n    var { isAuthenticated, user } = props.globalContext.state\r\n    var { checkAuthStatus, getUser, setIsAuthenticated } = props.globalContext\r\n\r\n    useEffect(() => {\r\n        checkAuthStatus()\r\n        if(isAuthenticated) getUser()\r\n        if(isAuthenticated && user && !orders) getOrdersForDispatcher()\r\n    }, [isAuthenticated, user, orders])\r\n\r\n    function applyFilters(orders){\r\n        if(typeFilter) orders = orders.filter(a => a.type === typeFilter)\r\n        if(statusFilter) orders = orders.filter(a => a.status === statusFilter)\r\n        return orders\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6F2C8E', paddingBottom: 15 }}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    {isAuthenticated === true && user ? <span title=\"Log Out\" className=\"ml-auto float-right text-white\">Welcome {user.profile.data.name}!  <LogOut onClick={() => {\r\n                        logUserOut()\r\n                        setIsAuthenticated(false)\r\n                        props.history.push('/')\r\n                        toast(\"You have been logged out!\")\r\n                    }} className=\"hover ml-2\"/></span> : ''}\r\n                </div>\r\n            </nav>\r\n\r\n            {isAuthenticated && user && orders ? \r\n                <div className=\"col-12 row mr-auto ml-auto\" style={{marginTop:75}}>\r\n                    <div className=\"col-3\" style={{paddingLeft:0,paddingRight:0}}>\r\n                        <div className={{width:'100%'}}>\r\n                            <div>\r\n                                <label style={{width:'100%',fontSize:'.9rem'}} className=\"mb-0 pb-0 ml-2 lead\">Order Type</label>\r\n                                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button onClick={() => setTypeFilter('REQUEST')} type=\"button\" class={`${typeFilter === 'REQUEST' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Requests ({orders.filter(a => a.type === 'REQUEST').length})</button>\r\n                                    <button onClick={() => setTypeFilter('DONATION')} type=\"button\" class={`${typeFilter === 'DONATION' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Donations ({orders.filter(a => a.type === 'DONATION').length})</button>\r\n                                    <X onClick={() => setTypeFilter(false)} style={{marginTop:'.75rem',color:\"grey\"}} className=\"hover ml-1\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <label style={{width:'100%',fontSize:'.9rem'}} className=\"mb-0 pb-0 ml-2 lead\">Order Status</label>\r\n                                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button onClick={() => setStatusFilter('PENDING')} type=\"button\" class={`${statusFilter === 'PENDING' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Pending ({orders.filter(a => a.status === 'PENDING').length})</button>\r\n                                    <button onClick={() => setStatusFilter('ASSIGNED')} class={`${statusFilter === 'ASSIGNED' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Assigned ({orders.filter(a => a.type === 'ASSIGNED').length})</button>\r\n                                    <button onClick={() => setStatusFilter('COMPLETED')} class={`${statusFilter === 'COMPLETED' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Completed ({orders.filter(a => a.type === 'COMPLETED').length})</button>\r\n                                    <X onClick={() => setStatusFilter(false)} style={{marginTop:'.75rem',color:\"grey\"}} className=\"hover ml-1\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{maxHeight:'80vh',overflowY:'auto',paddingLeft:0,paddingRight:0}} className=\"mt-2\">\r\n                                {orders && applyFilters(orders).map(order => {\r\n                                    return (\r\n                                        <li style={{fontSize:12,paddingLeft:5,paddingRight:5}} class={`list-group-item order-list ${order == selectedOrder ? 'active-order': \"\"}`} onClick={() => setSelectedOrder(order)}>\r\n                                            <form>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-3 mr-2\">\r\n                                                        <label for=\"exampleInputEmail1\"><b>Type</b></label>\r\n                                                        <span style={{display:'block'}} className={order.type === \"REQUEST\" ? 'request-type' : 'donation-type'}>{order.type}</span>\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-4 mr-2\">\r\n                                                        <label for=\"exampleInputEmail1\"><b>Name</b></label>\r\n                                                        <span type=\"email\" style={{display:'block'}} aria-describedby=\"emailHelp\">{order.firstName} {order.lastName}</span>\r\n                                                    </div>\r\n                                                    {/* <div className=\"form-group col-2 mr-2\">\r\n                                                        <label for=\"exampleInputEmail1\"><b>People</b></label>\r\n                                                        <span type=\"email\" style={{display:'block'}} aria-describedby=\"emailHelp\">{order.householdNum}</span>\r\n                                                    </div> */}\r\n                                                    <div className=\"form-group col-3 mr-2\">\r\n                                                        <label for=\"exampleInputEmail1\"><b>Status</b></label>\r\n                                                        <span type=\"email\" style={{display:'block'}} aria-describedby=\"emailHelp\">{order.status}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={selectedOrder ? \"col-6\" : 'col-9'}>\r\n                        <h6>Map</h6>\r\n                    </div>\r\n                    \r\n                    {selectedOrder ? \r\n                        <div style={{width:\"20%\",fontSize:12}} className=\"ml-auto pl-2\">\r\n                            <form>\r\n                                <div className=\"form-row\">\r\n                                    <label style={{width:'100%',fontSize:'1.2rem',letterSpacing:'.03rem'}} className=\"mb-2 pb-0 lead\"><u>{selectedOrder.type} Details</u></label>\r\n                                    {/* <span style={{fontWeight:'bolder'}}><u>{selectedOrder.type} Details</u></span> */}\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group mr-2\">\r\n                                        <label for=\"exampleInputEmail1\" className=\"lead\" style={{fontSize:'.9rem'}}><b>Type</b></label>\r\n                                        <span style={{display:'block',fontSize:'.9rem'}} className={selectedOrder.type === \"REQUEST\" ? 'request-type lead mt-1' : 'donation-type lead mt-1'}>{selectedOrder.type}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mr-2\">\r\n                                        <label for=\"exampleInputEmail1\" className=\"lead\" style={{fontSize:'.9rem'}}><b>Name</b></label>\r\n                                        <span className=\"lead\" type=\"email\" style={{display:'block'}} aria-describedby=\"emailHelp\">{selectedOrder.firstName} {selectedOrder.lastName}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mr-2\">\r\n                                        {/* <label for=\"exampleInputEmail1\"><b># in House</b></label> */}\r\n                                        <User/>\r\n                                        <span className=\"ml-2 lead mt-2\" type=\"email\" style={{display:'block',fontSize:\"1.0rem\"}} aria-describedby=\"emailHelp\">{selectedOrder.householdNum}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group mr-2 col-5\">\r\n                                        <label className='lead' style={{fontSize:'.9rem'}} or=\"exampleInputEmail1\"><b>Assigned To</b></label>\r\n                                        <select style={{display:'block'}} >{['','Patrick Willetts','Dillon Harless'].map(driver => {\r\n                                            return <option>{driver}</option>\r\n                                        })}</select>\r\n                                    </div>\r\n                                    <div className=\"form-group col-5 mr-2\">\r\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Status</b></label>\r\n                                        <select selected={selectedOrder.status} style={{display:'block'}} >{['ASSIGNED','PENDING','COMPLETED'].map(status => {\r\n                                            return <option selected={selectedOrder.status === status ? true : false}>{status}</option>\r\n                                        })}</select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group mr-2 col-5\">\r\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Address</b></label>\r\n                                        <span className='lead' style={{display:'block', fontSize:'.9rem'}}>{selectedOrder.address}</span>\r\n                                    </div>\r\n                                    <div className='lead' className=\"form-group mr-2 col-5\">\r\n                                        <label className=\"lead\" style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Zip Code</b></label>\r\n                                        <span className='lead' type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.zipcode}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group mr-2 col-5\">\r\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>{selectedOrder.type === 'DONATION' ? 'Pickup Time' : 'Delivery Time'}</b></label>\r\n                                        <span className='lead' type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.dropoffTime}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mr-2 col-5\">\r\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Phone Number</b></label>\r\n                                        <span className='lead' type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.phoneNumber}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group mr-2 col-5\">\r\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Date Created</b></label>\r\n                                        <span type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{new Date(selectedOrder.dateCreated).toLocaleDateString()} {new Date(selectedOrder.dateCreated).toLocaleTimeString()}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mr-2 col-5\">\r\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Phone Number</b></label>\r\n                                        <span type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.phoneNumber}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group mr-2 col-5\">\r\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Items</b></label>\r\n                                        <span type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.items.map(item => item.name)}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group mr-2 col-5\">\r\n                                        <label className='lead' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Additional Info</b></label>\r\n                                        <span type=\"email\" style={{display:'block',fontSize:'.9rem'}} aria-describedby=\"emailHelp\">{selectedOrder.additionalInfo}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    \r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    : ''}\r\n                </div> \r\n            \r\n            : ''}\r\n\r\n            {!isAuthenticated ? \r\n                <div className=\"col-6 text-center mr-auto ml-auto\" style={{marginTop:'15rem'}}>\r\n                    <div>\r\n                        <span className=\"h5\">Select a login partner...</span>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n        </main>\r\n    )\r\n}","import React from 'react';\r\n\r\nconst GlobalStateContext = React.createContext();\r\n\r\nexport default GlobalStateContext; ","import React from 'react';\r\n\r\nconst RequestContext = React.createContext();\r\n\r\nexport default RequestContext; ","import React from 'react';\r\n\r\nconst DonationContext = React.createContext();\r\n\r\nexport default DonationContext; ","import React from 'react';\r\n\r\nconst DispatchContext = React.createContext();\r\n\r\nexport default DispatchContext; ","import React from 'react';\r\nimport {BrowserRouter,Route,Redirect,Switch} from 'react-router-dom'\r\nimport {ToastContainer} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Home from './components/Home'\r\nimport RequestModule from './components/RequestModule/RequestModuleHome'\r\nimport DonationModule from './components/DonationModule/DonationModuleHome'\r\nimport './css/App.css';\r\nimport './css/bootstrap.min.css'\r\nimport DispatchModuleHome from './components/DispatchModule/DispatchModuleHome';\r\nimport GlobalStateContext from './contexts/Global/GlobalStateContext';\r\nimport RequestContext from './contexts/RequestModule/RequestContext';\r\nimport DonationContext from './contexts/DonationModule/DonationContext';\r\nimport DispatchContext from './contexts/DispatcherModule/DispatchContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalStateContext.Consumer>\r\n      {globalContext => (\r\n        <BrowserRouter>\r\n        <ToastContainer\r\n            autoClose={5000}\r\n            newestOnTop\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnVisibilityChange\r\n            draggable\r\n            pauseOnHover\r\n            className='toast-container'\r\n            toastClassName=\"toastify-brand\"\r\n            progressClassName=\"toastify-progress-bar\"\r\n        />\r\n\r\n        <Switch>\r\n            <Route exact={true} path=\"/\" render={(props) => <Home globalContext={globalContext} {...props}/>}/>\r\n            <Route exact={true} path=\"/request\" render={(props) => <RequestContext.Consumer>{requestContext => (<RequestModule globalContext={globalContext} requestContext={requestContext} {...props}/>)}</RequestContext.Consumer>}/>\r\n            <Route exact={true} path=\"/donate\" render={(props) => <DonationContext.Consumer>{donationContext => (<DonationModule globalContext={globalContext} donationContext={donationContext} {...props}/>)}</DonationContext.Consumer>}/>\r\n            <Route exact={true} path=\"/dispatcher\" render={(props) => <DispatchContext.Consumer>{dispatchContext => (<DispatchModuleHome globalContext={globalContext} dispatchContext={dispatchContext} {...props}/>)}</DispatchContext.Consumer>}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      )}\r\n    </GlobalStateContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// All things that should be accessed in a global setting will live here\r\nimport React, {useState} from 'react';\r\nimport GlobalStateContext from './GlobalStateContext';\r\nimport {checkUserAuth,getUserInfo} from '../../lib/StitchFunctions'\r\n\r\nconst GlobalStateProvider = props => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n    const [errors, setErrors] = useState({});\r\n    const [user, setUser] = useState(null);\r\n\r\n    const checkAuthStatus = async () =>{\r\n        const prom = await checkUserAuth()\r\n        setIsAuthenticated(prom)\r\n    }\r\n\r\n    const getUser = async () => {\r\n     //example of calling a stich function inside here\r\n        const prom = getUserInfo();\r\n        setUser(prom);\r\n    }\r\n    \r\n    return (\r\n        <GlobalStateContext.Provider // this is where we expose state values and functions to the rest of the application\r\n            value={{\r\n                state: { // for organization reasons I like keep all state values inside a state object\r\n                    isAuthenticated: isAuthenticated,\r\n                    errors: errors,\r\n                    user: user\r\n                },\r\n                setErrors: (errs) => setErrors(errs),\r\n                setIsAuthenticated: (bool) => setIsAuthenticated(bool), // expose only the functions that are necessary\r\n                checkAuthStatus: () => checkAuthStatus(),\r\n                getUser: () => getUser()\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalStateContext.Provider>\r\n    )\r\n};\r\n\r\nexport default GlobalStateProvider;","import React, {useState} from 'react';\r\nimport DonationContext from './DonationContext';\r\nimport { useForm } from 'react-hook-form';\r\nimport { toast } from 'react-toastify';\r\nimport { putOrder } from '../../lib/StitchFunctions';\r\n\r\nconst DonationProvider = props => {\r\n    var { register, errors, clearError, handleSubmit } = useForm();\r\n    const [step, setStep] = useState(1);\r\n    var [loading, setLoading] = useState(false);\r\n    const [formData, setFormData] = useState({ \r\n        firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], dropoff: null });\r\n\r\n    const validateStep1 = () => {\r\n        console.log('forData ', formData);\r\n        // todo handle address validation logic\r\n        setStep(2)\r\n    };\r\n\r\n    const validateStep2 = () => {\r\n        // todo handle requested item validation\r\n        setStep(3);\r\n    };\r\n\r\n    const validateStep3 = async () => {\r\n        // todo handle dropoff time validation\r\n        setLoading(true);\r\n        // format put request data\r\n        const formattedData = formatRequest();\r\n        const response = await putOrder(formattedData);\r\n        setLoading(false);\r\n        if(response && !response.errorCode){\r\n            toast('Donation submitted successfully!')\r\n            setStep(1)\r\n        } else {\r\n            toast('There was an error submitting your donation.');\r\n        }\r\n    };\r\n\r\n    const formatRequest = () => {\r\n        // todo write logic to format the request object to match the data model given by backend\r\n        const body = {};\r\n        body.firstName = formData.firstName;\r\n        body.lastName = formData.lastName;\r\n        body.address = formData.address;\r\n        body.phoneNumber =  formData.phoneNumber;\r\n        body.zipcode = formData.zipcode;\r\n        body.time = formData.dropoff.id;\r\n        body.type = 'DONATION';\r\n        body.items = formData.items.map(item => ({name: item.value, quantity: 1}));\r\n        body.additionalInfo =formData.additionalInfo;\r\n        return body;\r\n    };\r\n\r\n    return(\r\n        <DonationContext.Provider\r\n            value={{\r\n                state: {\r\n                    // put state values here\r\n                    step, // shorthand for step: step\r\n                    loading,\r\n                    formData,\r\n                    errors\r\n                },\r\n                // put functions you want to expose here\r\n                setStep: (num) => setStep(num),\r\n                setLoading: (bool) => setLoading(bool),\r\n                setFormData: (data) => setFormData(data),\r\n                register: () => register(),\r\n                clearError: () => clearError(),\r\n                handleSubmit: (e) => handleSubmit(e),\r\n                validateStep1: () => validateStep1(),\r\n                validateStep2: () => validateStep2(),\r\n                validateStep3: () => validateStep3() \r\n            }}\r\n        >\r\n            {props.children}\r\n        </DonationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DonationProvider;","import React, {useState} from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport RequestContext from './RequestContext';\r\nimport { toast } from 'react-toastify';\r\nimport { putOrder } from '../../lib/StitchFunctions';\r\n\r\nconst RequestProvider = props => {\r\n    const { register, errors, clearError, handleSubmit } = useForm();\r\n    \r\n    const [step, setStep] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [formData, setFormData] = useState({ \r\n        firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], dropoff: null });\r\n\r\n    const validateStep1 = (values) => {\r\n        setFormData({ ...formData, values });\r\n        // todo handle address validation logic\r\n        setStep(2)\r\n    };\r\n\r\n    const validateStep2 = () => {\r\n        // todo handle requested item validation\r\n        setStep(3)\r\n    };\r\n\r\n    const validateStep3 = async() => {\r\n        // todo handle dropoff time validation\r\n        setLoading(true);\r\n        // format put request data\r\n        const formattedData = formatRequest();\r\n        const response = await putOrder(formattedData);\r\n        setLoading(false);\r\n        if(response && !response.errorCode){\r\n            toast('Request submitted successfully!')\r\n            setStep(4)\r\n        } else {\r\n            toast('There was an error submitting your request.');\r\n        }\r\n    };\r\n\r\n    const formatRequest = () => {\r\n        // todo write logic to format the request object to match the data model given by backend\r\n        const body = {};\r\n        body.firstName = formData.firstName;\r\n        body.lastName = formData.lastName;\r\n        body.address = formData.address;\r\n        body.phoneNumber =  formData.phoneNumber;\r\n        body.zipcode = formData.zipcode;\r\n        body.time = formData.dropoff.id;\r\n        body.type = 'REQUEST';\r\n        body.items = formData.items.map(item => ({name: item.value, quantity: 1}));\r\n        body.additionalInfo = formData.additionalInfo;\r\n        body.householdNum = formData.householdNum;\r\n        return body; \r\n    };\r\n\r\n    return (\r\n        <RequestContext.Provider \r\n            value={{\r\n                state: {\r\n                    step, // shorthand for step: step\r\n                    loading,\r\n                    formData,\r\n                    errors\r\n                    // state values you want to expose go here\r\n                },\r\n                setStep: (num) => setStep(num),\r\n                setLoading: (bool) => setLoading(bool),\r\n                setFormData: (data) => setFormData(data),\r\n                register: () => register(),\r\n                clearError: () => clearError(),\r\n                handleSubmit: (e) => handleSubmit(e),\r\n                validateStep1: () => validateStep1(),\r\n                validateStep2: () => validateStep2(),\r\n                validateStep3: () => validateStep3() \r\n                // functions you want to expose go here\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n};\r\n\r\nexport default RequestProvider;","import React, { useState } from 'react';\r\nimport DispatchContext from './DispatchContext';\r\nimport { getOrders } from '../../lib/StitchFunctions';\r\n\r\nconst DispatchProvider = props => {\r\n    const [orders, setOrders] = useState(false)\r\n    const [selectedOrder, setSelectedOrder] = useState(false)\r\n    const [typeFilter, setTypeFilter] = useState(false)\r\n    const [statusFilter, setStatusFilter] = useState(false)\r\n\r\n    const getOrdersForDispatcher = async () =>{\r\n        try{\r\n            const prom = await getOrders()\r\n            if(prom.errorCode) return //set into global error state or local?\r\n            setOrders(prom)\r\n        } catch(e){\r\n            //set error into global state?\r\n        }\r\n    } \r\n\r\n    return (\r\n        <DispatchContext.Provider \r\n            value={{\r\n                state: {\r\n                    // put your state that you want to expose in here\r\n                    orders: orders,\r\n                    selectedOrder: selectedOrder,\r\n                    typeFilter: typeFilter,\r\n                    statusFilter: statusFilter\r\n                },\r\n                // expose functions here\r\n                getOrdersForDispatcher: () => getOrdersForDispatcher(),\r\n                setSelectedOrder: (obj) => setSelectedOrder(obj),\r\n                setTypeFilter: (str) => setTypeFilter(str),\r\n                setStatusFilter: (str) => setStatusFilter(str)\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DispatchContext.Provider>\r\n    )\r\n};\r\n\r\nexport default DispatchProvider;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ContextWrapper from './ContextWrapper';\r\n\r\nReactDOM.render(<ContextWrapper><App /></ContextWrapper>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// manage the context providers in here, this function will just return the context providers which wraps app.js\r\n// global state is the only provider and consumer most likely in here\r\nimport React from 'react';\r\nimport GlobalStateProvider from \"./contexts/Global/GlobalStateProvider\";\r\nimport GlobalStateContext from \"./contexts/Global/GlobalStateContext\";\r\nimport DonationProvider from \"./contexts/DonationModule/DonationProvider\";\r\nimport RequestProvider from './contexts/RequestModule/RequestProvider';\r\nimport DispatchProvider from './contexts/DispatcherModule/DispatchProvider';\r\n\r\n// if you want you can pass the globalContext right into your provider as a prop. It will then be available\r\nexport default props => (\r\n    <GlobalStateProvider>\r\n        <GlobalStateContext.Consumer>\r\n            {globalContext => (\r\n                <DonationProvider>\r\n                    <RequestProvider>\r\n                        <DispatchProvider>\r\n                            {props.children}\r\n                        </DispatchProvider>\r\n                    </RequestProvider>\r\n                </DonationProvider>\r\n            )}\r\n        </GlobalStateContext.Consumer>\r\n    </GlobalStateProvider>\r\n)"],"sourceRoot":""}