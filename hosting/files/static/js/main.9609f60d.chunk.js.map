{"version":3,"sources":["components/StayNeighborBrand.js","components/Home.js","components/MenuBar.js","data/orders.js","components/ItemList.js","components/Order/OrderConfirmationModal.js","components/Order/OrderDropOffTime.js","components/Order/OrderCompleteLandingPage.js","components/RequestModule/RequestModuleHome.js","components/DonationModule/DonationModuleHome.js","components/Error.js","components/Loading.js","lib/StitchFunctions.js","components/Order/OrderComplete.js","components/DispatchModule/ConfirmChangesModal.js","components/GoogleMaps/Marker.js","components/GoogleMaps/GoogleMap.js","components/GoogleMaps/MarkerInfoWindowGmapsObj.js","components/DispatchModule/DispatchModuleHome.js","contexts/Global/GlobalStateContext.js","contexts/RequestModule/RequestContext.js","contexts/DonationModule/DonationContext.js","contexts/DispatcherModule/DispatchContext.js","App.js","serviceWorker.js","contexts/Global/GlobalStateProvider.js","contexts/DonationModule/DonationProvider.js","contexts/RequestModule/RequestProvider.js","contexts/DispatcherModule/DispatchProvider.js","index.js","ContextWrapper.js","images/fulllogo.png"],"names":["StayNeighborBrand","className","style","paddingTop","alt","width","maxWidth","src","fulllogo","Home","props","backgroundColor","paddingBottom","fontSize","color","href","height","marginTop","fontWeight","onClick","history","push","paddingRight","paddingLeft","size","window","location","replace","MenuBar","goBackTo","setStep","dropoff","id","label","time","itemList","value","ItemList","formData","stepTwoIsValid","setFormData","validateStep2","map","item","itemIndex","items","findIndex","a","itemsList","splice","key","freeTextItems","index","maxLength","onChange","e","list","target","name","type","placeholder","length","title","disabled","OrderConfirmationModal","showModal","setShowModal","loading","submitRequest","errors","Modal","show","onHide","Body","borderTop","letterSpacing","address","listStyleType","firstName","lastName","zipcode","phoneNumber","emailAddress","border","additionalInfo","Spinner","animation","role","OrderDropOffTime","validateStep3","stepThreeIsValid","fontFamily","rows","OrderCompleteLandingPage","Fragment","RequestModuleHome","requestContext","state","step","stepOneIsValid","setLoading","validateStep1","setErrors","required","householdNum","min","max","DonationModuleHome","donationContext","submitDonation","Error","console","log","globalContext","login","Loading","establishMongoDbConnection","client","intializeStitchClient","errorCode","errorMessage","mongodb","getServiceClient","RemoteMongoClient","factory","db","err","initalizeStitchServiceClient","Stitch","initializeDefaultAppClient","defaultAppClient","functionUserLogin","auth","loginWithCredential","FunctionCredential","getOrders","callFunction","result","putOrder","body","isLoggedIn","logout","logUserOut","toString","checkUserAuth","hasRedirectResult","handleRedirectResult","credential","GoogleRedirectCredential","loginWithRedirect","getUserInfo","refreshCustomData","collection","findOne","user_id","user","currentUser","customData","getDrivers","assignOrder","orderId","driverEmail","updateOrderStatus","orderStatus","updateOrderFields","order","addressUpdated","_id","getOrder","OrderComplete","useState","requestIds","setRequestIds","useEffect","queryParams","queryString","parse","search","did","getRequestIds","ConfirmChangesModal","dispatchContext","showConfirmModal","orderChanges","selectedOrder","setShowConfirmModal","updateOrder","Object","keys","change","originalValue","updatedValue","charAt","toUpperCase","slice","Wrapper","styled","div","selected","Marker","text","defaultProps","main","GoogleMap","children","bootstrapURLKeys","last","getInfoWindowString","place","status","MarkerInfoWindowGmapsObj","handleApiLoaded","maps","places","updateSelectedMarker","selectedMarker","setState","gMap","gMaps","markers","infowindows","this","forEach","position","lat","Number","geometry","lng","long","data","icon","path","SymbolPath","BACKWARD_CLOSED_ARROW","strokeColor","scale","FORWARD_CLOSED_ARROW","InfoWindow","content","marker","i","addListener","open","setSelectedOrder","close","coordinates","defaultZoom","center","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","orders","Component","DispatchModuleHome","typeFilter","statusFilter","drivers","getOrdersForDispatcher","setTypeFilter","setStatusFilter","setOrderChanges","getDriversForDispatcher","setFormValue","isAuthenticated","checkAuthStatus","getUser","setIsAuthenticated","filteredOrders","deriveDriverName","driver","assignedToDriver","email","addRemoveFilter","statusIndex","filters","filter","includes","applyFilters","profile","toast","maxHeight","aria-label","marginLeft","overflowY","date","hoursSince","differenceInHours","Date","differenceInMinutes","differenceInDays","timeSince","dateCreated","toLowerCase","display","htmlFor","aria-describedby","or","enabled","JSON","stringify","find","wordWrap","zipcodes","sort","defaultValue","toLocaleDateString","toLocaleTimeString","GlobalStateContext","React","createContext","RequestContext","DonationContext","DispatchContext","App","Consumer","autoClose","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","toastClassName","progressClassName","exact","render","Boolean","hostname","match","GlobalStateProvider","setUser","prom","Provider","errs","bool","DonationProvider","formattedData","formatRequest","response","message","indexOf","quantity","num","obj","valid","validationErrors","RequestProvider","values","DispatchProvider","setOrders","setDrivers","notify","b","addressChanged","newFormData","updateProm","str","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.9609f60d.chunk.js","sourcesContent":["import React from 'react'\r\nimport fulllogo from '../images/fulllogo.png'\r\n\r\nexport default function StayNeighborBrand(){\r\n    return (\r\n        <div className=\"mr-auto ml-auto text-center\" style={{ paddingTop: '7rem' }}>\r\n            <img alt=\"StayNeighbor\" className=\"mr-auto ml-auto\" style={{ width:'50%',maxWidth:'25rem' }} src={fulllogo} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport StayNeighborBrand from './StayNeighborBrand'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n\r\nexport default function Home(props) {\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#781CB2', paddingBottom: 15 }}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                </div>\r\n            </nav>\r\n            <div style={{ backgroundColor: \"rgb(255, 255, 255)\", height: '100vh', color: 'white' }}>\r\n                <StayNeighborBrand/>\r\n                <div className=\"lead col-10 col-xl-6 col-md-8 mr-auto ml-auto text-center\" style={{ fontSize: '1.25rem', marginTop: '2rem', color: 'rgb(0, 0, 0)', fontWeight: 400 }}>\r\n                    A volunteer-powered network for essential supplies - delivered in a safe, healthy, and organized way.\r\n                </div>\r\n                <div style={{ marginTop: '3rem' }}>\r\n                    <div className=\"col-xl-6 col-12 text-center mr-auto ml-auto\">\r\n                        <button onClick={() => props.history.push('/request')} className=\"btn col-10 underline-hover btn-outline-brand\" style={{ color: 'white', fontSize: '1.25rem', paddingRight: 50, paddingLeft: 50, paddingTop: 10, paddingBottom: 10 }}>I <b style={{ fontWeight: 'bolder' }}>need</b> supplies</button>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-12 text-center mt-4 mr-auto ml-auto\">\r\n                        <button onClick={() => props.history.push('/donate')} className=\"btn col-10 underline-hover btn-outline-brand\" style={{ color: 'white', fontSize: '1.25rem', paddingRight: 50, paddingLeft: 50, paddingTop: 10, paddingBottom: 10 }}>I <b style={{ fontWeight: 'bolder' }}>have</b> supplies</button>\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginTop: 15 }} className=\"col-12 text-center\">\r\n                    <p onClick={() => props.history.push('/dispatcher')} className=\"lead underline-hover\" style={{ fontSize: '1.25rem', color: 'rgb(158, 69, 183)', paddingTop: 10, fontWeight: 400 }}>Dispatchers  <ChevronRight size={18} /></p>\r\n                </div>\r\n\r\n                <nav className=\"navbar fixed-bottom\" style={{ backgroundColor: '#781CB2', paddingBottom: 15 }}>\r\n                    <div className=\"mr-auto ml-auto\">\r\n                        <a href=\"https://www.stayneighbor.com\" onClick={() => window.location.replace('https://www.stayneighbor.com')} style={{ fontSize: 11, color: 'white' }}>StayNeighbor is a community-built platform.  <b style={{ color: 'yellow' }}>GET INVOLVED</b></a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport {ArrowLeftCircle} from 'react-feather'\r\n\r\nexport default function MenuBar(props){\r\n    const {goBackTo} = props\r\n    return (\r\n        <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#781CB2', paddingBottom: 15 }}>\r\n            <div className=\"col-12 mt-2 mr-auto\">\r\n                {props.setStep && <ArrowLeftCircle color=\"white\" className=\"mr-3 underline-hover\" onClick={() => props.setStep(goBackTo)} />}\r\n                <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export const dropoff = [\r\n    { id: 'morning', label: 'Morning', time: '9am - 12pm' },\r\n    { id: 'afternoon', label: 'Afternoon', time: '12pm - 4pm' },\r\n    { id: 'evening', label: 'Evening', time: '4pm - 9pm' },\r\n];\r\n\r\nexport const itemList = [\r\n    { id: 1, label: 'Food', value: 'food' },\r\n    { id: 2, label: 'Personal Hygiene', value: 'personal hygiene' },\r\n    { id: 3, label: 'Water', value: 'water' },\r\n    { id: 4, label: 'PPE', value: 'ppe' }\r\n];\r\n","import React from 'react'\r\nimport { Plus, CheckSquare, Square, Trash2 } from 'react-feather'\r\nimport {itemList} from '../data/orders.js'\r\n\r\nexport default function ItemList(props){\r\n    const {formData, stepTwoIsValid, setFormData, validateStep2} = props\r\n\r\n    return (\r\n        <div style={{ marginTop: '2rem' }} className=\"col-10 mr-auto ml-auto\">\r\n            <form>\r\n                <div className=\"form-row mr-auto ml-auto\">\r\n                    <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {itemList.map(item => {\r\n                                var itemIndex = formData.items.findIndex(a => a.value === item.value)\r\n                                if (formData.items && itemIndex > -1) {\r\n                                    var itemsList = [...formData.items]\r\n                                    itemsList.splice(itemIndex, 1)\r\n                                    return <li key={item.id} onClick={() => setFormData({ ...formData, items: itemsList })} className=\"list-group-item underline-hover\"><CheckSquare className=\"mr-3 brand\" size={18} />{item.label}</li>\r\n                                } else {\r\n                                    return (\r\n                                        <li key={item.id} onClick={() => setFormData({ ...formData, items: [...formData.items, item] })} className=\"underline-hover list-group-item d-flex\"><Square className=\"mr-3 brand\" size={18} />{item.label}</li>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                        {formData.freeTextItems.map((item, index) => {\r\n                            return (\r\n                                <div className=\"d-flex\">\r\n                                    <input maxLength=\"150\" onChange={(e) => {\r\n                                        var list = [...formData.freeTextItems]\r\n                                        list[index] = e.target.value\r\n                                        setFormData({...formData, freeTextItems: list})\r\n                                    }} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className=\"form-control pl-3 pr-3\" id=\"newListItem\" placeholder=\"+ Add additional Item\" value={item}>\r\n                                    </input>\r\n                                    <Trash2 onClick={() => {\r\n                                        var list = [...formData.freeTextItems]\r\n                                        if(list.length === 1) {\r\n                                            list[index] = ''\r\n                                        } else {\r\n                                            list.splice(index,1)\r\n                                        }\r\n                                        setFormData({...formData, freeTextItems: list})\r\n                                    }} style={{height:'100%'}} className=\"mt-2 hover brand\"/>\r\n                                </div>\r\n                                \r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className='form-row'>\r\n                    <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                        <button type=\"button\" onClick={() => setFormData({...formData, freeTextItems: [...formData.freeTextItems, '']})} className=\"btn btn-sm btn-outline-brand\"><Plus /> Add Another</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row mr-auto ml-auto text-center\">\r\n                    <button title={formData && (!formData.items || (formData.items && formData.items.length === 0)) ? 'Please select an item' : ''} onClick={() => validateStep2()} disabled={stepTwoIsValid()}  type=\"submit\" className=\"btn text-center mr-auto ml-auto col-xl-6 col-12 mt-1 btn-primary-hover\">Continue</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Modal,Spinner} from 'react-bootstrap'\r\nimport {AlertTriangle} from 'react-feather'\r\n\r\nexport default function OrderConfirmationModal(props){\r\n    const {showModal, setStep, setShowModal, formData, type, loading, submitRequest, errors} = props\r\n    return (\r\n        <Modal style={{paddingTop:75}} size='lg' show={showModal} onHide={() => {}}>\r\n            <Modal.Body style={{borderTop:'10px solid #781CB2'}}>\r\n                <div className=\"col-12 text-center\">\r\n                    <span style={{fontSize:20,fontWeight:600,color:\"#781CB2\",letterSpacing:'.025rem'}}>Is everything correct?</span>\r\n                </div>\r\n                <div className=\"col-12 row\" style={{marginTop:25}}>\r\n                    <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                        <div className=\"border-bottom pb-1 row\">\r\n                            <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Your Info {errors.address ? <AlertTriangle style={{color:'red'}}/> : ''}</div>\r\n                            <div onClick={() => {\r\n                                setStep(1)\r\n                                setShowModal(false)\r\n                                }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#781CB2',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                        </div>\r\n                        <div>\r\n                            <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.firstName} {formData.lastName}</li>\r\n                            <li className=\"mb-1 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.address}</li>\r\n                            <li className=\"mb-3 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.zipcode}</li>\r\n                            <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.phoneNumber}</li>\r\n                            <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.emailAddress}</li>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                        <div className=\"border-bottom pb-1 row\">\r\n                            <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Items</div>\r\n                            <div onClick={() => {\r\n                                setStep(2)\r\n                                setShowModal(false)\r\n                                }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#781CB2',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                        </div>\r\n                        <div>\r\n                            {formData.items.map(item => {\r\n                                return (\r\n                                    <li className=\"ml-3 lead\" style={{fontSize:14}}>{item.value}</li>\r\n                                )\r\n                            })}\r\n                            {formData.freeTextItems.map(item => {\r\n                                if(item === '') return false\r\n                                return (\r\n                                    <li className=\"ml-3 lead\" style={{fontSize:14}}>{item}</li>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 row\" style={{marginTop:25}}>\r\n                    <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                        <div className=\"border-bottom row pb-1\">\r\n                            <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>{type==='donation' ? 'Pick Up Time' : 'Drop Off Time'}</div>\r\n                                <div onClick={() => {\r\n                                    setStep(3)\r\n                                    setShowModal(false)\r\n                                    }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#781CB2',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                                </div>\r\n                            <div>\r\n                            <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.dropoff ? `${formData.dropoff.label} (${formData.dropoff.time})` : ''}</li>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-5 col-12 mr-auto ml-auto\">\r\n                        <div className=\"border-bottom row pb-1\">\r\n                            <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Additional Info</div>\r\n                                <div onClick={() => {\r\n                                    setStep(3)\r\n                                    setShowModal(false)\r\n                                    }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#781CB2',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                                </div>\r\n                            <div>\r\n                            <span className=\"lead\" style={{listStyleType:'none',fontSize:14,border:0}} disabled={true}>{formData.additionalInfo}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mr-auto ml-auto mt-4 text-center\">\r\n                    {!loading && <button onClick={submitRequest} className=\"btn col-12 btn-primary-hover\" type=\"button\">Submit</button>}\r\n                    {loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\">\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </button>}\r\n                    {type==='request' &&<span className=\"text-center mr-auto ml-auto\">Please note our deliveries are contactless, we will leave the item where you specify.</span>}\r\n                    {type==='donation' &&<span className=\"text-center mr-auto ml-auto\">Please note our pickups are contactless, we will pickup the items from where you specify.</span>}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React from 'react'\r\nimport MenuBar from '../MenuBar'\r\nimport {CheckCircle,Circle} from 'react-feather'\r\nimport {dropoff} from '../../data/orders.js'\r\nimport OrderConfirmationModal from './OrderConfirmationModal'\r\n\r\nexport default function OrderDropOffTime(props){\r\n    const {setStep, validateStep3, setFormData, formData, loading, stepThreeIsValid, showModal, setShowModal, submitRequest, type, errors} = props\r\n\r\n    return (\r\n        <main>\r\n            <MenuBar {...props} goBackTo={2}/>\r\n            {type==='donation' && <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                <div className=\"text-center\" style={{ marginTop: '7rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                    Just a few more details.\r\n                </div>\r\n                <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                    Now we just need some details for our drivers so they can safely deliver your supplies.\r\n                </div>\r\n            </div>}\r\n\r\n            {type==='request' && <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                <div className=\"text-center\" style={{ marginTop: '7rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                    Just a few more details.\r\n                </div>\r\n                <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                    Now we just need some details for our drivers so they can safely make the delivery.\r\n                </div>\r\n            </div>}\r\n\r\n            <div style={{ marginTop: 50 }} className=\"col-xl-6 col-10 mr-auto ml-auto\">\r\n                <form>\r\n                    <div className=\"form-row\">\r\n                        <span>{type==='donation' ? \"DONATION\" : \"DELIVERY\"} TIME</span>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                {dropoff.map(item => {\r\n                                    return <li key={item.id} onClick={() => setFormData({...formData, dropoff: item})} className=\"list-group-item underline-hover\">{formData.dropoff === item ? <CheckCircle className=\"mr-3 brand\" size={18} /> : <Circle className=\"mr-3 brand\" size={18} />}{item.label} ({item.time})</li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                            <label>Special Instructions</label>\r\n                            <textarea maxLength=\"500\" style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} onChange={e => setFormData({...formData, additionalInfo: e.target.value})} placeholder=\"Enter any special instructions for our driver, e.g. ring doorbell, leave at front desk, etc..\" value={formData.additionalInfo} className=\"form-control text-black\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <button type=\"button\" onClick={validateStep3} disabled={stepThreeIsValid()} className=\"btn w-100 mt-4 btn-primary-hover\">Continue</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <OrderConfirmationModal errors={errors} showModal={showModal} setStep={setStep} setShowModal={setShowModal} formData={formData} type={type} loading={loading} submitRequest={submitRequest}/>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport MenuBar from '../MenuBar'\r\nimport StayNeighborBrand from '../StayNeighborBrand'\r\n\r\nexport default function OrderCompleteLandingPage(props){\r\n    const {type, setStep} = props\r\n    return (\r\n        <main>\r\n            <MenuBar {...props}/>\r\n            <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                <StayNeighborBrand/>\r\n\r\n                {type==='request' && \r\n                    <React.Fragment>\r\n                        <div className=\"mr-auto ml-auto text-center mt-3\">\r\n                            {type==='request' &&<span className=\"lead\" style={{fontSize:'3rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Help is on the way.</span>}\r\n                        </div>\r\n                        <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                            <span className=\"lead\" style={{fontSize:'1.5rem',color:\"rgba(0, 0, 0, 0.42)\"}}>When your order is assigned to a driver, we will let you know.</span>\r\n                        </div>\r\n                        <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                            <button onClick={() => {\r\n                                props.history.push('/')\r\n                                setStep(1)\r\n                            }} className=\"btn btn-outline-brand btn-lg\">Home</button>\r\n                            <button onClick={() => window.location.replace('https://stayneighbor.com')} className=\"btn btn-lg btn-outline-brand\">Learn More</button>\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n\r\n                {type==='donation' && \r\n                    <React.Fragment>\r\n                        <div className=\"mr-auto ml-auto text-center mt-4\">\r\n                            <span className=\"lead\" style={{fontSize:'4rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Thank you!</span>\r\n                        </div>\r\n                        <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                            <span className=\"lead\" style={{fontSize:'2.0rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Words cannot express our gratitude.</span>\r\n                        </div>\r\n                        <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                            <span className=\"lead\" style={{fontSize:'1.5rem',color:\"rgba(0, 0, 0, 0.42)\"}}>A driver will pickup your order and ensure it reaches someone in need.</span>\r\n                        </div>\r\n                        <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                            <button onClick={() => {\r\n                                props.history.push('/')\r\n                                setStep(1)\r\n                            }} className=\"btn btn-outline-brand btn-lg\">Home</button>\r\n                            <button onClick={() => window.location.replace('https://stayneighbor.com')} className=\"btn btn-outline-brand btn-lg\">Learn More</button>\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from 'react';\r\nimport MenuBar from '../MenuBar'\r\nimport ItemList from '../ItemList'\r\nimport OrderDropOffTime from '../Order/OrderDropOffTime'\r\nimport { ArrowLeftCircle} from 'react-feather';\r\nimport OrderCompleteLandingPage from '../Order/OrderCompleteLandingPage'\r\n\r\nexport default function RequestModuleHome(props) {\r\n    const {step, loading, formData, errors, showModal} = props.requestContext.state; // provider state values\r\n    const { setShowModal, submitRequest, stepOneIsValid, stepTwoIsValid, stepThreeIsValid, setLoading, setFormData, setStep, validateStep1, validateStep2, validateStep3, setErrors} = props.requestContext; // provider functions\r\n\r\n    if (step === 1) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#781CB2', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: '1.75rem', fontWeight: 'bold' }}>\r\n                        Howdy, Neighbor!\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: '.9rem' }}>\r\n                        Let's get started with some information.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>While we need to share details with our volunteers, we will always keep your data private.</i>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 30 }} className=\"text-center\">\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"15\" required={true} onChange={(e) => {setFormData({...formData, firstName: e.target.value})}} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" value={formData.firstName} className={`form-control lead ${errors.firstName ? 'is-invalid' : ''}`} id=\"inputEmail4\" placeholder=\"First Name\"></input>\r\n                                </div>\r\n                                <div  className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"15\" required={true} onChange={(e) => {setFormData({...formData, lastName: e.target.value})}} name='lastName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.lastName} className={`form-control lead ${errors.lastName ? 'is-invalid' : ''}`} id=\"inputPassword4\" placeholder=\"Last Name\"></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"12\" required={true} onChange={(e) => {setFormData({...formData, phoneNumber: e.target.value})}} name='phoneNumber' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.phoneNumber} className={`form-control lead ${errors.phoneNumber ? 'is-invalid' : ''}`} id=\"inputPassword4\" placeholder=\"Phone Number\"></input>\r\n                                </div>\r\n                                <div  className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"30\" required={true} onChange={(e) => {setFormData({...formData, emailAddress: e.target.value})}} name='emailAddress' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"email\" value={formData.emailAddress} className={`form-control lead ${errors.emailAddress ? 'is-invalid' : ''}`} id=\"inputPassword4\" placeholder=\"Email Address\"></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"75\" required={true} onChange={(e) => {setFormData({...formData, address: e.target.value})}} name='streetAddress' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.address} className={`form-control lead ${errors.address ? 'is-invalid' : ''}`} id=\"inputPassword4\" placeholder=\"Address\"></input>\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"6\" required={true} name='zipCode' onChange={(e) => {setFormData({...formData, zipcode: e.target.value})}} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.zipcode} className={`form-control lead ${errors.zipcode ? 'is-invalid' : ''}`} id=\"inputPassword4\" placeholder=\"Zip Code\"></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group mr-auto ml-auto col-xl-4 col-md-8 mr-auto ml-auto text-center\">\r\n                                    <span className=\"text-center\" style={{ fontWeight: 'bolder', fontSize: '2rem' }} type=\"number\" id=\"peopleInHousehold\">{formData.householdNum}</span>\r\n                                    <input required={true} onChange={e => setFormData({...formData, householdNum: e.target.value})} name=\"peopleInHousehold\" type=\"range\" value={formData.householdNum} className=\"custom-range\" min=\"1\" max=\"10\" id=\"customRange2\"></input>\r\n                                    <label className='lead'>People in Household</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {!loading && <button onClick={validateStep1} type=\"button\" className=\"col-xl-8 col-12 mr-auto ml-auto btn mt-4 btn-primary-hover\">Continue</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 2) {\r\n        return (\r\n            <main>\r\n                <MenuBar setStep={setStep} goBackTo={1}/>\r\n                <div className=\"col-11 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                        What can we provide?\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                        Please let us know any essential supplies you might need and our dispatchers will take it from here.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>Please, only select things you or your ones NEED.</i>\r\n                    </div>\r\n                </div>\r\n                <ItemList formData={formData} stepTwoIsValid={stepTwoIsValid} setFormData={setFormData} setStep={setStep} validateStep2={validateStep2} setLoading={setLoading} {...props}/>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 3) return <OrderDropOffTime type={'request'} setStep={setStep} validateStep3={validateStep3} setFormData={setFormData} formData={formData} stepThreeIsValid={stepThreeIsValid} showModal={showModal} setShowModal={setShowModal} submitRequest={submitRequest} loading={loading} errors={errors} setErrors={setErrors}/>\r\n\r\n    if(step === 4) return <OrderCompleteLandingPage setStep={setStep} type={'request'}/>\r\n}","import React from 'react'\r\nimport OrderDropOffTime from '../Order/OrderDropOffTime'\r\nimport { ArrowLeftCircle} from 'react-feather'\r\nimport OrderCompleteLandingPage from '../Order/OrderCompleteLandingPage'\r\nimport MenuBar from '../MenuBar'\r\nimport ItemList from '../ItemList'\r\n\r\nexport default function DonationModuleHome(props) {\r\n    const {step, loading, showModal, formData, errors} = props.donationContext.state; // provider state values\r\n    const { stepTwoIsValid, stepThreeIsValid, setLoading, setFormData, setStep, validateStep1, validateStep2, validateStep3, setShowModal, submitDonation, setErrors} = props.donationContext; // provider functions\r\n\r\n    if (step === 1) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#781CB2', paddingBottom: 15 }}>\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 underline-hover\" onClick={() => props.history.push('/')} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: '1.75rem', fontWeight: 'bold' }}>\r\n                        Howdy, Neighbor!\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: '.9rem' }}>\r\n                        Let's get started with some information.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>While we need to share details with our volunteers, we will always keep your data private.</i>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 30 }} className=\"text-center\">\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"15\" onChange={(e) => {setFormData({...formData, firstName: e.target.value})}} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className={`form-control lead ${errors.firstName ? 'is-invalid' : ''}`} id=\"inputEmail4\" placeholder=\"First Name\" value={formData.firstName}></input>\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"15\" name='lastName' onChange={(e) => setFormData({...formData, lastName: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className={`form-control lead ${errors.lastName ? 'is-invalid' : ''}`} id=\"inputPassword4\" placeholder=\"Last Name\" value={formData.lastName}></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"12\" name='phoneNumber' onChange={(e) => setFormData({...formData, phoneNumber: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className={`form-control lead ${errors.phoneNumber ? 'is-invalid' : ''}`} id=\"inputPassword4\" placeholder=\"Phone Number\" value={formData.phoneNumber}></input>\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"25\" name='emailAddress' onChange={(e) => setFormData({...formData, emailAddress: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className={`form-control lead ${errors.emailAddress ? 'is-invalid' : ''}`} id=\"inputPassword4\" placeholder=\"Email Address\" value={formData.emailAddress}></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"30\" name='streetAddress' onChange={(e) => setFormData({...formData, address: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className={`form-control lead ${errors.address ? 'is-invalid' : ''}`} id=\"inputPassword4\" placeholder=\"Street Address\" value={formData.address}></input>\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"6\" name='zipCode' onChange={(e) => setFormData({...formData, zipcode: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className={`form-control lead ${errors.zipcode ? 'is-invalid' : ''}`} id=\"inputPassword4\" placeholder=\"Zip Code\" value={formData.zipcode}></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {!loading && <button onClick={() => validateStep1()} type=\"button\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"col-xl-8 mr-auto btn-primary-hover ml-auto col-12 btn mt-4\">Continue</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 2) return (\r\n        <main>\r\n            <MenuBar goBackTo={1} setStep={setStep}/>\r\n            <div className=\"col-11 mr-auto ml-auto\">\r\n                <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                    What can you donate?\r\n                </div>\r\n                <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                    Please let us know any supplies you can donate and our dispatchers will take it from here.\r\n                </div>\r\n            </div>\r\n            <ItemList formData={formData} stepTwoIsValid={stepTwoIsValid} setFormData={setFormData} setStep={setStep} validateStep2={validateStep2} setLoading={setLoading} {...props}/>\r\n        </main>\r\n        \r\n    )\r\n\r\n    if (step === 3) return <OrderDropOffTime type={'donation'} setStep={setStep} validateStep3={validateStep3} setFormData={setFormData} formData={formData} stepThreeIsValid={stepThreeIsValid} showModal={showModal} setShowModal={setShowModal} submitRequest={submitDonation} loading={loading} errors={errors} setErrors={setErrors}/>\r\n\r\n    if(step === 4) return <OrderCompleteLandingPage {...props} setStep={setStep} type={'donation'}/>\r\n}","import React from 'react'\r\nimport {ArrowLeftCircle} from 'react-feather'\r\n\r\nexport default function Error(props){\r\n    console.log(props)\r\n    var { errors } = props.globalContext.state\r\n\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#781CB2', paddingBottom: 15 }}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                </div>\r\n            </nav>\r\n            <div className=\"col-12 row mr-auto\" style={{marginTop:75}}>\r\n                <div style={{paddingLeft:0,paddingRight:0,width:'20%'}}>\r\n                    {errors.login}\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Loading(){\r\n    return (\r\n        <div className=\"text-center my-4 loading\">\r\n            <h5>Loading...</h5>\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Stitch,RemoteMongoClient,GoogleRedirectCredential,FunctionCredential} from 'mongodb-stitch-browser-sdk'\r\n\r\nfunction getAppId(){\r\n    if(process.env.NODE_ENV !== 'development') return 'stayneighbor-bjuma'\r\n    if(process.env.NODE_ENV === 'development') return 'stayneighbor-bjuma'\r\n}\r\n\r\nfunction getDb(){\r\n\r\n    if(process.env.NODE_ENV === 'development') return 'stayneighbor'\r\n    if(process.env.NODE_ENV !== 'development') return 'stayneighbor'\r\n}\r\n\r\nexport function establishMongoDbConnection(){\r\n    //get our default app client\r\n    const client = intializeStitchClient()\r\n\r\n    if(client.errorCode) return {errorCode: '002', errorMessage: client}\r\n\r\n    const mongodb = initalizeStitchServiceClient(client)\r\n\r\n    if(mongodb.errorCode) return {errorCode: '003', errorMessage: mongodb}\r\n    \r\n    return mongodb\r\n}\r\n\r\nexport function initalizeStitchServiceClient(client){\r\n    try{\r\n        return client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db(getDb());\r\n    } catch(err){\r\n        return {errorCode: '002', errorMessage: err}\r\n    }\r\n}\r\n\r\nexport function intializeStitchClient(){\r\n    try {\r\n        //return Stitch.initializeDefaultAppClient('stayneighbor-bjuma');\r\n        return Stitch.initializeDefaultAppClient(getAppId());\r\n    } catch(err){\r\n        return Stitch.defaultAppClient\r\n    }\r\n}\r\n\r\nexport async function functionUserLogin(){\r\n    try {\r\n        var client = intializeStitchClient()\r\n        await client.auth.loginWithCredential(new FunctionCredential({}))\r\n    } catch(e) {\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function getOrders(){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"listOrders\", []);\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function putOrder(body){\r\n    try{\r\n        //get our default app client\r\n        const client = intializeStitchClient()\r\n        if(client.auth.isLoggedIn) await client.auth.logout()\r\n        await functionUserLogin()\r\n\r\n        var result = await client.callFunction(\"createOrder\", [body]);\r\n        logUserOut()\r\n        return result\r\n    } catch(e){\r\n        return {errorCode: '002', errorMessage: e.toString()}\r\n    }\r\n}\r\n\r\nexport async function checkUserAuth(){\r\n    try {\r\n        //get our default app client\r\n        const client = intializeStitchClient()\r\n\r\n        if(client.auth.isLoggedIn){\r\n            return true\r\n        } else {\r\n            if(client.auth.hasRedirectResult()){\r\n                var result = await client.auth.handleRedirectResult()\r\n                if(result.isLoggedIn === true) return true\r\n            }\r\n\r\n            const credential = new GoogleRedirectCredential()\r\n            await client.auth.loginWithRedirect(credential)\r\n            return null\r\n        }\r\n    } catch (e){\r\n\r\n    }\r\n}\r\n\r\nexport async function logUserOut(){\r\n    await intializeStitchClient().auth.logout()\r\n    return true\r\n}\r\n\r\nexport async function getUserInfo(){\r\n    var client = intializeStitchClient()\r\n    var db = establishMongoDbConnection()\r\n\r\n    await client.auth.refreshCustomData()\r\n\r\n    var user = await db.collection('user_data').findOne({user_id: client.auth.user.id})\r\n\r\n    if(!user) return false\r\n    return {...client.auth.currentUser, customData: {...user}}\r\n\r\n    //return intializeStitchClient().auth.currentUser\r\n}\r\n\r\nexport async function getDrivers(){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"getDrivers\", [])\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function assignOrder(orderId, driverEmail){\r\n    const client = intializeStitchClient()\r\n    try {\r\n        var result = await client.callFunction(\"assignOrder\", [orderId.toString(), driverEmail]);\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        console.log(result)\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function updateOrderStatus(orderId, orderStatus){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"updateOrderStatus\", [orderId.toString(), orderStatus]);\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\n\r\nexport async function updateOrderFields(order, addressUpdated){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"updateOrder\", [order._id.toString(), order, addressUpdated])\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function getOrder(orderId){\r\n    try{\r\n        var db = establishMongoDbConnection()\r\n        var user = await db.collection('orders').findOne({_id: orderId})\r\n        return user\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport async function completeOrder(orderId, driverId){\r\n    try {\r\n        const client = intializeStitchClient()\r\n        //Non logged in drivers should be able to complete\r\n        if(client.auth.isLoggedIn) await client.auth.logout()\r\n        await functionUserLogin()\r\n\r\n        return await client.callFunction(\"completeOrder\", [orderId.toString(), driverId.toString()]);\r\n    } catch(e){\r\n        console.log(e);\r\n        return e\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport queryString from 'query-string'\r\nimport Loading from '../Loading'\r\nimport MenuBar from '../MenuBar'\r\nimport {completeOrder} from '../../lib/StitchFunctions';\r\nimport StayNeighborBrand from '../StayNeighborBrand'\r\nimport './OrderComplete.scss';\r\n\r\nconst OrderComplete = props => {\r\n    const [requestIds, setRequestIds] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [orderUpdateStatus, setOrderUpdateStatus] = useState(false)\r\n\r\n    const orderCompletion = async () => {\r\n        let res = await completeOrder(requestIds.orderId, requestIds.did)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(requestIds === null) getRequestIds()\r\n        if(requestIds && requestIds.orderId && requestIds.did) console.log('there')\r\n    })\r\n\r\n    function getRequestIds(){\r\n        var queryParams = queryString.parse(window.location.search)\r\n        if(!queryParams.orderId || !queryParams.did) setRequestIds(false)\r\n        else setRequestIds(queryParams)\r\n    }\r\n\r\n    if(requestIds === null) return <Loading/>\r\n\r\n    return (\r\n        <main className='order-complete'>\r\n            <MenuBar/>\r\n            <StayNeighborBrand/>\r\n\r\n            {requestIds === false ? \r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='col-6 mr-auto ml-auto text-center lead'>\r\n                            <span>We're sorry, we had trouble loading this order.  Please verify the link and try again.</span>\r\n                        </div>\r\n                        <div className='col-6'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n\r\n            {requestIds.orderId && requestIds.did ? \r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div className='col-12 mt-4 pt-4'>\r\n                        <div className='col-6 mr-auto ml-auto text-center lead'>\r\n                            <span>Please click the buttom below to mark the order as complete.  The recipient will receive a confirmation email.</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 mt-4 pt-4\">\r\n                        <div className='col-6 mr-auto ml-auto text-center'>\r\n                            <button type=\"button\" className=\"btn btn-lg btn-outline-brand\">Complete Order</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default OrderComplete;","import React from 'react'\r\nimport {Modal,Spinner} from 'react-bootstrap'\r\nimport {X} from 'react-feather'\r\n\r\nexport default function ConfirmChangesModal(props){\r\n    const { loading, showConfirmModal, orderChanges, selectedOrder } = props.dispatchContext.state\r\n    const { setShowConfirmModal, updateOrder } = props.dispatchContext\r\n\r\n    return (\r\n        <Modal style={{paddingTop:75}} size='lg' show={showConfirmModal} onHide={() => {}}>\r\n            <Modal.Body style={{borderTop:'10px solid #781CB2'}}>\r\n                <div className=\"form-row border-bottom col-12 mr-auto ml-auto\">\r\n                        <span className=\"mr-auto ml-auto\" style={{fontSize:20,fontWeight:600,color:\"#781CB2\",letterSpacing:'.025rem'}}>Please confirm your changes.</span>\r\n                        <span onClick={() => setShowConfirmModal(false)} className=\"float-right mt-2\"><X className=\"hover\"/></span>\r\n                </div>\r\n                <div className=\"col-12 row\">\r\n                    <div className=\"col-12\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <th>Field</th>\r\n                                <th>Original</th>\r\n                                <th>Updated</th>\r\n                            </thead>\r\n                            <tbody>\r\n                            {Object.keys(orderChanges).map((change) => {\r\n                                if(change === 'enabled') return false\r\n                                var originalValue = selectedOrder[change]\r\n                                var updatedValue = orderChanges[change]\r\n\r\n                                if(change === 'driver') {\r\n                                    if(!selectedOrder[change]) originalValue = ''\r\n                                    else originalValue = selectedOrder[change].name\r\n                                    updatedValue = orderChanges[change].name\r\n                                }\r\n\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{change.charAt(0).toUpperCase()}{change.slice(1)}</td>\r\n                                        <td>{originalValue}</td>\r\n                                        <td>{updatedValue}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                    </div>\r\n                    <div className=\"col-5 mr-auto ml-auto\"></div>\r\n                </div>\r\n                <div className=\"col-12 mr-auto ml-auto mt-4 text-center\">\r\n                    {!loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\" onClick={updateOrder}>Submit</button>}\r\n                    {loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\">\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </button>}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: ${props => props.selected ? '15px' : '12px'};\r\n  height: ${props => props.selected ? '15px' : '12px'};\r\n  background-color: ${props => props.selected ? '#808080' : ((props.type === 'REQUEST') ? '#3498e1' : '#3fb94c')};\r\n  border-radius: ${props => (props.type === 'REQUEST') ? '10%' : '50%'};\r\n  user-select: none;\r\n  cursor: ${props => (props.onClick ? 'pointer' : 'default')};\r\n  &:hover {\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst Marker = props => (\r\n  <Wrapper\r\n    alt={props.text}\r\n    type={props.text}\r\n    selected={props.selected}\r\n    {...props.onClick ? { onClick: props.onClick } : {}}\r\n  />\r\n);\r\n\r\nMarker.defaultProps = {\r\n  onClick: null,\r\n};\r\n\r\nMarker.propTypes = {\r\n  onClick: PropTypes.func,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Marker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst Wrapper = styled.main`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst GoogleMap = ({ children, ...props }) => (\r\n  <Wrapper>\r\n    <GoogleMapReact\r\n      bootstrapURLKeys={{\r\n        key: \"AIzaSyD1t2vfHVpI_2dw0uqllA4lR5Q2Kjw9wdY\",\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </GoogleMapReact>\r\n  </Wrapper>\r\n);\r\n\r\nGoogleMap.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.arrayOf(PropTypes.node),\r\n  ]),\r\n};\r\n\r\nGoogleMap.defaultProps = {\r\n  children: null,\r\n};\r\n\r\nexport default GoogleMap;\r\n","import React, { Component } from 'react';\r\nimport Marker from './Marker'\r\n\r\n// examples:\r\nimport GoogleMap from './GoogleMap';\r\n\r\n// consts: [34.0522, -118.2437]\r\nvar last = null\r\n\r\nconst getInfoWindowString = place => `\r\n    <div>\r\n      <div style=\"font-size: 16px;\">\r\n        ${place.status}\r\n      </div>\r\n      <div style=\"font-size: 14px; color: grey;\">\r\n        ${place.type}\r\n      </div>\r\n    </div>`\r\n\r\nclass MarkerInfoWindowGmapsObj extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      places: [],\r\n      selectedMarker: false,\r\n      gMap: false,\r\n      gMaps: false\r\n    };\r\n  }\r\n\r\n  handleApiLoaded = (map, maps, places, props, updateSelectedMarker, selectedMarker) => {\r\n    this.setState({ gMap: map, gMaps: maps })\r\n    return\r\n  }\r\n\r\n  getPlaces(places, props) {\r\n    const markers = [{}];\r\n    const infowindows = [];\r\n    var gMaps = this.state.gMaps\r\n    var gMap = this.state.gMap\r\n\r\n    places.forEach((place) => {\r\n      markers.push(new gMaps.Marker({\r\n        position: {\r\n          lat: Number(place.geometry.lat),\r\n          lng: Number(place.geometry.long),\r\n        },\r\n        gMap,\r\n        data: place,\r\n        // icon: image,\r\n        icon: place.type === 'REQUEST' ? {\r\n          path: gMaps.SymbolPath.BACKWARD_CLOSED_ARROW,\r\n          strokeColor: 'red',\r\n          scale: 5\r\n        } : {\r\n            path: gMaps.SymbolPath.FORWARD_CLOSED_ARROW,\r\n            strokeColor: 'blue',\r\n            scale: 5\r\n          },\r\n      }));\r\n\r\n      infowindows.push(new gMaps.InfoWindow({\r\n        content: getInfoWindowString(place),\r\n      }));\r\n    });\r\n\r\n    markers.slice(1).forEach((marker, i) => {\r\n      marker.addListener('click', () => {\r\n        infowindows[i].open(gMap, marker)\r\n        props.setSelectedOrder(marker.data)\r\n        if (last) last.close()\r\n        last = infowindows[i]\r\n      })\r\n    });\r\n\r\n    console.log(markers)\r\n    return markers.slice(1)\r\n  }\r\n\r\n  render() {\r\n    if (this.props.selectedOrder && this.props.selectedOrder !== this.state.selectedMarker) this.setState({ selectedMarker: this.props.selectedOrder })\r\n    const defaultCenter = { lat: 34.23, lng: -77.94 };\r\n    const coordinates = this.props.selectedOrder ? { lat: Number(this.props.selectedOrder.geometry.lat), lng: Number(this.props.selectedOrder.geometry.long) } : defaultCenter;\r\n    return (\r\n      <div style={{ height: '90vh', width: '100%' }}>\r\n        <GoogleMap\r\n          defaultZoom={12}\r\n          center={coordinates}\r\n          bootstrapURLKeys={{ key: \"AIzaSyD1t2vfHVpI_2dw0uqllA4lR5Q2Kjw9wdY\" }}\r\n          yesIWantToUseGoogleMapApiInternals\r\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps, this.props.orders, this.props)}\r\n        >\r\n          {this.props.orders.map((order, index) => {\r\n            const selected = this.props.selectedOrder && this.props.selectedOrder._id.toString() === order._id.toString();\r\n            return (\r\n              <Marker\r\n                key={index}\r\n                text={order.type}\r\n                lat={Number(order.geometry.lat)}\r\n                lng={Number(order.geometry.long)}\r\n                selected={selected}\r\n                onClick={() => this.props.setSelectedOrder(order)}\r\n              />\r\n            )\r\n          })}\r\n        </GoogleMap>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default MarkerInfoWindowGmapsObj;\r\n","import React, {useEffect} from 'react'\r\nimport Loading from '../Loading'\r\nimport ConfirmChangesModal from './ConfirmChangesModal'\r\nimport MarkerInfoWindowGmapsObj from '../GoogleMaps/MarkerInfoWindowGmapsObj'\r\nimport { ArrowLeftCircle , LogOut , X  , RefreshCw, Circle, PlayCircle, CheckCircle, XCircle, AlertCircle } from 'react-feather'\r\nimport {logUserOut} from '../../lib/StitchFunctions'\r\nimport {Spinner} from 'react-bootstrap'\r\nimport {toast} from 'react-toastify'\r\nimport {differenceInHours, differenceInDays, differenceInMinutes} from 'date-fns'\r\nimport Error from '../Error'\r\n\r\nexport default function DispatchModuleHome(props){\r\n    const { orders, selectedOrder, typeFilter, statusFilter, orderChanges, drivers, loading, showConfirmModal } = props.dispatchContext.state\r\n    const { getOrdersForDispatcher, setSelectedOrder, setTypeFilter, setStatusFilter, setOrderChanges, getDriversForDispatcher, setFormValue, setShowConfirmModal } = props.dispatchContext\r\n    var { isAuthenticated, user, errors } = props.globalContext.state\r\n    var { checkAuthStatus, getUser, setIsAuthenticated } = props.globalContext\r\n    var filteredOrders = []\r\n\r\n    useEffect(() => {\r\n        checkAuthStatus()\r\n        if(isAuthenticated && !user) getUser()\r\n        if(isAuthenticated && user && !orders) getOrdersForDispatcher()\r\n        if(isAuthenticated && user && orders && !drivers) getDriversForDispatcher()\r\n    })\r\n\r\n\r\n    if(errors.login) return <Error {...props}/>\r\n    if(!user || !orders || !drivers) return <Loading/>\r\n\r\n    function applyFilters(orders){\r\n        if(typeFilter) orders = orders.filter(a => a.type === typeFilter)\r\n        if(statusFilter.length > 0) orders = orders.filter(a => statusFilter.includes(a.status))\r\n        return orders\r\n    }\r\n\r\n    function deriveDriverName(driver){\r\n        if(!selectedOrder){\r\n            if(driver.name === '') return true\r\n        }\r\n\r\n        if(selectedOrder && selectedOrder.assignedToDriver === driver.email){\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    function timeSince(date){\r\n        var hoursSince = differenceInHours(new Date(), new Date(date))\r\n        if(hoursSince < 1) return `${differenceInMinutes(new Date(), new Date(date))} minutes ago`\r\n        if(hoursSince > 24) return `${differenceInDays(new Date(), new Date(date))} days ago`\r\n        return `${hoursSince} hours ago`\r\n    }\r\n\r\n    function addRemoveFilter(status){\r\n        var statusIndex = statusFilter.findIndex(a => a === status)\r\n        if(statusIndex > -1){\r\n            var filters = [...statusFilter]\r\n            filters.splice(statusIndex, 1)\r\n            setStatusFilter(filters)\r\n        } else {\r\n            setStatusFilter([...statusFilter, status])\r\n        }\r\n    }\r\n\r\n    if(orders) filteredOrders = applyFilters(orders)\r\n\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#781CB2', paddingBottom: 15 }}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    {isAuthenticated === true && user ? <span title=\"Log Out\" className=\"ml-auto float-right text-white\">Welcome {user.profile.data.name}!  <LogOut onClick={() => {\r\n                        logUserOut()\r\n                        setIsAuthenticated(false)\r\n                        props.history.push('/')\r\n                        toast(\"You have been logged out!\")\r\n                    }} className=\"hover ml-2\"/></span> : ''}\r\n                </div>\r\n            </nav>\r\n\r\n            {isAuthenticated && user && orders ? \r\n                <div className=\"col-12 d-flex pl-0 flex-wrap\" style={{marginTop:60,maxHeight:'50vh'}}>\r\n                    <div className=\"col-12 col-md-4 col-xl-3\" style={{paddingLeft:20,paddingRight:20}}>\r\n                        <div className={{width:'100%'}}>\r\n                            <div className=\"form-row border-bottom\" style={{paddingBottom:5}}>\r\n                                <span className=\"pb-0 lead pt-1 pb-1\">Order Filters</span>\r\n                            </div>\r\n                            <div>\r\n                                <label style={{width:'100%',fontSize:'.9rem'}} className=\"mb-0 pb-0 ml-2 lead\">Type</label>\r\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button onClick={() => setTypeFilter(typeFilter === 'REQUEST' ? '' : 'REQUEST')} type=\"button\" className={`${typeFilter === 'REQUEST' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Requests</button>\r\n                                    <button onClick={() => setTypeFilter(typeFilter === 'DONATION' ? '' : 'DONATION')} type=\"button\" className={`${typeFilter === 'DONATION' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Donations</button>\r\n                                    <X onClick={() => setTypeFilter(false)} style={{marginTop:'.40rem',color:\"grey\"}} className=\"hover ml-1\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <label style={{width:'100%',fontSize:'.9rem'}} className=\"mb-0 pb-0 ml-2 lead\">Status</label>\r\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button onClick={() => addRemoveFilter('PENDING')} type=\"button\" className={`${statusFilter.includes('PENDING') ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><Circle/></button>\r\n                                    <button onClick={() => addRemoveFilter('IN PROGRESS')} className={`${statusFilter.includes('IN PROGRESS') ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><PlayCircle/></button>\r\n                                    <button onClick={() => addRemoveFilter('COMPLETED')} className={`${statusFilter.includes('COMPLETED') ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><CheckCircle/></button>\r\n                                    <button onClick={() => addRemoveFilter('CANCELLED')} className={`${statusFilter.includes('CANCELLED') ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><XCircle/></button>\r\n                                    <button onClick={() => addRemoveFilter('ERROR/ACTION')} className={`${statusFilter.includes('ERROR/ACTION') ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><AlertCircle/></button>\r\n                                    <X onClick={() => setStatusFilter([])} style={{marginTop:'.40rem',color:\"grey\"}} className=\"hover ml-1\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row border-bottom\" style={{paddingBottom:5}}>\r\n                                <span className=\"pb-0 lead pt-1 pb-1\">Order List</span>\r\n                                <RefreshCw onClick={() => getOrdersForDispatcher(true)} className=\"hover brand\" style={{marginTop:'.40rem',marginLeft:'1rem'}}/>\r\n                            </div>\r\n                            <div style={{maxHeight:'60vh',overflowY:'auto'}} className=\"mt-2\">\r\n                                {orders && filteredOrders.length > 0 && filteredOrders.map(order => {\r\n                                    return (\r\n                                        <li key={order._id.toString()} style={{fontSize:12,paddingRight:0,paddingBottom:'.25rem'}} className={`d-flex list-group-item order-list text-center pl-0 pr-0 pt-2 pb-1 ${selectedOrder._id ? order._id.toString() === selectedOrder._id.toString() ? 'active-order': \"\" : ''}`} onClick={() => {\r\n                                            setSelectedOrder(order)\r\n                                            setOrderChanges(false)\r\n                                        }}>\r\n                                            <span className={order.type === \"REQUEST\" ? 'request-type ml-1 mr-1' : 'donation-type  ml-1 mr-1'}>{order.type.charAt(0).toUpperCase()}</span>\r\n                                            <span className=\"ml-2 mt-2 text-left\" style={{width:'33%'}}>{order.status}</span>\r\n                                            <span className=\"ml-2 mt-2 text-left\" style={{width:'33%'}}>{order.firstName} {order.lastName}</span>\r\n                                            <span className=\"ml-2 mt-2 text-left\" style={{width:'33%'}}>{timeSince(order.dateCreated)}</span>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                                {orders && filteredOrders.length === 0 ? \r\n                                    <span className=\"col-10 mr-auto ml-auto lead\">No orders found.</span>\r\n                                : ''}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{paddingTop:20}} className={selectedOrder ? 'col-xl-6 col-md-6' : 'col-xl-9 col-md-8'}>\r\n                        <MarkerInfoWindowGmapsObj setSelectedOrder={setSelectedOrder} orders={filteredOrders} selectedOrder={selectedOrder}/>\r\n                    </div>\r\n                    \r\n                    {selectedOrder ? \r\n                        <div className=\"col-12 col-sm-12 col-xl-3 col-md-2\" style={{fontSize:12,paddingLeft:0,paddingRight:0}}>\r\n                            <form className=\"col-12\">\r\n                                <div className=\"form-row border-bottom d-flex flex-nowrap\" style={{paddingBottom:5}}>\r\n                                    <span className=\"pb-0 lead pt-1 pb-1\">{selectedOrder.type.charAt(0)}{selectedOrder.type.slice(1).toLowerCase()} Details</span>\r\n                                    <span className=\"ml-auto mt-2\"><X className=\"hover\" onClick={() => {\r\n                                        setSelectedOrder(false)\r\n                                        setOrderChanges(false)\r\n                                    }}/></span>\r\n                                </div>\r\n                                <div className=\"form-row row pr-0 pl-0\" style={{paddingTop:10}}>\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-1 mt-1\">\r\n                                        <label className=\"lead mb-0\" style={{fontSize:'.9rem'}}><b>Type</b></label>\r\n                                        <span style={{display:'block',fontSize:'.9rem'}} className={selectedOrder.type === \"REQUEST\" ? 'request-type-details lead' : 'donation-type-details lead'}>{selectedOrder.type}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-xl-6\">\r\n                                        <label htmlFor=\"exampleInputEmail1\" className=\"lead mb-0\" style={{fontSize:'.9rem'}}><b>Name</b></label>\r\n                                        <span className=\"lead\" type=\"email\" style={{display:'block',fontWeight:400}} aria-describedby=\"emailHelp\">{selectedOrder.firstName} {selectedOrder.lastName}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} or=\"exampleInputEmail1\"><b>Assigned To</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={(e) => setOrderChanges({...orderChanges, driver: e.target.value === '' ? '' : JSON.parse(e.target.value)})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select lead' : 'custom-select no-border lead'} style={{display:'block',fontSize:14}} >{drivers && [{name: ''}, ...drivers].map(driver => {\r\n                                                return <option key={driver.id} value={driver.email === '' ? '' : JSON.stringify(driver)} selected={deriveDriverName(driver)}>{driver.name}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{drivers.find(a => a.email === setFormValue('assignedToDriver')) ? drivers.find(a => a.email === setFormValue('assignedToDriver')).name : ''}</span>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} htmlFor=\"exampleInputEmail1\"><b>Status</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={e => setOrderChanges({...orderChanges, status: e.target.value})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select lead ' : 'custom-select no-border lead'} style={{display:'block',fontSize:'1rem'}} >{['PENDING','IN PROGRESS','COMPLETED','CANCELLED','ERROR/ACTION'].map(status => {\r\n                                                return <option selected={setFormValue('status') === status ? true : false}>{status}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{setFormValue('status')}</span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} htmlFor=\"exampleInputEmail1\"><b>Address</b></label>\r\n                                        <input onChange={e => setOrderChanges({...orderChanges, address: e.target.value})} className={orderChanges.enabled ? 'lead form-control' : 'lead form-control no-border'} disabled={orderChanges.enabled ? false : true} style={{display:'inline',fontWeight:600,width:200,wordWrap:'break-word'}} value={setFormValue('address')}></input>\r\n                                    </div>\r\n                                    <div className=\"lead form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className=\"lead label-half text-secondary\" style={{fontSize:'.9rem'}} htmlFor=\"exampleInputEmail1\"><b>Zip Code</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={e => setOrderChanges({...orderChanges, zipcode: e.target.value})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select lead' : 'custom-select no-border lead'} style={{fontWeight:600,color:'black'}} >{user.customData.zipcodes.sort().map(zipcode => {\r\n                                                return <option selected={setFormValue('zipcode') === zipcode ? true : false}>{zipcode}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{setFormValue('zipcode')}</span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} htmlFor=\"exampleInputEmail1\"><b>{selectedOrder.type === 'DONATION' ? 'Pickup Time' : 'Delivery Time'}</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={e => setOrderChanges({...orderChanges, time: e.target.value})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select text-dark lead' : 'custom-select no-border text-dark lead'} style={{display:'block',fontSize:'1rem'}} >{['morning', 'afternoon', 'evening'].map(time => {\r\n                                                return <option selected={setFormValue('time') === time ? true : false}>{time.charAt(0).toUpperCase()}{time.slice(1)}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{setFormValue('time').charAt(0).toUpperCase()}{setFormValue('time').slice(1)}</span>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} htmlFor=\"exampleInputEmail1\"><b>Phone Number</b></label>\r\n                                        <input onChange={e => setOrderChanges({...orderChanges, phoneNumber: e.target.value})} className={orderChanges.enabled ? 'form-control text-dark' : 'form-control no-border text-dark'} type=\"text\" disabled={orderChanges.enabled ? false : true} style={{fontWeight:600,display:'block'}} aria-describedby=\"emailHelp\" value={setFormValue('phoneNumber')}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} htmlFor=\"exampleInputEmail1\"><b>Date Created</b></label>\r\n                                        <input type=\"text\" className={orderChanges.enabled ? 'form-control text-dark' : 'form-control no-border text-dark'} disabled={true} style={{fontWeight:600,display:'block'}} aria-describedby=\"emailHelp\" defaultValue={`${new Date(selectedOrder.dateCreated).toLocaleDateString()} ${new Date(selectedOrder.dateCreated).toLocaleTimeString()}`}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} htmlFor=\"exampleInputEmail1\"><b>Items</b></label>\r\n                                        <ul className=\"list-group flex-md-row flex-wrap ml-3\">\r\n                                            {selectedOrder.items.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index} className=\"context-list lead\" style={{width:'50%',fontWeight:600,fontSize:'1rem'}}>{item.name}</li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row mt-2\">\r\n                                    <div className=\"form-group col-12\">\r\n                                        <label className='lead text-secondary' style={{fontSize:'.9rem'}} htmlFor=\"exampleInputEmail1\"><b>Additional Info</b></label>\r\n                                        <textarea onChange={e => setOrderChanges({...orderChanges, additionalInfo: e.target.value})} className={orderChanges.enabled ? 'form-control' : 'form-control no-border'} type=\"text\" disabled={orderChanges.enabled ? false : true} style={{fontWeight:600,display:'block',fontSize:'.9rem',width:'100%'}} aria-describedby=\"emailHelp\" value={selectedOrder.additionalInfo}></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row pl-0\">\r\n                                    <div className=\"form-group col-12\">\r\n                                        {orderChanges.enabled && Object.keys(orderChanges).length > 1 && !loading && <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\" onClick={() => setShowConfirmModal(true)}>Save Order</button>}\r\n                                        {orderChanges.enabled && loading &&  \r\n                                            <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\">\r\n                                                <Spinner animation=\"border\" role=\"status\">\r\n                                                    <span className=\"sr-only\">Loading...</span>\r\n                                                </Spinner>\r\n                                            </button>\r\n                                        }\r\n                                        {orderChanges.enabled && <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\" onClick={() => setOrderChanges(false)}>Cancel</button>}\r\n                                        {!orderChanges.enabled && <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\" onClick={() => setOrderChanges({enabled: true})}>Edit Order</button>}\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    : ''}\r\n                </div>\r\n            : ''}\r\n\r\n            {showConfirmModal ? \r\n                <ConfirmChangesModal {...props}/>\r\n            : ''}\r\n\r\n            {!isAuthenticated ? \r\n                <div className=\"text-center mr-auto ml-auto\" style={{marginTop:'15rem',width:'20%'}}>\r\n                    <div>\r\n                        <span className=\"h5\">Select a login partner...</span>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n\r\n            {errors.login ? \r\n                <div className=\"text-center mr-auto ml-auto\" style={{marginTop:'15rem',width:'20%'}}>\r\n                    <div>\r\n                        <span className=\"h5\">{errors.login}</span>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n        </main>\r\n    )\r\n}","import React from 'react';\r\n\r\nconst GlobalStateContext = React.createContext();\r\n\r\nexport default GlobalStateContext; ","import React from 'react';\r\n\r\nconst RequestContext = React.createContext();\r\n\r\nexport default RequestContext; ","import React from 'react';\r\n\r\nconst DonationContext = React.createContext();\r\n\r\nexport default DonationContext; ","import React from 'react';\r\n\r\nconst DispatchContext = React.createContext();\r\n\r\nexport default DispatchContext; ","import React from 'react';\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\r\nimport {ToastContainer} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Home from './components/Home'\r\nimport RequestModule from './components/RequestModule/RequestModuleHome'\r\nimport DonationModule from './components/DonationModule/DonationModuleHome'\r\nimport Error from './components/Error'\r\nimport OrderComplete from './components/Order/OrderComplete';\r\nimport './css/App.css';\r\nimport './css/bootstrap.min.css'\r\nimport DispatchModuleHome from './components/DispatchModule/DispatchModuleHome';\r\nimport GlobalStateContext from './contexts/Global/GlobalStateContext';\r\nimport RequestContext from './contexts/RequestModule/RequestContext';\r\nimport DonationContext from './contexts/DonationModule/DonationContext';\r\nimport DispatchContext from './contexts/DispatcherModule/DispatchContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalStateContext.Consumer>\r\n      {globalContext => (\r\n        <BrowserRouter>\r\n        <ToastContainer\r\n            autoClose={5000}\r\n            newestOnTop\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnVisibilityChange\r\n            draggable\r\n            pauseOnHover\r\n            className='toast-container'\r\n            toastClassName=\"toastify-brand\"\r\n            progressClassName=\"toastify-progress-bar\"\r\n        />\r\n\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={(props) => <Home globalContext={globalContext} {...props}/>}/>\r\n          <Route exact={true} path=\"/request\" render={(props) => <RequestContext.Consumer>{requestContext => (<RequestModule globalContext={globalContext} requestContext={requestContext} {...props}/>)}</RequestContext.Consumer>}/>\r\n          <Route exact={true} path=\"/donate\" render={(props) => <DonationContext.Consumer>{donationContext => (<DonationModule globalContext={globalContext} donationContext={donationContext} {...props}/>)}</DonationContext.Consumer>}/>\r\n          <Route exact={true} path=\"/dispatcher\" render={(props) => <DispatchContext.Consumer>{dispatchContext => (<DispatchModuleHome globalContext={globalContext} dispatchContext={dispatchContext} {...props}/>)}</DispatchContext.Consumer>}/>\r\n          <Route exact={true} path=\"/error\" render={(props) => <DispatchContext.Consumer>{dispatchContext => (<Error globalContext={globalContext} dispatchContext={dispatchContext} {...props}/>)}</DispatchContext.Consumer>}/>\r\n          <Route exact path='/order' render={props => <OrderComplete globalContext={globalContext}/>}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      )}\r\n    </GlobalStateContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// All things that should be accessed in a global setting will live here\r\nimport React, {useState} from 'react';\r\nimport GlobalStateContext from './GlobalStateContext';\r\nimport {checkUserAuth,getUserInfo} from '../../lib/StitchFunctions'\r\n\r\nconst GlobalStateProvider = props => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n    const [errors, setErrors] = useState({});\r\n    const [user, setUser] = useState(null);\r\n\r\n    const checkAuthStatus = async () =>{\r\n        const prom = await checkUserAuth()\r\n        setIsAuthenticated(prom)\r\n    }\r\n\r\n    const getUser = async () => {\r\n     //example of calling a stich function inside here\r\n        const prom = await getUserInfo()\r\n        if(!prom) setErrors({...errors, login: 'We had trouble logging you in, please try again later.'})\r\n        else setUser(prom);\r\n    }\r\n    \r\n    return (\r\n        <GlobalStateContext.Provider // this is where we expose state values and functions to the rest of the application\r\n            value={{\r\n                state: { // for organization reasons I like keep all state values inside a state object\r\n                    isAuthenticated: isAuthenticated,\r\n                    errors: errors,\r\n                    user: user\r\n                },\r\n                setErrors: (errs) => setErrors(errs),\r\n                setIsAuthenticated: (bool) => setIsAuthenticated(bool), // expose only the functions that are necessary\r\n                checkAuthStatus: () => checkAuthStatus(),\r\n                getUser: () => getUser()\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalStateContext.Provider>\r\n    )\r\n};\r\n\r\nexport default GlobalStateProvider;","import React, {useState} from 'react';\r\nimport DonationContext from './DonationContext';\r\nimport { toast } from 'react-toastify';\r\nimport { putOrder } from '../../lib/StitchFunctions';\r\n\r\nconst DonationProvider = props => {\r\n    const [step, setStep] = useState(1);\r\n    const [errors, setErrors] = useState({})\r\n    const [loading, setLoading] = useState(false);\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [formData, setFormData] = useState({ \r\n        firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], dropoff: null, freeTextItems: [''] });\r\n\r\n\r\n    const stepOneIsValid = () => {\r\n        if(!formData.firstName) return true\r\n        if(!formData.lastName) return true\r\n        if(!formData.phoneNumber || !formData.phoneNumber.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/g)) return true\r\n        if(!formData.emailAddress) return true\r\n        if(!formData.address) return true\r\n        if(!formData.zipcode) return true\r\n        return false\r\n    }\r\n\r\n    const stepTwoIsValid = () => {\r\n        if(!formData.items || (formData.items && formData.items.length === 0)) return true\r\n        return false\r\n    }\r\n\r\n    const stepThreeIsValid = () => {\r\n        if(!formData.dropoff) return true\r\n        return false\r\n    }\r\n\r\n    const validateStep1 = () => {\r\n        var valid = true\r\n        var validationErrors = {...errors}\r\n\r\n        if((!formData.firstName || formData.firstName == '' || !formData.firstName.match(/[a-z,A-Z]/gi))){\r\n            if(!errors.firstName) validationErrors.firstName=true\r\n            valid = false\r\n        } else {\r\n            if(errors.firstName) validationErrors.firstName = false\r\n        }\r\n\r\n        if((!formData.lastName || formData.lastName == '' || !formData.lastName.match(/[a-z,A-Z]/gi))){\r\n            if(!errors.lastName) validationErrors.lastName=true\r\n            valid = false\r\n        } else {\r\n            if(errors.lastName) validationErrors.lastName = false\r\n        }\r\n\r\n        if((!formData.phoneNumber || formData.phoneNumber == '' || !formData.phoneNumber.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/g))){\r\n            if(!errors.phoneNumber) validationErrors.phoneNumber=true\r\n            valid = false\r\n        } else {\r\n            if(errors.phoneNumber) validationErrors.phoneNumber = false\r\n        }\r\n\r\n        if((!formData.emailAddress || formData.emailAddress == '' || !formData.emailAddress.match(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/g))){\r\n            if(!errors.emailAddress) validationErrors.emailAddress=true\r\n            valid = false\r\n        } else {\r\n            if(errors.emailAddress) validationErrors.emailAddress = false\r\n        }\r\n\r\n        if((!formData.address || formData.address == '' || !formData.address.match(/\\d{1,3}.?\\d{0,3}\\s[a-zA-Z]{2,30}\\s[a-zA-Z]{2,15}/g))){\r\n            if(!errors.address) validationErrors.address=true\r\n            valid = false\r\n        } else {\r\n            if(errors.address) validationErrors.address = false\r\n        }\r\n\r\n        if((!formData.zipcode || formData.zipcode == '' || !formData.zipcode.match(/^^\\d{5}$/g))){\r\n            if(!errors.zipcode) validationErrors.zipcode=true\r\n            valid = false\r\n        } else {\r\n            if(errors.zipcode) validationErrors.zipcode = false\r\n        }\r\n\r\n        setErrors(validationErrors)\r\n        if(valid) setStep(2)\r\n    };\r\n\r\n    const validateStep2 = () => {\r\n        // todo handle requested item validation\r\n        setStep(3);\r\n    };\r\n\r\n    const validateStep3 = async () => {\r\n        setErrors({})\r\n        setShowModal(true)\r\n    };\r\n\r\n    const submitDonation = async () => {\r\n        // todo handle dropoff time validation\r\n        setLoading(true);\r\n        // format put request data\r\n        const formattedData = formatRequest();\r\n        const response = await putOrder(formattedData);\r\n        setLoading(false);\r\n        setErrors({})\r\n\r\n        if(response.status === '200'){\r\n            toast('Donation submitted successfully!')\r\n            setFormData({firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], dropoff: null, freeTextItems: [''] })\r\n            setStep(4)\r\n            setShowModal(false)\r\n        } else {\r\n            if(response.status === '409'){\r\n                setErrors({...errors, address: 'Address is not valid.'})\r\n                toast('We could validate this address, please double check.');\r\n            } else {\r\n                if(response.message.indexOf('does not exist') > -1){\r\n                    setErrors({...errors, address: 'Address is not valid.'})\r\n                    toast('We could not validate this address, please double check.', {autoClose:10000});\r\n                } else {\r\n                    toast(response.message);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const formatRequest = () => {\r\n        // todo write logic to format the request object to match the data model given by backend\r\n        const body = {};\r\n        body.firstName = formData.firstName;\r\n        body.lastName = formData.lastName;\r\n        body.address = formData.address;\r\n        body.phoneNumber =  formData.phoneNumber;\r\n        body.emailAddress = formData.emailAddress;\r\n        body.zipcode = formData.zipcode;\r\n        body.time = formData.dropoff.id;\r\n        body.type = 'DONATION';\r\n        body.items = [...formData.items.map(item => ({name: item.value, quantity: 1})), ...formData.freeTextItems.map(item => ({name: item, quantity: 1}))]\r\n        body.additionalInfo = formData.additionalInfo\r\n        body.householdNum = \"0\"\r\n        return body;\r\n    };\r\n\r\n    return(\r\n        <DonationContext.Provider\r\n            value={{\r\n                state: {\r\n                    // put state values here\r\n                    step, // shorthand for step: step\r\n                    loading,\r\n                    showModal,\r\n                    formData,\r\n                    errors\r\n                },\r\n                // put functions you want to expose here\r\n                setStep: (num) => setStep(num),\r\n                setErrors: (obj) => setErrors(obj),\r\n                setLoading: (bool) => setLoading(bool),\r\n                setShowModal: (bool) => setShowModal(bool),\r\n                setFormData: (data) => setFormData(data),\r\n                stepOneIsValid: () => stepOneIsValid(),\r\n                stepTwoIsValid: () => stepTwoIsValid(),\r\n                stepThreeIsValid: () => stepThreeIsValid(),\r\n                validateStep1: () => validateStep1(),\r\n                validateStep2: () => validateStep2(),\r\n                validateStep3: () => validateStep3(),\r\n                submitDonation: () =>  submitDonation()\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DonationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DonationProvider;","import React, {useState} from 'react';\r\nimport RequestContext from './RequestContext';\r\nimport { toast } from 'react-toastify';\r\nimport { putOrder } from '../../lib/StitchFunctions';\r\n\r\nconst RequestProvider = props => {\r\n    const [errors, setErrors] = useState({})\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [step, setStep] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [formData, setFormData] = useState({ \r\n        firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], freeTextItems: [''], dropoff: null, householdNum: 1 })\r\n\r\n    const stepOneIsValid = () => {\r\n        if(!formData.firstName) return true\r\n        if(!formData.lastName) return true\r\n        if(!formData.phoneNumber || !formData.phoneNumber.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/g)) return true\r\n        if(!formData.emailAddress) return true\r\n        if(!formData.address) return true\r\n        if(!formData.zipcode) return true\r\n        if(!formData.householdNum || formData.householdNum === 0) return true\r\n        return false\r\n    }\r\n\r\n    const stepTwoIsValid = () => {\r\n        if(formData.items.length === 0) return true\r\n        return false\r\n    }\r\n\r\n    const stepThreeIsValid = () => {\r\n        if(!formData.dropoff) return true\r\n        return false\r\n    }\r\n\r\n    const validateStep1 = (values) => {\r\n        var valid = true\r\n        var validationErrors = {...errors}\r\n\r\n        if((!formData.firstName || formData.firstName == '' || !formData.firstName.match(/[a-z,A-Z]/gi))){\r\n            if(!errors.firstName) validationErrors.firstName=true\r\n            valid = false\r\n        } else {\r\n            if(errors.firstName) validationErrors.firstName = false\r\n        }\r\n\r\n        if((!formData.lastName || formData.lastName == '' || !formData.lastName.match(/[a-z,A-Z]/gi))){\r\n            if(!errors.lastName) validationErrors.lastName=true\r\n            valid = false\r\n        } else {\r\n            if(errors.lastName) validationErrors.lastName = false\r\n        }\r\n\r\n        if((!formData.phoneNumber || formData.phoneNumber == '' || !formData.phoneNumber.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/g))){\r\n            if(!errors.phoneNumber) validationErrors.phoneNumber=true\r\n            valid = false\r\n        } else {\r\n            if(errors.phoneNumber) validationErrors.phoneNumber = false\r\n        }\r\n\r\n        if((!formData.emailAddress || formData.emailAddress == '' || !formData.emailAddress.match(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/g))){\r\n            if(!errors.emailAddress) validationErrors.emailAddress=true\r\n            valid = false\r\n        } else {\r\n            if(errors.emailAddress) validationErrors.emailAddress = false\r\n        }\r\n\r\n        if((!formData.address || formData.address == '' || !formData.address.match(/\\d{1,3}.?\\d{0,3}\\s[a-zA-Z]{2,30}\\s[a-zA-Z]{2,15}/g))){\r\n            if(!errors.address) validationErrors.address=true\r\n            valid = false\r\n        } else {\r\n            if(errors.address) validationErrors.address = false\r\n        }\r\n\r\n        if((!formData.zipcode || formData.zipcode == '' || !formData.zipcode.match(/^^\\d{5}$/g))){\r\n            if(!errors.zipcode) validationErrors.zipcode=true\r\n            valid = false\r\n        } else {\r\n            if(errors.zipcode) validationErrors.zipcode = false\r\n        }\r\n\r\n        setErrors(validationErrors)\r\n        if(valid) setStep(2)\r\n    };\r\n\r\n    const validateStep2 = () => {\r\n        // todo handle requested item validation\r\n        setStep(3)\r\n    };\r\n\r\n    const validateStep3 = async() => {\r\n        setErrors({})\r\n        setShowModal(true)\r\n    }\r\n\r\n    const submitRequest = async(values) => {\r\n        console.log(values)\r\n        // todo handle dropoff time validation\r\n        setLoading(true);\r\n        // format put request data\r\n        const formattedData = formatRequest();\r\n        const response = await putOrder(formattedData);\r\n        setLoading(false);\r\n        setErrors({})\r\n\r\n        if(response.status === '200'){\r\n            toast('Request submitted successfully!')\r\n            setFormData({ \r\n                firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], freeTextItems: [''], dropoff: null, householdNum: 0 })\r\n            setStep(4)\r\n            setShowModal(false)\r\n        } else {\r\n            if(response.status === '409'){\r\n                setErrors({...errors, address: 'Address is not valid.'})\r\n                toast('We could validate this address, please double check.');\r\n            } else {\r\n                if(response.message.indexOf('does not exist') > -1){\r\n                    setErrors({...errors, address: 'Address is not valid.'})\r\n                    toast('We could not validate this address, please double check.', {autoClose:10000});\r\n                } else {\r\n                    toast(response.message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const formatRequest = () => {\r\n        // todo write logic to format the request object to match the data model given by backend\r\n        const body = {};\r\n        body.firstName = formData.firstName;\r\n        body.lastName = formData.lastName;\r\n        body.address = formData.address;\r\n        body.emailAddress = formData.emailAddress;\r\n        body.phoneNumber =  formData.phoneNumber;\r\n        body.zipcode = formData.zipcode;\r\n        body.time = formData.dropoff.id;\r\n        body.type = 'REQUEST';\r\n        body.items = [...formData.items.map(item => ({name: item.value, quantity: 1})), ...formData.freeTextItems.map(item => ({name: item, quantity: 1}))]\r\n        body.additionalInfo = formData.additionalInfo;\r\n        body.householdNum = formData.householdNum.toString();\r\n        return body; \r\n    };\r\n\r\n    return (\r\n        <RequestContext.Provider \r\n            value={{\r\n                state: {\r\n                    step, // shorthand for step: step\r\n                    loading,\r\n                    showModal,\r\n                    formData,\r\n                    errors\r\n                    // state values you want to expose go here\r\n                },\r\n                setStep: (num) => setStep(num),\r\n                setErrors: (obj) => setErrors(obj),\r\n                setLoading: (bool) => setLoading(bool),\r\n                setFormData: (data) => setFormData(data),\r\n                setShowModal: (bool) => setShowModal(bool),\r\n                validateStep1: () => validateStep1(),\r\n                stepOneIsValid: () => stepOneIsValid(),\r\n                stepTwoIsValid: () => stepTwoIsValid(),\r\n                stepThreeIsValid: () => stepThreeIsValid(),\r\n                validateStep2: () => validateStep2(),\r\n                validateStep3: () => validateStep3(), \r\n                submitRequest: () => submitRequest()\r\n                // functions you want to expose go here\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n};\r\n\r\nexport default RequestProvider;","import React, { useState } from 'react';\r\nimport DispatchContext from './DispatchContext';\r\nimport { getOrders, getDrivers, assignOrder, updateOrderStatus, getOrder, updateOrderFields } from '../../lib/StitchFunctions';\r\nimport {toast} from 'react-toastify'\r\n\r\nconst DispatchProvider = props => {\r\n    const [orders, setOrders] = useState(false)\r\n    const [drivers, setDrivers] = useState(false)\r\n    const [selectedOrder, setSelectedOrder] = useState(false)\r\n    const [typeFilter, setTypeFilter] = useState(false)\r\n    const [statusFilter, setStatusFilter] = useState([])\r\n    const [orderChanges, setOrderChanges] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false)\r\n\r\n    const getOrdersForDispatcher = async (notify) =>{\r\n        try{\r\n            const prom = await getOrders()\r\n            if(prom.status === '200') setOrders(prom.data.sort((a, b) => a.dateCreated < b.dateCreated))\r\n            if(notify) toast('Orders updated!')\r\n            if(loading) setLoading(false)\r\n        } catch(e){\r\n            console.log(e)\r\n            //set error into global state?\r\n        }\r\n    }\r\n\r\n    const getDriversForDispatcher = async () => {\r\n        try {\r\n            const prom = await getDrivers()\r\n            if(prom.status === '200') setDrivers(prom.data)\r\n        } catch(e) {\r\n            \r\n        }\r\n    }\r\n\r\n    const setFormValue = (key) => {\r\n        try {\r\n            if(!orderChanges.enabled) {  \r\n                if(!selectedOrder[key]) return {}\r\n                return selectedOrder[key]\r\n            }\r\n            else {\r\n                if(orderChanges[key]) return orderChanges[key]\r\n                else {\r\n                    if(!selectedOrder[key]) return {}\r\n                    return selectedOrder[key]\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const updateOrder = async () => {\r\n        if(!orderChanges) return\r\n        setLoading(true)\r\n        if(orderChanges.driver === '' || orderChanges.driver) { //process driver change with assignOrder api\r\n            let prom = await assignOrder(selectedOrder._id, orderChanges.driver.email ? orderChanges.driver.email : '')\r\n            if(prom.status === '400') {\r\n                toast('We had an issue updating the order. Please try again later.')\r\n                setLoading(false)\r\n                return\r\n            }\r\n        }\r\n\r\n        if(orderChanges.status){\r\n            let prom = await updateOrderStatus(selectedOrder._id, orderChanges.status)\r\n            if(prom.status === '400') {\r\n                toast('We had an issue updating the order. Please try again later.')\r\n                setLoading(false)\r\n                return\r\n            }\r\n        }\r\n\r\n        const addressChanged = orderChanges.address ? true : false\r\n        let newFormData = {...selectedOrder}\r\n\r\n        Object.keys(orderChanges).forEach((key) => {\r\n            newFormData[key] = orderChanges[key]\r\n        })\r\n\r\n        let updateProm = await updateOrderFields(newFormData ,addressChanged)\r\n        if(updateProm.status === '400' || updateProm.errorCode) {\r\n            toast('We had an issue updating the order. Please try again later.')\r\n            setLoading(false)\r\n            return\r\n        }\r\n\r\n        toast('Order successfully updated!')\r\n        await getOrdersForDispatcher()\r\n        setSelectedOrder(await getOrder(selectedOrder._id))\r\n        setLoading(false)\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    return (\r\n        <DispatchContext.Provider \r\n            value={{\r\n                state: {\r\n                    // put your state that you want to expose in here\r\n                    orders: orders,\r\n                    selectedOrder: selectedOrder,\r\n                    typeFilter: typeFilter,\r\n                    statusFilter: statusFilter,\r\n                    drivers: drivers,\r\n                    orderChanges: orderChanges,\r\n                    loading: loading,\r\n                    showConfirmModal: showConfirmModal\r\n                },\r\n                // expose functions here\r\n                getOrdersForDispatcher: (bool) => getOrdersForDispatcher(bool),\r\n                getDriversForDispatcher: () => getDriversForDispatcher(),\r\n                setSelectedOrder: (obj) => setSelectedOrder(obj),\r\n                setTypeFilter: (str) => setTypeFilter(str),\r\n                setStatusFilter: (str) => setStatusFilter(str),\r\n                setDrivers: () => setDrivers(),\r\n                setOrderChanges: (bool) => setOrderChanges(bool),\r\n                setFormValue: (str) => setFormValue(str),\r\n                updateOrder: () => updateOrder(),\r\n                setShowConfirmModal: (bool) => setShowConfirmModal(bool),\r\n                setLoading: (bool) => setLoading(bool)\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DispatchContext.Provider>\r\n    )\r\n};\r\n\r\nexport default DispatchProvider;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ContextWrapper from './ContextWrapper';\r\n\r\nReactDOM.render(<ContextWrapper><App /></ContextWrapper>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// manage the context providers in here, this function will just return the context providers which wraps app.js\r\n// global state is the only provider and consumer most likely in here\r\nimport React from 'react';\r\nimport GlobalStateProvider from \"./contexts/Global/GlobalStateProvider\";\r\nimport GlobalStateContext from \"./contexts/Global/GlobalStateContext\";\r\nimport DonationProvider from \"./contexts/DonationModule/DonationProvider\";\r\nimport RequestProvider from './contexts/RequestModule/RequestProvider';\r\nimport DispatchProvider from './contexts/DispatcherModule/DispatchProvider';\r\n\r\n// if you want you can pass the globalContext right into your provider as a prop. It will then be available\r\nexport default props => (\r\n    <GlobalStateProvider>\r\n        <GlobalStateContext.Consumer>\r\n            {globalContext => (\r\n                <DonationProvider>\r\n                    <RequestProvider>\r\n                        <DispatchProvider>\r\n                            {props.children}\r\n                        </DispatchProvider>\r\n                    </RequestProvider>\r\n                </DonationProvider>\r\n            )}\r\n        </GlobalStateContext.Consumer>\r\n    </GlobalStateProvider>\r\n)","module.exports = __webpack_public_path__ + \"static/media/fulllogo.ec71ed57.png\";"],"sourceRoot":""}