{"version":3,"sources":["components/StayNeighborBrand.js","components/Home.js","components/MenuBar.js","data/orders.js","components/ItemList.js","components/Order/OrderConfirmationModal.js","components/Order/OrderDropOffTime.js","components/Order/OrderCompleteLandingPage.js","components/RequestModule/RequestModuleHome.js","components/DonationModule/DonationModuleHome.js","components/Error.js","components/Loading.js","lib/StitchFunctions.js","components/Order/OrderComplete.js","components/DispatchModule/ConfirmChangesModal.js","components/GoogleMaps/Marker.js","components/GoogleMaps/GoogleMap.js","components/GoogleMaps/MarkerInfoWindowGmapsObj.js","components/DispatchModule/DispatchModuleHome.js","contexts/Global/GlobalStateContext.js","contexts/RequestModule/RequestContext.js","contexts/DonationModule/DonationContext.js","contexts/DispatcherModule/DispatchContext.js","App.js","serviceWorker.js","contexts/Global/GlobalStateProvider.js","contexts/DonationModule/DonationProvider.js","contexts/RequestModule/RequestProvider.js","contexts/DispatcherModule/DispatchProvider.js","index.js","ContextWrapper.js","images/fulllogo.png"],"names":["StayNeighborBrand","className","style","paddingTop","width","maxWidth","src","fulllogo","Home","props","backgroundColor","paddingBottom","fontSize","color","href","height","marginTop","fontWeight","onClick","history","push","paddingRight","paddingLeft","size","window","location","replace","MenuBar","console","log","goBackTo","setStep","dropoff","id","label","time","itemList","value","ItemList","formData","stepTwoIsValid","setFormData","validateStep2","map","item","itemIndex","items","findIndex","a","itemsList","splice","key","freeTextItems","index","maxLength","onChange","e","list","target","name","type","placeholder","length","title","disabled","OrderConfirmationModal","showModal","setShowModal","loading","submitRequest","errors","setErrors","Modal","show","onHide","Body","borderTop","letterSpacing","address","listStyleType","firstName","lastName","zipcode","phoneNumber","emailAddress","border","additionalInfo","Spinner","animation","role","OrderDropOffTime","validateStep3","stepThreeIsValid","fontFamily","rows","OrderCompleteLandingPage","Fragment","RequestModuleHome","requestContext","state","step","stepOneIsValid","setLoading","validateStep1","required","marginBottom","message","zipCode","householdNum","document","getElementById","innerText","DonationModuleHome","donationContext","submitDonation","streetAddress","Error","globalContext","login","Loading","establishMongoDbConnection","client","intializeStitchClient","errorCode","errorMessage","mongodb","getServiceClient","RemoteMongoClient","factory","db","err","initalizeStitchServiceClient","Stitch","initializeDefaultAppClient","defaultAppClient","anonymousUserLogin","auth","loginWithCredential","AnonymousCredential","getOrders","callFunction","result","putOrder","body","isLoggedIn","logUserOut","toString","checkUserAuth","hasRedirectResult","handleRedirectResult","credential","GoogleRedirectCredential","loginWithRedirect","logout","getUserInfo","refreshCustomData","collection","findOne","user_id","user","currentUser","customData","getDrivers","assignOrder","orderId","driverEmail","updateOrderStatus","orderStatus","updateOrderFields","order","addressUpdated","_id","getOrder","completeOrder","OrderComplete","useHistory","useState","orderUpdateStatus","setOrderUpdateStatus","pathname","split","pop","useEffect","orderCompletion","res","status","ConfirmChangesModal","dispatchContext","showConfirmModal","orderChanges","selectedOrder","setShowConfirmModal","updateOrder","Object","keys","change","originalValue","updatedValue","charAt","toUpperCase","slice","Wrapper","styled","div","Marker","alt","text","defaultProps","main","GoogleMap","children","bootstrapURLKeys","last","getInfoWindowString","place","MarkerInfoWindowGmapsObj","handleApiLoaded","maps","places","updateSelectedMarker","selectedMarker","setState","gMap","gMaps","markers","infowindows","this","forEach","position","lat","Number","geometry","lng","long","data","icon","path","SymbolPath","BACKWARD_CLOSED_ARROW","strokeColor","scale","FORWARD_CLOSED_ARROW","InfoWindow","content","marker","i","addListener","open","setSelectedOrder","close","coordinates","defaultZoom","center","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","orders","Component","DispatchModuleHome","typeFilter","statusFilter","drivers","getOrdersForDispatcher","setTypeFilter","setStatusFilter","setOrderChanges","getDriversForDispatcher","setFormValue","isAuthenticated","checkAuthStatus","getUser","setIsAuthenticated","filteredOrders","deriveDriverName","driver","assignedToDriver","email","filter","applyFilters","profile","toast","maxHeight","class","aria-label","marginLeft","overflowY","date","hoursSince","differenceInHours","Date","differenceInMinutes","differenceInDays","timeSince","dateCreated","toLowerCase","display","for","aria-describedby","or","enabled","JSON","parse","stringify","selected","find","wordWrap","zipcodes","sort","defaultValue","toLocaleDateString","toLocaleTimeString","GlobalStateContext","React","createContext","RequestContext","DonationContext","DispatchContext","App","Consumer","autoClose","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","toastClassName","progressClassName","exact","render","Boolean","hostname","match","GlobalStateProvider","setUser","prom","Provider","errs","bool","DonationProvider","formattedData","formatRequest","response","indexOf","quantity","num","obj","RequestProvider","DispatchProvider","setOrders","setDrivers","notify","b","addressChanged","newFormData","str","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.e4cd5a55.chunk.js","sourcesContent":["import React from 'react'\r\nimport fulllogo from '../images/fulllogo.png'\r\n\r\nexport default function StayNeighborBrand(){\r\n    return (\r\n        <div className=\"mr-auto ml-auto text-center\" style={{ paddingTop: '7rem' }}>\r\n            <img className=\"mr-auto ml-auto\" style={{ width:'50%',maxWidth:'25rem' }} src={fulllogo} />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport StayNeighborBrand from './StayNeighborBrand'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n\r\nexport default function Home(props) {\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                </div>\r\n            </nav>\r\n            <div style={{ backgroundColor: \"rgb(255, 255, 255)\", height: '100vh', color: 'white' }}>\r\n                <StayNeighborBrand/>\r\n                <div className=\"lead col-10 col-xl-6 col-md-8 mr-auto ml-auto text-center\" style={{ fontSize: '1.25rem', marginTop: '2rem', color: 'rgb(0, 0, 0)', fontWeight: 400 }}>\r\n                    A volunteer-powered network for essential supplies - delivered in a safe, healthy, and organized way.\r\n                </div>\r\n                <div style={{ marginTop: '3rem' }}>\r\n                    <div className=\"col-xl-6 col-12 text-center mr-auto ml-auto\">\r\n                        <button onClick={() => props.history.push('/request')} className=\"btn col-10 underline-hover btn-outline-brand\" style={{ color: 'white', fontSize: '1.25rem', paddingRight: 50, paddingLeft: 50, paddingTop: 10, paddingBottom: 10 }}>I <b style={{ fontWeight: 'bolder' }}>need</b> supplies</button>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-12 text-center mt-4 mr-auto ml-auto\">\r\n                        <button onClick={() => props.history.push('/donate')} className=\"btn col-10 underline-hover btn-outline-brand\" style={{ color: 'white', fontSize: '1.25rem', paddingRight: 50, paddingLeft: 50, paddingTop: 10, paddingBottom: 10 }}>I <b style={{ fontWeight: 'bolder' }}>have</b> supplies</button>\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginTop: 15 }} className=\"col-12 text-center\">\r\n                    <p onClick={() => props.history.push('/dispatcher')} className=\"lead underline-hover\" style={{ fontSize: '1.25rem', color: 'rgb(158, 69, 183)', paddingTop: 10, fontWeight: 400 }}>Dispatchers  <ChevronRight size={18} /></p>\r\n                </div>\r\n\r\n                <nav className=\"navbar fixed-bottom\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    <div className=\"mr-auto ml-auto\">\r\n                        <a onClick={() => window.location.replace('https://www.stayneighbor.com')} style={{ fontSize: 11, color: 'white' }} href=\"#\">StayNeighbor is a community-built platform.  <b style={{ color: 'yellow' }}>GET INVOLVED</b></a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport {ArrowLeftCircle} from 'react-feather'\r\n\r\nexport default function MenuBar(props){\r\n    console.log(props)\r\n    const {goBackTo} = props\r\n    return (\r\n        <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n            <div className=\"col-12 mt-2 mr-auto\">\r\n                <ArrowLeftCircle color=\"white\" className=\"mr-3 underline-hover\" onClick={() => props.setStep(props.goBackTo)} />\r\n                <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export const dropoff = [\r\n    { id: 'morning', label: 'Morning', time: '9am - 12pm' },\r\n    { id: 'afternoon', label: 'Afternoon', time: '12pm - 4pm' },\r\n    { id: 'evening', label: 'Evening', time: '4pm - 9pm' },\r\n];\r\n\r\nexport const itemList = [\r\n    { id: 1, label: 'Food', value: 'food' },\r\n    { id: 2, label: 'Personal Hygiene', value: 'personal hygiene' },\r\n    { id: 3, label: 'Water', value: 'water' },\r\n    { id: 4, label: 'PPE', value: 'ppe' }\r\n];\r\n","import React from 'react'\r\nimport { Plus, CheckSquare, Square, Trash2 } from 'react-feather'\r\nimport {itemList} from '../data/orders.js'\r\n\r\nexport default function ItemList(props){\r\n    const {formData, stepTwoIsValid, setFormData, validateStep2} = props\r\n\r\n    return (\r\n        <div style={{ marginTop: '2rem' }} className=\"col-10 mr-auto ml-auto\">\r\n            <form>\r\n                <div className=\"form-row mr-auto ml-auto\">\r\n                    <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {itemList.map(item => {\r\n                                var itemIndex = formData.items.findIndex(a => a.value == item.value)\r\n                                if (formData.items && itemIndex > -1) {\r\n                                    var itemsList = [...formData.items]\r\n                                    itemsList.splice(itemIndex, 1)\r\n                                    return <li key={item.id} onClick={() => setFormData({ ...formData, items: itemsList })} className=\"list-group-item underline-hover\"><CheckSquare className=\"mr-3 brand\" size={18} />{item.label}</li>\r\n                                } else {\r\n                                    return (\r\n                                        <li key={item.id} onClick={() => setFormData({ ...formData, items: [...formData.items, item] })} className=\"underline-hover list-group-item d-flex\"><Square className=\"mr-3 brand\" size={18} />{item.label}</li>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                        {formData.freeTextItems.map((item, index) => {\r\n                            return (\r\n                                <div className=\"d-flex\">\r\n                                    <input maxLength=\"150\" onChange={(e) => {\r\n                                        var list = [...formData.freeTextItems]\r\n                                        list[index] = e.target.value\r\n                                        setFormData({...formData, freeTextItems: list})\r\n                                    }} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className=\"form-control pl-3 pr-3\" id=\"newListItem\" placeholder=\"+ Add additional Item\" value={item}>\r\n                                    </input>\r\n                                    <Trash2 onClick={() => {\r\n                                        var list = [...formData.freeTextItems]\r\n                                        if(list.length === 1) {\r\n                                            list[index] = ''\r\n                                        } else {\r\n                                            list.splice(index,1)\r\n                                        }\r\n                                        setFormData({...formData, freeTextItems: list})\r\n                                    }} style={{height:'100%'}} className=\"mt-2 hover brand\"/>\r\n                                </div>\r\n                                \r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className='form-row'>\r\n                    <div className=\"form-group col-xl-6 col-12 mr-auto ml-auto\">\r\n                        <button type=\"button\" onClick={() => setFormData({...formData, freeTextItems: [...formData.freeTextItems, '']})} className=\"btn btn-sm btn-outline-brand\"><Plus /> Add Another</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row mr-auto ml-auto text-center\">\r\n                    <button title={formData && (!formData.items || (formData.items && formData.items.length === 0)) ? 'Please select an item' : ''} onClick={() => validateStep2()} disabled={stepTwoIsValid()}  type=\"submit\" className=\"btn text-center mr-auto ml-auto col-xl-6 col-12 mt-1 btn-primary-hover\">Continue</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Modal,Spinner} from 'react-bootstrap'\r\nimport {AlertTriangle} from 'react-feather'\r\n\r\nexport default function OrderConfirmationModal(props){\r\n    const {showModal, setStep, setShowModal, formData, type, loading, submitRequest, errors, setErrors} = props\r\n    return (\r\n        <Modal style={{paddingTop:75}} size='lg' show={showModal} onHide={() => {}}>\r\n            <Modal.Body style={{borderTop:'10px solid #6f2c8e'}}>\r\n                <div className=\"col-12 text-center\">\r\n                    <span style={{fontSize:20,fontWeight:600,color:\"#6f2c8e\",letterSpacing:'.025rem'}}>Is everything correct?</span>\r\n                </div>\r\n                <div className=\"col-12 row\" style={{marginTop:25}}>\r\n                    <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                        <div className=\"border-bottom pb-1 row\">\r\n                            <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Your Info {errors.address ? <AlertTriangle style={{color:'red'}}/> : ''}</div>\r\n                            <div onClick={() => {\r\n                                setStep(1)\r\n                                setShowModal(false)\r\n                                }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                        </div>\r\n                        <div>\r\n                            <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.firstName} {formData.lastName}</li>\r\n                            <li className=\"mb-1 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.address}</li>\r\n                            <li className=\"mb-3 lead\" style={{listStyleType:'none',fontSize:14}}>{formData.zipcode}</li>\r\n                            <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.phoneNumber}</li>\r\n                            <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.emailAddress}</li>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                        <div className=\"border-bottom pb-1 row\">\r\n                            <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Items</div>\r\n                            <div onClick={() => {\r\n                                setStep(2)\r\n                                setShowModal(false)\r\n                                }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                        </div>\r\n                        <div>\r\n                            {formData.items.map(item => {\r\n                                return (\r\n                                    <li className=\"ml-3 lead\" style={{fontSize:14}}>{item.value}</li>\r\n                                )\r\n                            })}\r\n                            {formData.freeTextItems.map(item => {\r\n                                if(item == '') return\r\n                                return (\r\n                                    <li className=\"ml-3 lead\" style={{fontSize:14}}>{item}</li>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 row\" style={{marginTop:25}}>\r\n                    <div className=\"col-12 col-xl-5 mr-auto ml-auto\">\r\n                        <div className=\"border-bottom row pb-1\">\r\n                            <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>{type==='donation' ? 'Pick Up Time' : 'Drop Off Time'}</div>\r\n                                <div onClick={() => {\r\n                                    setStep(3)\r\n                                    setShowModal(false)\r\n                                    }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                                </div>\r\n                            <div>\r\n                            <li className=\"lead\" style={{listStyleType:'none',fontSize:14}}>{formData.dropoff ? `${formData.dropoff.label} (${formData.dropoff.time})` : ''}</li>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-5 col-12 mr-auto ml-auto\">\r\n                        <div className=\"border-bottom row pb-1\">\r\n                            <div className='col-6 mr-0 lead' style={{fontSize:15,fontWeight:'600'}}>Additional Info</div>\r\n                                <div onClick={() => {\r\n                                    setStep(3)\r\n                                    setShowModal(false)\r\n                                    }} className=\"col-6 text-right ml-0 lead hover\" style={{color:'#6f2c8e',fontSize:13,fontWeight:'600'}}>Edit</div>\r\n                                </div>\r\n                            <div>\r\n                            <span className=\"lead\" style={{listStyleType:'none',fontSize:14,border:0}} disabled={true}>{formData.additionalInfo}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mr-auto ml-auto mt-4 text-center\">\r\n                    {!loading && <button onClick={submitRequest} className=\"btn col-12 btn-primary-hover\" type=\"button\">Submit</button>}\r\n                    {loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\">\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </button>}\r\n                    {type==='request' &&<span className=\"text-center mr-auto ml-auto\">Please note our deliveries are contactless, we will leave the item where you specify.</span>}\r\n                    {type==='donation' &&<span className=\"text-center mr-auto ml-auto\">Please note our pickups are contactless, we will pickup the items from where you specify.</span>}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React from 'react'\r\nimport MenuBar from '../MenuBar'\r\nimport {CheckCircle,Circle} from 'react-feather'\r\nimport {dropoff} from '../../data/orders.js'\r\nimport OrderConfirmationModal from './OrderConfirmationModal'\r\n\r\nexport default function OrderDropOffTime(props){\r\n    const {setStep, validateStep3, setFormData, formData, loading, stepThreeIsValid, showModal, setShowModal, submitRequest, type, errors, setErrors} = props\r\n\r\n    return (\r\n        <main>\r\n            <MenuBar {...props} goBackTo={2}/>\r\n            {type==='donation' && <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                <div className=\"text-center\" style={{ marginTop: '7rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                    Just a few more details.\r\n                </div>\r\n                <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                    Now we just need some details for our drivers so they can safely deliver your supplies.\r\n                </div>\r\n            </div>}\r\n\r\n            {type==='request' && <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                <div className=\"text-center\" style={{ marginTop: '7rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                    Just a few more details.\r\n                </div>\r\n                <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                    Now we just need some details for our drivers so they can safely make the delivery.\r\n                </div>\r\n            </div>}\r\n\r\n            <div style={{ marginTop: 50 }} className=\"col-xl-6 col-10 mr-auto ml-auto\">\r\n                <form>\r\n                    <div className=\"form-row\">\r\n                        <span>{type==='donation' ? \"DONATION\" : \"DELIVERY\"} TIME</span>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                {dropoff.map(item => {\r\n                                    return <li key={item.id} onClick={() => setFormData({...formData, dropoff: item})} className=\"list-group-item underline-hover\">{formData.dropoff === item ? <CheckCircle className=\"mr-3 brand\" size={18} /> : <Circle className=\"mr-3 brand\" size={18} />}{item.label} ({item.time})</li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-12 mr-auto ml-auto\">\r\n                            <label>Special Instructions</label>\r\n                            <textarea maxLength=\"500\" style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} onChange={e => setFormData({...formData, additionalInfo: e.target.value})} placeholder=\"Enter any special instructions for our driver, e.g. ring doorbell, leave at front desk, etc..\" value={formData.additionalInfo} className=\"form-control text-black\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"button\" onClick={validateStep3} disabled={stepThreeIsValid()} className=\"btn col-12 mt-4 btn-primary-hover\">Continue</button>\r\n                </form>\r\n            </div>\r\n            <OrderConfirmationModal errors={errors} showModal={showModal} setStep={setStep} setShowModal={setShowModal} formData={formData} type={type} loading={loading} submitRequest={submitRequest}/>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport MenuBar from '../MenuBar'\r\nimport StayNeighborBrand from '../StayNeighborBrand'\r\n\r\nexport default function OrderCompleteLandingPage(props){\r\n    const {type, setStep} = props\r\n    return (\r\n        <main>\r\n            <MenuBar {...props}/>\r\n            <div className=\"col-xl-6 col-11 mr-auto ml-auto\">\r\n                <StayNeighborBrand/>\r\n\r\n                {type==='request' && \r\n                    <React.Fragment>\r\n                        <div className=\"mr-auto ml-auto text-center mt-3\">\r\n                            {type==='request' &&<span className=\"lead\" style={{fontSize:'3rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Help is on the way.</span>}\r\n                        </div>\r\n                        <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                            <span className=\"lead\" style={{fontSize:'1.5rem',color:\"rgba(0, 0, 0, 0.42)\"}}>When your order is assigned to a driver, we will let you know.</span>\r\n                        </div>\r\n                        <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                            <button onClick={() => {\r\n                                props.history.push('/')\r\n                                setStep(1)\r\n                            }} className=\"btn btn-outline-brand btn-lg\">Home</button>\r\n                            <button onClick={() => window.location.replace('https://stayneighbor.com')} className=\"btn btn-lg btn-outline-brand\">Learn More</button>\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n\r\n                {type==='donation' && \r\n                    <React.Fragment>\r\n                        <div className=\"mr-auto ml-auto text-center mt-4\">\r\n                            <span className=\"lead\" style={{fontSize:'4rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Thank you!</span>\r\n                        </div>\r\n                        <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                            <span className=\"lead\" style={{fontSize:'2.0rem',color:\"rgba(0, 0, 0, 0.42)\"}}>Words cannot express our gratitude.</span>\r\n                        </div>\r\n                        <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                            <span className=\"lead\" style={{fontSize:'1.5rem',color:\"rgba(0, 0, 0, 0.42)\"}}>A driver will pickup your order and ensure it reaches someone in need.</span>\r\n                        </div>\r\n                        <div className=\"mr-auto ml-auto text-center mt-2 mb-4\">\r\n                            <button onClick={() => {\r\n                                props.history.push('/')\r\n                                setStep(1)\r\n                            }} className=\"btn btn-outline-brand btn-lg\">Home</button>\r\n                            <button onClick={() => window.location.replace('https://stayneighbor.com')} className=\"btn btn-outline-brand btn-lg\">Learn More</button>\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport MenuBar from '../MenuBar'\r\nimport ItemList from '../ItemList'\r\nimport OrderDropOffTime from '../Order/OrderDropOffTime'\r\nimport { ArrowLeftCircle} from 'react-feather';\r\nimport OrderCompleteLandingPage from '../Order/OrderCompleteLandingPage'\r\n\r\nexport default function RequestModuleHome(props) {\r\n    const {step, loading, formData, errors, showModal} = props.requestContext.state; // provider state values\r\n    const { setShowModal, submitRequest, stepOneIsValid, stepTwoIsValid, stepThreeIsValid, setLoading, setFormData, setStep, validateStep1, validateStep2, validateStep3, setErrors} = props.requestContext; // provider functions\r\n\r\n    if (step == 1) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    {/* <div className=\"col-2\">\r\n                        <Home className=\"mr-auto mt-2\" style={{color:'white'}}/>\r\n                    </div> */}\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: '1.75rem', fontWeight: 'bold' }}>\r\n                        Howdy, Neighbor!\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: '.9rem' }}>\r\n                        Let's get started with some information.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>While we need to share details with our volunteers, we will always keep your data private.</i>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 30 }} className=\"text-center\">\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"15\" required={true} onChange={(e) => {setFormData({...formData, firstName: e.target.value})}} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" value={formData.firstName} className=\"form-control lead\" id=\"inputEmail4\" placeholder=\"First Name\"></input>\r\n                                    {errors.firstName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.firstName.message || errors.firstName.type}</p>}\r\n                                </div>\r\n                                <div  className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"15\" required={true} onChange={(e) => {setFormData({...formData, lastName: e.target.value})}} name='lastName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.lastName} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Last Name\"></input>\r\n                                    {errors.lastName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.lastName.message || errors.lastName.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"12\" required={true} onChange={(e) => {setFormData({...formData, phoneNumber: e.target.value})}} name='phoneNumber' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.phoneNumber} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Phone Number\"></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                                <div  className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"30\" required={true} onChange={(e) => {setFormData({...formData, emailAddress: e.target.value})}} name='emailAddress' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.emailAddress} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Email Address\"></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"75\" required={true} onChange={(e) => {setFormData({...formData, address: e.target.value})}} name='streetAddress' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.address} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Address\"></input>\r\n                                    {errors.address && <p style={{ color: 'red', marginBottom: 0 }}>{errors.address.message || errors.address.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"6\" required={true} name='zipCode' onChange={(e) => {setFormData({...formData, zipcode: e.target.value})}} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" value={formData.zipcode} className=\"form-control\" id=\"inputPassword4\" placeholder=\"Zip Code\"></input>\r\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group mr-auto ml-auto col-xl-4 col-md-8 mr-auto ml-auto text-center\">\r\n                                    <span className=\"text-center\" style={{ fontWeight: 'bolder', fontSize: '2rem' }} type=\"number\" id=\"peopleInHousehold\">{formData.householdNum}</span>\r\n                                    <input required={true} onChange={e => setFormData({...formData, householdNum: e.target.value})} name=\"peopleInHousehold\" name='phoneNumber' type=\"range\" value={formData.householdNum} onChange={(e) => {\r\n                                        document.getElementById('peopleInHousehold').innerText = e.target.value\r\n                                        setFormData({...formData, householdNum: e.target.value})\r\n                                     }} className=\"custom-range\" min=\"1\" max=\"10\" id=\"customRange2\"></input>\r\n                                    <label className='lead'>People in Household</label>\r\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {!loading && <button onClick={validateStep1} type=\"button\" disabled={stepOneIsValid()} className=\"col-xl-8 col-12 mr-auto ml-auto btn mt-4 btn-primary-hover\">Continue</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step == 2) {\r\n        return (\r\n            <main>\r\n                <MenuBar setStep={setStep} goBackTo={1}/>\r\n                <div className=\"col-11 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                        What can we provide?\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                        Please let us know any essential supplies you might need and our dispatchers will take it from here.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>Please, only select things you or your ones NEED.</i>\r\n                    </div>\r\n                </div>\r\n                <ItemList formData={formData} stepTwoIsValid={stepTwoIsValid} setFormData={setFormData} setStep={setStep} validateStep2={validateStep2} setLoading={setLoading} {...props}/>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 3) return <OrderDropOffTime type={'request'} setStep={setStep} validateStep3={validateStep3} setFormData={setFormData} formData={formData} stepThreeIsValid={stepThreeIsValid} showModal={showModal} setShowModal={setShowModal} submitRequest={submitRequest} loading={loading} errors={errors} setErrors={setErrors}/>\r\n\r\n    if(step == 4) return <OrderCompleteLandingPage setStep={setStep} type={'request'}/>\r\n}","import React from 'react'\r\nimport OrderDropOffTime from '../Order/OrderDropOffTime'\r\nimport { ArrowLeftCircle} from 'react-feather'\r\nimport OrderCompleteLandingPage from '../Order/OrderCompleteLandingPage'\r\nimport MenuBar from '../MenuBar'\r\nimport ItemList from '../ItemList'\r\n\r\nexport default function DonationModuleHome(props) {\r\n    const {step, loading, showModal, formData, errors} = props.donationContext.state; // provider state values\r\n    const { stepOneIsValid, stepTwoIsValid, stepThreeIsValid, setLoading, setFormData, setStep, validateStep1, validateStep2, validateStep3, setShowModal, submitDonation, setErrors} = props.donationContext; // provider functions\r\n\r\n    if (step === 1) {\r\n        return (\r\n            <main>\r\n                <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6f2c8e', paddingBottom: 15 }}>\r\n                    <div className=\"col-12 mt-2 mr-auto\">\r\n                        <ArrowLeftCircle color=\"white\" className=\"mr-3 underline-hover\" onClick={() => props.history.push('/')} />\r\n                        <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: '1.75rem', fontWeight: 'bold' }}>\r\n                        Howdy, Neighbor!\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: '.9rem' }}>\r\n                        Let's get started with some information.\r\n                    </div>\r\n                    <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 10 }}>\r\n                        <i>While we need to share details with our volunteers, we will always keep your data private.</i>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 30 }} className=\"text-center\">\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"15\" onChange={(e) => {setFormData({...formData, firstName: e.target.value})}} name='firstName' style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"name\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"First Name\" value={formData.firstName}></input>\r\n                                    {errors.firstName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.firstName.message || errors.firstName.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"15\" name='lastName' onChange={(e) => setFormData({...formData, lastName: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Last Name\" value={formData.lastName}></input>\r\n                                    {errors.lastName && <p style={{ color: 'red', marginBottom: 0 }}>{errors.lastName.message || errors.lastName.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"12\" name='phoneNumber' onChange={(e) => setFormData({...formData, phoneNumber: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Phone Number\" value={formData.phoneNumber}></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"25\" name='emailAddress' onChange={(e) => setFormData({...formData, emailAddress: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Email Address\" value={formData.emailAddress}></input>\r\n                                    {errors.phoneNumber && <p style={{ color: 'red', marginBottom: 0 }}>{errors.phoneNumber.message || errors.phoneNumber.type}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group ml-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"30\" name='streetAddress' onChange={(e) => setFormData({...formData, address: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Street Address\" value={formData.address}></input>\r\n                                    {errors.streetAddress && <p style={{ color: 'red', marginBottom: 0 }}>{errors.streetAddress.message || errors.streetAddress.type}</p>}\r\n                                </div>\r\n                                <div className=\"form-group mr-auto col-xl-4 col-md-6\">\r\n                                    <input maxLength=\"6\" name='zipCode' onChange={(e) => setFormData({...formData, zipcode: e.target.value})} style={{ backgroundColor: \"rgba(158, 69, 183, 0.14)\" }} type=\"text\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Zip Code\" value={formData.zipcode}></input>\r\n                                    {errors.zipCode && <p style={{ color: 'red', marginBottom: 0 }}>{errors.zipCode.message || errors.zipCode.type}</p>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {!loading && <button onClick={() => validateStep1()} disabled={stepOneIsValid()} type=\"button\" style={{ backgroundColor: \"rgb(158, 69, 183)\", color: 'white' }} className=\"col-xl-8 mr-auto btn-primary-hover ml-auto col-12 btn mt-4\">Continue</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    if (step === 2) return (\r\n        <main>\r\n            <MenuBar goBackTo={1}/>\r\n            <div className=\"col-11 mr-auto ml-auto\">\r\n                <div className=\"text-center\" style={{ marginTop: '5rem', color: \"rgb(158, 69, 183)\", fontFamily: 'sans-serif', fontSize: 28, fontWeight: 'bold' }}>\r\n                    What can you donate?\r\n                </div>\r\n                <div className=\"text-center lead\" style={{ marginTop: '.3rem', fontFamily: 'sans-serif', fontSize: 14 }}>\r\n                    Please let us know any supplies you can donate and our dispatchers will take it from here.\r\n                </div>\r\n            </div>\r\n            <ItemList formData={formData} stepTwoIsValid={stepTwoIsValid} setFormData={setFormData} setStep={setStep} validateStep2={validateStep2} setLoading={setLoading} {...props}/>\r\n        </main>\r\n        \r\n    )\r\n\r\n    if (step === 3) return <OrderDropOffTime type={'donation'} setStep={setStep} validateStep3={validateStep3} setFormData={setFormData} formData={formData} stepThreeIsValid={stepThreeIsValid} showModal={showModal} setShowModal={setShowModal} submitRequest={submitDonation} loading={loading} errors={errors} setErrors={setErrors}/>\r\n\r\n    if(step == 4) return <OrderCompleteLandingPage {...props} setStep={setStep} type={'donation'}/>\r\n}","import React from 'react'\r\nimport {ArrowLeftCircle} from 'react-feather'\r\n\r\nexport default function Error(props){\r\n    var { errors } = props.globalContext.state\r\n\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6F2C8E', paddingBottom: 15 }}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                </div>\r\n            </nav>\r\n            <div className=\"col-12 row mr-auto\" style={{marginTop:75}}>\r\n                <div style={{paddingLeft:0,paddingRight:0,width:'20%'}}>\r\n                    {errors.login}\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Loading(){\r\n    return (\r\n        <div className=\"text-center my-4 loading\">\r\n            <h5>Loading...</h5>\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Stitch,RemoteMongoClient,AnonymousCredential,GoogleRedirectCredential, BSON} from 'mongodb-stitch-browser-sdk'\r\n\r\nfunction getAppId(){\r\n    if(process.env.NODE_ENV !== 'development') return 'stayneighbor-bjuma'\r\n    if(process.env.NODE_ENV === 'development') return 'stayneighbor-bjuma'\r\n}\r\n\r\nfunction getDb(){\r\n\r\n    if(process.env.NODE_ENV === 'development') return 'stayneighbor'\r\n    if(process.env.NODE_ENV !== 'development') return 'stayneighbor'\r\n}\r\n\r\nexport function establishMongoDbConnection(){\r\n    //get our default app client\r\n    const client = intializeStitchClient()\r\n\r\n    if(client.errorCode) return {errorCode: '002', errorMessage: client}\r\n\r\n    const mongodb = initalizeStitchServiceClient(client)\r\n\r\n    if(mongodb.errorCode) return {errorCode: '003', errorMessage: mongodb}\r\n    \r\n    return mongodb\r\n}\r\n\r\nexport function initalizeStitchServiceClient(client){\r\n    try{\r\n        return client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db(getDb());\r\n    } catch(err){\r\n        return {errorCode: '002', errorMessage: err}\r\n    }\r\n}\r\n\r\nexport function intializeStitchClient(){\r\n    try {\r\n        //return Stitch.initializeDefaultAppClient('stayneighbor-bjuma');\r\n        return Stitch.initializeDefaultAppClient(getAppId());\r\n    } catch(err){\r\n        return Stitch.defaultAppClient\r\n    }\r\n}\r\n\r\nexport async function anonymousUserLogin(){\r\n    try {\r\n        var client = intializeStitchClient()\r\n        var auth = await client.auth.loginWithCredential(new AnonymousCredential)\r\n        console.log(auth)\r\n    } catch(e) {\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function getOrders(){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"listOrders\", []);\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function putOrder(body){\r\n    try{\r\n        //get our default app client\r\n        const client = intializeStitchClient()\r\n        if(!client.auth.isLoggedIn) await anonymousUserLogin()\r\n\r\n        var result = await client.callFunction(\"createOrder\", [body]);\r\n        logUserOut()\r\n        // if(result && result.status !== '200') return result\r\n        // else return true\r\n        return result\r\n    } catch(e){\r\n        return {errorCode: '002', errorMessage: e.toString()}\r\n    }\r\n}\r\n\r\nexport async function checkUserAuth(){\r\n    try {\r\n        //get our default app client\r\n        const client = intializeStitchClient()\r\n\r\n        if(client.auth.isLoggedIn){\r\n            return true\r\n        } else {\r\n            if(client.auth.hasRedirectResult()){\r\n                var result = await client.auth.handleRedirectResult()\r\n                if(result.isLoggedIn === true) return true\r\n            }\r\n\r\n            const credential = new GoogleRedirectCredential()\r\n            await client.auth.loginWithRedirect(credential)\r\n            return null\r\n        }\r\n    } catch (e){\r\n\r\n    }\r\n}\r\n\r\nexport async function logUserOut(){\r\n    await intializeStitchClient().auth.logout()\r\n    return true\r\n}\r\n\r\nexport async function getUserInfo(){\r\n    var client = intializeStitchClient()\r\n    var db = establishMongoDbConnection()\r\n\r\n    await client.auth.refreshCustomData()\r\n\r\n    var user = await db.collection('user_data').findOne({user_id: client.auth.user.id})\r\n\r\n    if(!user) return false\r\n\r\n    return {...client.auth.currentUser, customData: {...user}}\r\n\r\n    //return intializeStitchClient().auth.currentUser\r\n}\r\n\r\nexport async function getDrivers(){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"getDrivers\", [])\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function assignOrder(orderId, driverEmail){\r\n    const client = intializeStitchClient()\r\n    try {\r\n        var result = await client.callFunction(\"assignOrder\", [orderId.toString(), driverEmail]);\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        console.log(result)\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function updateOrderStatus(orderId, orderStatus){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"updateOrderStatus\", [orderId.toString(), orderStatus]);\r\n        if(result && result.errorCode) return {errorCode: result.errorCode, errorMessage: result.errorMessage}\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\n\r\nexport async function updateOrderFields(order, addressUpdated){\r\n    const client = intializeStitchClient()\r\n\r\n    try {\r\n        var result = await client.callFunction(\"updateOrder\", [order._id.toString(), order, addressUpdated])\r\n        return result\r\n    } catch(e){\r\n        console.log(e)\r\n        return e\r\n    }\r\n}\r\n\r\nexport async function getOrder(orderId){\r\n    try{\r\n        var db = establishMongoDbConnection()\r\n        var user = await db.collection('orders').findOne({_id: orderId})\r\n        return user\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport async function completeOrder(orderId){\r\n    try {\r\n\r\n        const client = intializeStitchClient()\r\n        //Non logged in drivers should be able to complete\r\n        if(!client.auth.isLoggedIn) await anonymousUserLogin()\r\n\r\n        return await client.callFunction(\"completeOrder\", [orderId.toString()]);\r\n\r\n    } catch(e){\r\n        console.log(e);\r\n        return e\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport Loading from '../Loading'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {ArrowLeftCircle} from 'react-feather';\r\nimport {completeOrder} from '../../lib/StitchFunctions';\r\nimport StayNeighborBrand from '../StayNeighborBrand'\r\nimport './OrderComplete.scss';\r\n\r\nconst OrderComplete = props => {\r\n    let history = useHistory();\r\n    const [orderUpdateStatus, setOrderUpdateStatus] = useState(null)\r\n    const orderId = history.location.pathname.split('/').pop();\r\n\r\n    useEffect(() => {\r\n        if(orderUpdateStatus === null && orderId != '') orderCompletion(orderId)\r\n    },[orderUpdateStatus])\r\n\r\n    const orderCompletion = async () => {\r\n        let res = await completeOrder(orderId);\r\n        setOrderUpdateStatus(res)\r\n    }\r\n\r\n    if(orderUpdateStatus === null && (orderId !== '' && orderId != 'complete')) return <Loading/>\r\n\r\n    return (\r\n        <main className='order-complete'>\r\n            <nav className=\"navbar fixed-top col-12\" style={{backgroundColor: '#6F2C8E', paddingBottom: 15}}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')}/>\r\n                    <span style={{fontSize: 18, color: 'white'}} href=\"#\">StayNeighbor</span>\r\n                </div>\r\n            </nav>\r\n\r\n            <StayNeighborBrand/>\r\n\r\n            {orderId === '' || orderId === 'complete' ? \r\n                <div className=\"col-10 mr-auto ml-auto mt-4\" >\r\n                    <div className='col-12 text-center'>\r\n                        <span className='lead text-center mr-auto ml-auto' style={{fontSize:'1.75rem'}}><b>Sorry, we were unable to find this order.</b></span>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n\r\n            {orderUpdateStatus && orderUpdateStatus.status === '200' ? \r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div style={{marginTop: 100}}>\r\n                        <div className='col-12'>\r\n                            <h1 style={{marginBottom: 90}}><b>Order</b> #{orderId}</h1>\r\n                            <div className='row'>\r\n                                <div className='col-6'>\r\n                                    <p><label>Status</label>: <b>{orderUpdateStatus.status}</b></p>\r\n                                    <p><label>Message</label>: <b>{orderUpdateStatus.message}</b></p>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n\r\n            {orderUpdateStatus && orderUpdateStatus.status === '400' ? \r\n                <div className=\"col-10 mr-auto ml-auto\">\r\n                    <div style={{marginTop: 100}}>\r\n                        <div className='col-12'>\r\n                            <h1 style={{marginBottom: 90}}><b>Order</b> #{orderId}</h1>\r\n                            <div className='row'>\r\n                                <div className='col-6'>\r\n                                    <p><label>Status</label>: <b>{orderUpdateStatus.status}</b></p>\r\n                                    <p><label>Message</label>: <b>{orderUpdateStatus.message}</b></p>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default OrderComplete;","import React from 'react'\r\nimport {Modal,Button,Spinner} from 'react-bootstrap'\r\nimport {X} from 'react-feather'\r\n\r\nexport default function ConfirmChangesModal(props){\r\n    const { loading, showConfirmModal, orderChanges, selectedOrder } = props.dispatchContext.state\r\n    const { setShowConfirmModal, updateOrder } = props.dispatchContext\r\n\r\n    return (\r\n        <Modal style={{paddingTop:75}} size='lg' show={showConfirmModal} onHide={() => {}}>\r\n            <Modal.Body style={{borderTop:'10px solid #6f2c8e'}}>\r\n                <div className=\"form-row border-bottom col-12 mr-auto ml-auto\">\r\n                        <span className=\"mr-auto ml-auto\" style={{fontSize:20,fontWeight:600,color:\"#6f2c8e\",letterSpacing:'.025rem'}}>Please confirm your changes.</span>\r\n                        <span onClick={() => setShowConfirmModal(false)} className=\"float-right mt-2\"><X className=\"hover\"/></span>\r\n                </div>\r\n                <div className=\"col-12 row\">\r\n                    <div className=\"col-12\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <th>Field</th>\r\n                                <th>Original</th>\r\n                                <th>Updated</th>\r\n                            </thead>\r\n                            <tbody>\r\n                            {Object.keys(orderChanges).map((change) => {\r\n                                if(change === 'enabled') return\r\n                                var originalValue = selectedOrder[change]\r\n                                var updatedValue = orderChanges[change]\r\n\r\n                                if(change === 'driver') {\r\n                                    if(!selectedOrder[change]) originalValue = ''\r\n                                    else originalValue = selectedOrder[change].name\r\n                                    updatedValue = orderChanges[change].name\r\n                                }\r\n\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{change.charAt(0).toUpperCase()}{change.slice(1)}</td>\r\n                                        <td>{originalValue}</td>\r\n                                        <td>{updatedValue}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                    </div>\r\n                    <div className=\"col-5 mr-auto ml-auto\"></div>\r\n                </div>\r\n                <div className=\"col-12 mr-auto ml-auto mt-4 text-center\">\r\n                    {!loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\" onClick={updateOrder}>Submit</button>}\r\n                    {loading && <button className=\"btn col-12 btn-primary-hover\" type=\"button\">\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </button>}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 12px;\r\n  height: 12px;\r\n  background-color: ${props => (props.type === 'REQUEST') ? '#3498e1' : '#3fb94c'};\r\n  border-radius: ${props => (props.type === 'REQUEST') ? '10%' : '50%'};\r\n  user-select: none;\r\n  cursor: ${props => (props.onClick ? 'pointer' : 'default')};\r\n  &:hover {\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst Marker = props => (\r\n  <Wrapper\r\n    alt={props.text}\r\n    type={props.text}\r\n    {...props.onClick ? { onClick: props.onClick } : {}}\r\n  />\r\n);\r\n\r\nMarker.defaultProps = {\r\n  onClick: null,\r\n};\r\n\r\nMarker.propTypes = {\r\n  onClick: PropTypes.func,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Marker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst Wrapper = styled.main`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst GoogleMap = ({ children, ...props }) => (\r\n  <Wrapper>\r\n    <GoogleMapReact\r\n      bootstrapURLKeys={{\r\n        key: \"AIzaSyD1t2vfHVpI_2dw0uqllA4lR5Q2Kjw9wdY\",\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </GoogleMapReact>\r\n  </Wrapper>\r\n);\r\n\r\nGoogleMap.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.arrayOf(PropTypes.node),\r\n  ]),\r\n};\r\n\r\nGoogleMap.defaultProps = {\r\n  children: null,\r\n};\r\n\r\nexport default GoogleMap;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { isEmpty } from 'lodash';\r\nimport Marker from './Marker'\r\n\r\n// examples:\r\nimport GoogleMap from './GoogleMap';\r\n\r\n// consts: [34.0522, -118.2437]\r\nvar last = null\r\nvar selected = false\r\nvar records = ''\r\n// var records = [\r\n//   {\r\n//     name: \"Home\",\r\n//     types: ['Request'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.23,\r\n//         lng: -77.94\r\n//       }\r\n//     },\r\n//     address: '2131 S 17th Street'\r\n//   },\r\n//   {\r\n//     name: \"Home1\",\r\n//     types: ['Donation'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.148562,\r\n//         lng: -77.935982\r\n//       }\r\n//     }\r\n//   },\r\n//   {\r\n//     name: \"Home2\",\r\n//     types: ['Request'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.206362,\r\n//         lng: -77.922413\r\n//       }\r\n//     }\r\n//   }\r\n// ]\r\n\r\nconst getInfoWindowString = place => `\r\n    <div>\r\n      <div style=\"font-size: 16px;\">\r\n        ${place.status}\r\n      </div>\r\n      <div style=\"font-size: 14px; color: grey;\">\r\n        ${place.type}\r\n      </div>\r\n    </div>`\r\n\r\n\r\n\r\n\r\n// Refer to https://github.com/google-map-react/google-map-react#use-google-maps-api\r\n// const handleApiLoaded = (map, maps, places, props, updateSelectedMarker, selectedMarker) => {\r\n//   this.setState({gMap: map, gMaps: maps})\r\n//   return\r\n\r\n\r\n// const markers = [{}];\r\n// const infowindows = [];\r\n\r\n// var places = [\r\n//   {\r\n//     name: \"Home\",\r\n//     types: ['Request'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.23,\r\n//         lng: -77.94\r\n//       }\r\n//     },\r\n//     address: '2131 S 17th Street'\r\n//   },\r\n//   {\r\n//     name: \"Home1\",\r\n//     types: ['Donation'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.148562,\r\n//         lng: -77.935982\r\n//       }\r\n//     }\r\n//   },\r\n//   {\r\n//     name: \"Home2\",\r\n//     types: ['Request'],\r\n//     geometry: {\r\n//       location: {\r\n//         lat: 34.206362,\r\n//         lng: -77.922413\r\n//       }\r\n//     }\r\n//   }\r\n// ]\r\n\r\n// for using a custom image as a marker\r\n// var image = {\r\n//   url: 'https://cdn4.iconfinder.com/data/icons/contact-us-19/48/35-512.png',\r\n//   scaledSize: new maps.Size(25, 25),\r\n// }\r\n\r\n// places.forEach((place) => {\r\n//   markers.push(new maps.Marker({\r\n//     position: {\r\n//       lat: Number(place.geometry.lat),\r\n//       lng: Number(place.geometry.long),\r\n//     },\r\n//     map,\r\n//     data: place,\r\n//     // icon: image,\r\n//     icon: place.type === 'REQUEST' ? {\r\n//       path: maps.SymbolPath.BACKWARD_CLOSED_ARROW,\r\n//       strokeColor: 'red',\r\n//       scale: 5\r\n//     } : {\r\n//         path: maps.SymbolPath.FORWARD_CLOSED_ARROW,\r\n//         strokeColor: 'blue',\r\n//         scale: 5\r\n//       },\r\n//   }));\r\n\r\n//   infowindows.push(new maps.InfoWindow({\r\n//     content: getInfoWindowString(place),\r\n//   }));\r\n// });\r\n\r\n// markers.slice(1).forEach((marker, i) => {\r\n//   marker.addListener('click', () => {\r\n//     infowindows[i].open(map, marker)\r\n//     props.setSelectedOrder(marker.data)\r\n//     if (last) last.close()\r\n//     last = infowindows[i]\r\n//   })\r\n// });\r\n// console.log(markers)\r\n// records = markers.slice(1)\r\n//};\r\n\r\nclass MarkerInfoWindowGmapsObj extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      places: [],\r\n      selectedMarker: false,\r\n      gMap: false,\r\n      gMaps: false\r\n    };\r\n  }\r\n\r\n  updateSelectedMarker(item) {\r\n    //this.setState({selectedMarker: item})\r\n  }\r\n\r\n  handleApiLoaded = (map, maps, places, props, updateSelectedMarker, selectedMarker) => {\r\n    console.log(map)\r\n    this.setState({ gMap: map, gMaps: maps })\r\n    return\r\n  }\r\n\r\n  getPlaces(places, props) {\r\n    const markers = [{}];\r\n    const infowindows = [];\r\n    var gMaps = this.state.gMaps\r\n    var gMap = this.state.gMap\r\n\r\n    places.forEach((place) => {\r\n      markers.push(new gMaps.Marker({\r\n        position: {\r\n          lat: Number(place.geometry.lat),\r\n          lng: Number(place.geometry.long),\r\n        },\r\n        gMap,\r\n        data: place,\r\n        // icon: image,\r\n        icon: place.type === 'REQUEST' ? {\r\n          path: gMaps.SymbolPath.BACKWARD_CLOSED_ARROW,\r\n          strokeColor: 'red',\r\n          scale: 5\r\n        } : {\r\n            path: gMaps.SymbolPath.FORWARD_CLOSED_ARROW,\r\n            strokeColor: 'blue',\r\n            scale: 5\r\n          },\r\n      }));\r\n\r\n      infowindows.push(new gMaps.InfoWindow({\r\n        content: getInfoWindowString(place),\r\n      }));\r\n    });\r\n\r\n    markers.slice(1).forEach((marker, i) => {\r\n      marker.addListener('click', () => {\r\n        infowindows[i].open(gMap, marker)\r\n        props.setSelectedOrder(marker.data)\r\n        if (last) last.close()\r\n        last = infowindows[i]\r\n      })\r\n    });\r\n\r\n    console.log(markers)\r\n    return markers.slice(1)\r\n  }\r\n\r\n  render() {\r\n    if (this.props.selectedOrder && this.props.selectedOrder != this.state.selectedMarker) this.setState({ selectedMarker: this.props.selectedOrder })\r\n    const defaultCenter = { lat: 34.23, lng: -77.94 };\r\n    const coordinates = this.props.selectedOrder ? { lat: Number(this.props.selectedOrder.geometry.lat), lng: Number(this.props.selectedOrder.geometry.long) } : defaultCenter;\r\n    return (\r\n      <div style={{ height: '90vh', width: '100%' }}>\r\n        <GoogleMap\r\n          defaultZoom={12}\r\n          center={coordinates}\r\n          bootstrapURLKeys={{ key: \"AIzaSyD1t2vfHVpI_2dw0uqllA4lR5Q2Kjw9wdY\" }}\r\n          yesIWantToUseGoogleMapApiInternals\r\n          onGoogleApiLoaded={({ map, maps }) => this.handleApiLoaded(map, maps, this.props.orders, this.props)}\r\n        >\r\n          {this.props.orders.map((order, index) => {\r\n            return (\r\n              <Marker\r\n                key={index}\r\n                text={order.type}\r\n                lat={Number(order.geometry.lat)}\r\n                lng={Number(order.geometry.long)}\r\n                onClick={() => this.props.setSelectedOrder(order)}\r\n              />\r\n            )\r\n          })}\r\n        </GoogleMap>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default MarkerInfoWindowGmapsObj;\r\n","import React, {useEffect} from 'react'\r\nimport Loading from '../Loading'\r\nimport ConfirmChangesModal from './ConfirmChangesModal'\r\nimport MarkerInfoWindowGmapsObj from '../GoogleMaps/MarkerInfoWindowGmapsObj'\r\nimport { ArrowLeftCircle , LogOut , X , User , RefreshCw, Edit, Circle, PlayCircle, CheckCircle, XCircle, AlertCircle } from 'react-feather'\r\nimport {logUserOut} from '../../lib/StitchFunctions'\r\nimport {Spinner} from 'react-bootstrap'\r\nimport {toast} from 'react-toastify'\r\nimport {differenceInHours, differenceInDays, differenceInMinutes} from 'date-fns'\r\n\r\nexport default function DispatchModuleHome(props){\r\n    const { orders, selectedOrder, typeFilter, statusFilter, orderChanges, drivers, loading, showConfirmModal } = props.dispatchContext.state\r\n    const { getOrdersForDispatcher, setSelectedOrder, setTypeFilter, setStatusFilter, setOrderChanges, getDriversForDispatcher, setFormValue, updateOrder, setShowConfirmModal } = props.dispatchContext\r\n    var { isAuthenticated, user, errors } = props.globalContext.state\r\n    var { checkAuthStatus, getUser, setIsAuthenticated } = props.globalContext\r\n    var filteredOrders = []\r\n\r\n    useEffect(() => {\r\n        checkAuthStatus()\r\n        if(isAuthenticated && !user) getUser()\r\n        if(isAuthenticated && user && !orders) getOrdersForDispatcher()\r\n        if(isAuthenticated && user && orders && !drivers) getDriversForDispatcher()\r\n    }, [isAuthenticated, user, orders, drivers])\r\n\r\n    if(!user || !orders || !drivers) return <Loading/>\r\n\r\n    function applyFilters(orders){\r\n        if(typeFilter) orders = orders.filter(a => a.type === typeFilter)\r\n        if(statusFilter) orders = orders.filter(a => a.status === statusFilter)\r\n        return orders\r\n    }\r\n\r\n    function deriveDriverName(driver){\r\n        if(!selectedOrder){\r\n            if(driver.name === '') return true\r\n        }\r\n\r\n        if(selectedOrder && selectedOrder.assignedToDriver === driver.email){\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    function timeSince(date){\r\n        var hoursSince = differenceInHours(new Date(), new Date(date))\r\n        if(hoursSince < 1) return `${differenceInMinutes(new Date(), new Date(date))} minutes ago`\r\n        if(hoursSince > 24) return `${differenceInDays(new Date(), new Date(date))} days ago`\r\n        return `${hoursSince} hours ago`\r\n    }\r\n\r\n    if(orders) filteredOrders = applyFilters(orders)\r\n\r\n    return (\r\n        <main>\r\n            <nav className=\"navbar fixed-top col-12\" style={{ backgroundColor: '#6F2C8E', paddingBottom: 15 }}>\r\n                <div className=\"col-12 mt-2 mr-auto\">\r\n                    <ArrowLeftCircle color=\"white\" className=\"mr-3 hover\" onClick={() => props.history.push('/')} />\r\n                    <span style={{ fontSize: 18, color: 'white' }} href=\"#\">StayNeighbor</span>\r\n                    {isAuthenticated === true && user ? <span title=\"Log Out\" className=\"ml-auto float-right text-white\">Welcome {user.profile.data.name}!  <LogOut onClick={() => {\r\n                        logUserOut()\r\n                        setIsAuthenticated(false)\r\n                        props.history.push('/')\r\n                        toast(\"You have been logged out!\")\r\n                    }} className=\"hover ml-2\"/></span> : ''}\r\n                </div>\r\n            </nav>\r\n\r\n            {isAuthenticated && user && orders ? \r\n                <div className=\"col-12 d-flex pl-0 flex-wrap\" style={{marginTop:60,maxHeight:'50vh'}}>\r\n                    <div className=\"col-12 col-md-4 col-xl-3\" style={{paddingLeft:20,paddingRight:20}}>\r\n                        <div className={{width:'100%'}}>\r\n                            <div className=\"form-row border-bottom\" style={{paddingBottom:5}}>\r\n                                <span className=\"pb-0 lead pt-1 pb-1\">Order Filters</span>\r\n                            </div>\r\n                            <div>\r\n                                <label style={{width:'100%',fontSize:'.9rem'}} className=\"mb-0 pb-0 ml-2 lead\">Type</label>\r\n                                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button onClick={() => setTypeFilter(typeFilter === 'REQUEST' ? '' : 'REQUEST')} type=\"button\" class={`${typeFilter === 'REQUEST' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Requests</button>\r\n                                    <button onClick={() => setTypeFilter(typeFilter === 'DONATION' ? '' : 'DONATION')} type=\"button\" class={`${typeFilter === 'DONATION' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}>Donations</button>\r\n                                    <X onClick={() => setTypeFilter(false)} style={{marginTop:'.40rem',color:\"grey\"}} className=\"hover ml-1\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <label style={{width:'100%',fontSize:'.9rem'}} className=\"mb-0 pb-0 ml-2 lead\">Status</label>\r\n                                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button onClick={() => setStatusFilter(statusFilter === 'PENDING' ? '' : 'PENDING')} type=\"button\" class={`${statusFilter === 'PENDING' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><Circle/></button>\r\n                                    <button onClick={() => setStatusFilter(statusFilter === 'IN PROGRESS' ? '' : 'IN PROGRESS')} class={`${statusFilter === 'IN PROGRESS' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><PlayCircle/></button>\r\n                                    <button onClick={() => setStatusFilter(statusFilter === 'COMPLETED' ? '' : 'COMPLETED')} class={`${statusFilter === 'COMPLETED' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><CheckCircle/></button>\r\n                                    <button onClick={() => setStatusFilter(statusFilter === 'CANCELLED' ? '' : 'CANCELLED')} class={`${statusFilter === 'CANCELLED' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><XCircle/></button>\r\n                                    <button onClick={() => setStatusFilter(statusFilter === 'ERROR/ACTION' ? '' : 'ERROR/ACTION')} class={`${statusFilter === 'ERROR/ACTION' ? 'btn-active-brand' : ''} btn btn-sm btn-outline-brand mr-0`} style={{fontSize:'.8rem'}}><AlertCircle/></button>\r\n                                    <X onClick={() => setStatusFilter(false)} style={{marginTop:'.40rem',color:\"grey\"}} className=\"hover ml-1\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row border-bottom\" style={{paddingBottom:5}}>\r\n                                <span className=\"pb-0 lead pt-1 pb-1\">Order List</span>\r\n                                <RefreshCw onClick={() => getOrdersForDispatcher(true)} className=\"hover brand\" style={{marginTop:'.40rem',marginLeft:'1rem'}}/>\r\n                            </div>\r\n                            <div style={{maxHeight:'60vh',overflowY:'auto'}} className=\"mt-2\">\r\n                                {orders && filteredOrders.length > 0 && filteredOrders.map(order => {\r\n                                    return (\r\n                                        <li style={{fontSize:12,paddingRight:0,paddingBottom:'.25rem'}} class={`d-flex list-group-item order-list text-center pl-0 pr-0 pt-2 pb-1 ${selectedOrder._id ? order._id.toString() == selectedOrder._id.toString() ? 'active-order': \"\" : ''}`} onClick={() => {\r\n                                            setSelectedOrder(order)\r\n                                            setOrderChanges(false)\r\n                                        }}>\r\n                                            <span className={order.type === \"REQUEST\" ? 'request-type ml-1 mr-1' : 'donation-type  ml-1 mr-1'}>{order.type.charAt(0).toUpperCase()}</span>\r\n                                            <span className=\"ml-2 mt-2 text-left\" style={{width:'33%'}}>{order.status}</span>\r\n                                            <span className=\"ml-2 mt-2 text-left\" style={{width:'33%'}}>{order.firstName} {order.lastName}</span>\r\n                                            <span className=\"ml-2 mt-2 text-left\" style={{width:'33%'}}>{timeSince(order.dateCreated)}</span>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                                {orders && filteredOrders.length === 0 ? \r\n                                    <span className=\"col-10 mr-auto ml-auto lead\">No orders found.</span>\r\n                                : ''}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{paddingTop:20}} className={selectedOrder ? 'col-xl-6 col-md-6' : 'col-xl-9 col-md-8'}>\r\n                        <MarkerInfoWindowGmapsObj setSelectedOrder={setSelectedOrder} orders={filteredOrders} selectedOrder={selectedOrder}/>\r\n                    </div>\r\n                    \r\n                    {selectedOrder ? \r\n                        <div className=\"col-12 col-sm-12 col-xl-3 col-md-2\" style={{fontSize:12,paddingLeft:0,paddingRight:0}}>\r\n                            <form className=\"col-12\">\r\n                                <div className=\"form-row border-bottom d-flex flex-nowrap\" style={{paddingBottom:5}}>\r\n                                    <span className=\"pb-0 lead pt-1 pb-1\">{selectedOrder.type.charAt(0)}{selectedOrder.type.slice(1).toLowerCase()} Details</span>\r\n                                    <span className=\"ml-auto mt-2\"><X className=\"hover\" onClick={() => {\r\n                                        setSelectedOrder(false)\r\n                                        setOrderChanges(false)\r\n                                    }}/></span>\r\n                                </div>\r\n                                <div className=\"form-row row pr-0 pl-0\" style={{paddingTop:10}}>\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-1 mt-1\">\r\n                                        <label className=\"lead mb-0\" style={{fontSize:'.9rem'}}><b>Type</b></label>\r\n                                        <span style={{display:'block',fontSize:'.9rem'}} className={selectedOrder.type === \"REQUEST\" ? 'request-type-details lead' : 'donation-type-details lead'}>{selectedOrder.type}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-xl-6\">\r\n                                        <label for=\"exampleInputEmail1\" className=\"lead mb-0\" style={{fontSize:'.9rem'}}><b>Name</b></label>\r\n                                        <span className=\"lead\" type=\"email\" style={{display:'block',fontWeight:400}} aria-describedby=\"emailHelp\">{selectedOrder.firstName} {selectedOrder.lastName}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} or=\"exampleInputEmail1\"><b>Assigned To</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={(e) => setOrderChanges({...orderChanges, driver: e.target.value == '' ? '' : JSON.parse(e.target.value)})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select lead' : 'custom-select no-border lead'} style={{display:'block',fontSize:14}} >{drivers && [{name: ''}, ...drivers].map(driver => {\r\n                                                return <option value={driver.email === '' ? '' : JSON.stringify(driver)} selected={deriveDriverName(driver)}>{driver.name}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{drivers.find(a => a.email == setFormValue('assignedToDriver')) ? drivers.find(a => a.email == setFormValue('assignedToDriver')).name : ''}</span>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Status</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={e => setOrderChanges({...orderChanges, status: e.target.value})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select lead ' : 'custom-select no-border lead'} style={{display:'block',fontSize:'1rem'}} >{['PENDING','IN PROGRESS','COMPLETED','CANCELLED','ERROR/ACTION'].map(status => {\r\n                                                return <option selected={setFormValue('status') === status ? true : false}>{status}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{setFormValue('status')}</span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Address</b></label>\r\n                                        <input onChange={e => setOrderChanges({...orderChanges, address: e.target.value})} className={orderChanges.enabled ? 'lead form-control' : 'lead form-control no-border'} disabled={orderChanges.enabled ? false : true} style={{display:'inline',fontWeight:600,width:200,wordWrap:'break-word'}} value={setFormValue('address')}></input>\r\n                                    </div>\r\n                                    <div className='lead' className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className=\"lead label-half text-secondary\" style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Zip Code</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={e => setOrderChanges({...orderChanges, zipcode: e.target.value})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select lead' : 'custom-select no-border lead'} style={{fontWeight:600,color:'black'}} >{user.customData.zipcodes.sort().map(zipcode => {\r\n                                                return <option selected={setFormValue('zipcode') === zipcode ? true : false}>{zipcode}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{setFormValue('zipcode')}</span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>{selectedOrder.type === 'DONATION' ? 'Pickup Time' : 'Delivery Time'}</b></label>\r\n                                        {orderChanges.enabled ? \r\n                                            <select onChange={e => setOrderChanges({...orderChanges, time: e.target.value})} disabled={orderChanges.enabled ? false : true} className={orderChanges.enabled ? 'custom-select text-dark lead' : 'custom-select no-border text-dark lead'} style={{display:'block',fontSize:'1rem'}} >{['morning', 'afternoon', 'evening'].map(time => {\r\n                                                return <option selected={setFormValue('time') === time ? true : false}>{time.charAt(0).toUpperCase()}{time.slice(1)}</option>\r\n                                            })}</select>\r\n                                        : \r\n                                            <span style={{display:'block',fontWeight:600,fontSize:'1rem'}} className={'lead'}>{setFormValue('time').charAt(0).toUpperCase()}{setFormValue('time').slice(1)}</span>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Phone Number</b></label>\r\n                                        <input onChange={e => setOrderChanges({...orderChanges, phoneNumber: e.target.value})} className={orderChanges.enabled ? 'form-control text-dark' : 'form-control no-border text-dark'} type=\"text\" disabled={orderChanges.enabled ? false : true} style={{fontWeight:600,display:'block'}} aria-describedby=\"emailHelp\" value={setFormValue('phoneNumber')}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 col-xl-6 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Date Created</b></label>\r\n                                        <input type=\"text\" className={orderChanges.enabled ? 'form-control text-dark' : 'form-control no-border text-dark'} disabled={true} style={{fontWeight:600,display:'block'}} aria-describedby=\"emailHelp\" defaultValue={`${new Date(selectedOrder.dateCreated).toLocaleDateString()} ${new Date(selectedOrder.dateCreated).toLocaleTimeString()}`}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-12 mb-0\">\r\n                                        <label className='lead label-half text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Items</b></label>\r\n                                        <ul class=\"list-group flex-md-row flex-wrap ml-3\">\r\n                                            {selectedOrder.items.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index} className=\"context-list lead\" style={{width:'50%',fontWeight:600,fontSize:'1rem'}}>{item.name}</li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row mt-2\">\r\n                                    <div className=\"form-group col-12\">\r\n                                        <label className='lead text-secondary' style={{fontSize:'.9rem'}} for=\"exampleInputEmail1\"><b>Additional Info</b></label>\r\n                                        <textarea onChange={e => setOrderChanges({...orderChanges, additionalInfo: e.target.value})} className={orderChanges.enabled ? 'form-control' : 'form-control no-border'} type=\"text\" disabled={orderChanges.enabled ? false : true} style={{fontWeight:600,display:'block',fontSize:'.9rem',width:'100%'}} aria-describedby=\"emailHelp\" value={selectedOrder.additionalInfo}></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row pl-0\">\r\n                                    <div className=\"form-group col-12\">\r\n                                        {orderChanges.enabled && Object.keys(orderChanges).length > 1 && !loading && <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\" onClick={() => setShowConfirmModal(true)}>Save Order</button>}\r\n                                        {orderChanges.enabled && loading &&  \r\n                                            <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\">\r\n                                                <Spinner animation=\"border\" role=\"status\">\r\n                                                    <span className=\"sr-only\">Loading...</span>\r\n                                                </Spinner>\r\n                                            </button>\r\n                                        }\r\n                                        {orderChanges.enabled && <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\" onClick={() => setOrderChanges(false)}>Cancel</button>}\r\n                                        {!orderChanges.enabled && <button type=\"button\" className=\"btn btn-outline-brand col-12 ml-0 mr-0\" onClick={() => setOrderChanges({enabled: true})}>Edit Order</button>}\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    : ''}\r\n                </div>\r\n            : ''}\r\n\r\n            {showConfirmModal ? \r\n                <ConfirmChangesModal {...props}/>\r\n            : ''}\r\n\r\n            {!isAuthenticated ? \r\n                <div className=\"text-center mr-auto ml-auto\" style={{marginTop:'15rem',width:'20%'}}>\r\n                    <div>\r\n                        <span className=\"h5\">Select a login partner...</span>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n\r\n            {errors.login ? \r\n                <div className=\"text-center mr-auto ml-auto\" style={{marginTop:'15rem',width:'20%'}}>\r\n                    <div>\r\n                        <span className=\"h5\">{errors.login}</span>\r\n                    </div>\r\n                </div>\r\n            : ''}\r\n        </main>\r\n    )\r\n}","import React from 'react';\r\n\r\nconst GlobalStateContext = React.createContext();\r\n\r\nexport default GlobalStateContext; ","import React from 'react';\r\n\r\nconst RequestContext = React.createContext();\r\n\r\nexport default RequestContext; ","import React from 'react';\r\n\r\nconst DonationContext = React.createContext();\r\n\r\nexport default DonationContext; ","import React from 'react';\r\n\r\nconst DispatchContext = React.createContext();\r\n\r\nexport default DispatchContext; ","import React from 'react';\r\nimport {BrowserRouter,Route,Redirect,Switch} from 'react-router-dom'\r\nimport {ToastContainer} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Home from './components/Home'\r\nimport RequestModule from './components/RequestModule/RequestModuleHome'\r\nimport DonationModule from './components/DonationModule/DonationModuleHome'\r\nimport Error from './components/Error'\r\nimport OrderComplete from './components/Order/OrderComplete';\r\nimport './css/App.css';\r\nimport './css/bootstrap.min.css'\r\nimport DispatchModuleHome from './components/DispatchModule/DispatchModuleHome';\r\nimport GlobalStateContext from './contexts/Global/GlobalStateContext';\r\nimport RequestContext from './contexts/RequestModule/RequestContext';\r\nimport DonationContext from './contexts/DonationModule/DonationContext';\r\nimport DispatchContext from './contexts/DispatcherModule/DispatchContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalStateContext.Consumer>\r\n      {globalContext => (\r\n        <BrowserRouter>\r\n        <ToastContainer\r\n            autoClose={5000}\r\n            newestOnTop\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnVisibilityChange\r\n            draggable\r\n            pauseOnHover\r\n            className='toast-container'\r\n            toastClassName=\"toastify-brand\"\r\n            progressClassName=\"toastify-progress-bar\"\r\n        />\r\n\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={(props) => <Home globalContext={globalContext} {...props}/>}/>\r\n          <Route exact={true} path=\"/request\" render={(props) => <RequestContext.Consumer>{requestContext => (<RequestModule globalContext={globalContext} requestContext={requestContext} {...props}/>)}</RequestContext.Consumer>}/>\r\n          <Route exact={true} path=\"/donate\" render={(props) => <DonationContext.Consumer>{donationContext => (<DonationModule globalContext={globalContext} donationContext={donationContext} {...props}/>)}</DonationContext.Consumer>}/>\r\n          <Route exact={true} path=\"/dispatcher\" render={(props) => <DispatchContext.Consumer>{dispatchContext => (<DispatchModuleHome globalContext={globalContext} dispatchContext={dispatchContext} {...props}/>)}</DispatchContext.Consumer>}/>\r\n          <Route exact={true} path=\"/error\" render={(props) => <DispatchContext.Consumer>{dispatchContext => (<Error globalContext={globalContext} dispatchContext={dispatchContext} {...props}/>)}</DispatchContext.Consumer>}/>\r\n          <Route exact path='/order/complete/:uuid?' render={props => <OrderComplete globalContext={globalContext}/>}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      )}\r\n    </GlobalStateContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// All things that should be accessed in a global setting will live here\r\nimport React, {useState} from 'react';\r\nimport GlobalStateContext from './GlobalStateContext';\r\nimport {checkUserAuth,getUserInfo} from '../../lib/StitchFunctions'\r\n\r\nconst GlobalStateProvider = props => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n    const [errors, setErrors] = useState({});\r\n    const [user, setUser] = useState(null);\r\n\r\n    const checkAuthStatus = async () =>{\r\n        const prom = await checkUserAuth()\r\n        setIsAuthenticated(prom)\r\n    }\r\n\r\n    const getUser = async () => {\r\n     //example of calling a stich function inside here\r\n        const prom = await getUserInfo()\r\n        if(!prom) setErrors({...errors, login: 'We had trouble logging you in, please try again later.'})\r\n        else setUser(prom);\r\n    }\r\n    \r\n    return (\r\n        <GlobalStateContext.Provider // this is where we expose state values and functions to the rest of the application\r\n            value={{\r\n                state: { // for organization reasons I like keep all state values inside a state object\r\n                    isAuthenticated: isAuthenticated,\r\n                    errors: errors,\r\n                    user: user\r\n                },\r\n                setErrors: (errs) => setErrors(errs),\r\n                setIsAuthenticated: (bool) => setIsAuthenticated(bool), // expose only the functions that are necessary\r\n                checkAuthStatus: () => checkAuthStatus(),\r\n                getUser: () => getUser()\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalStateContext.Provider>\r\n    )\r\n};\r\n\r\nexport default GlobalStateProvider;","import React, {useState} from 'react';\r\nimport DonationContext from './DonationContext';\r\nimport { toast } from 'react-toastify';\r\nimport { putOrder } from '../../lib/StitchFunctions';\r\n\r\nconst DonationProvider = props => {\r\n    const [step, setStep] = useState(1);\r\n    const [errors, setErrors] = useState({})\r\n    const [loading, setLoading] = useState(false);\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [formData, setFormData] = useState({ \r\n        firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], dropoff: null, freeTextItems: [''] });\r\n\r\n\r\n    const stepOneIsValid = () => {\r\n        if(!formData.firstName) return true\r\n        if(!formData.lastName) return true\r\n        if(!formData.phoneNumber || !formData.phoneNumber.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/g)) return true\r\n        if(!formData.emailAddress) return true\r\n        if(!formData.address) return true\r\n        if(!formData.zipcode) return true\r\n        return false\r\n    }\r\n\r\n    const stepTwoIsValid = () => {\r\n        if(!formData.items || (formData.items && formData.items.length === 0)) return true\r\n        return false\r\n    }\r\n\r\n    const stepThreeIsValid = () => {\r\n        if(!formData.dropoff) return true\r\n        return false\r\n    }\r\n\r\n    const validateStep1 = () => {\r\n        // todo handle address validation logic\r\n        setStep(2)\r\n    };\r\n\r\n    const validateStep2 = () => {\r\n        // todo handle requested item validation\r\n        setStep(3);\r\n    };\r\n\r\n    const validateStep3 = async () => {\r\n        setErrors({})\r\n        setShowModal(true)\r\n    };\r\n\r\n    const submitDonation = async () => {\r\n        // todo handle dropoff time validation\r\n        setLoading(true);\r\n        // format put request data\r\n        const formattedData = formatRequest();\r\n        const response = await putOrder(formattedData);\r\n        setLoading(false);\r\n        setErrors({})\r\n\r\n        if(response.status === '200'){\r\n            toast('Donation submitted successfully!')\r\n            setFormData({firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], dropoff: null, freeTextItems: [''] })\r\n            setStep(4)\r\n            setShowModal(false)\r\n        } else {\r\n            if(response.status === '409'){\r\n                setErrors({...errors, address: 'Address is not valid.'})\r\n                toast('We could validate this address, please double check.');\r\n            } else {\r\n                if(response.message.indexOf('does not exist') > -1){\r\n                    setErrors({...errors, address: 'Address is not valid.'})\r\n                    toast('We could not validate this address, please double check.', {autoClose:10000});\r\n                } else {\r\n                    toast(response.message);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const formatRequest = () => {\r\n        // todo write logic to format the request object to match the data model given by backend\r\n        const body = {};\r\n        body.firstName = formData.firstName;\r\n        body.lastName = formData.lastName;\r\n        body.address = formData.address;\r\n        body.phoneNumber =  formData.phoneNumber;\r\n        body.emailAddress = formData.emailAddress;\r\n        body.zipcode = formData.zipcode;\r\n        body.time = formData.dropoff.id;\r\n        body.type = 'DONATION';\r\n        body.items = [...formData.items.map(item => ({name: item.value, quantity: 1})), ...formData.freeTextItems.map(item => ({name: item, quantity: 1}))]\r\n        body.additionalInfo =formData.additionalInfo;\r\n        return body;\r\n    };\r\n\r\n    return(\r\n        <DonationContext.Provider\r\n            value={{\r\n                state: {\r\n                    // put state values here\r\n                    step, // shorthand for step: step\r\n                    loading,\r\n                    showModal,\r\n                    formData,\r\n                    errors\r\n                },\r\n                // put functions you want to expose here\r\n                setStep: (num) => setStep(num),\r\n                setErrors: (obj) => setErrors(obj),\r\n                setLoading: (bool) => setLoading(bool),\r\n                setShowModal: (bool) => setShowModal(bool),\r\n                setFormData: (data) => setFormData(data),\r\n                stepOneIsValid: () => stepOneIsValid(),\r\n                stepTwoIsValid: () => stepTwoIsValid(),\r\n                stepThreeIsValid: () => stepThreeIsValid(),\r\n                validateStep1: () => validateStep1(),\r\n                validateStep2: () => validateStep2(),\r\n                validateStep3: () => validateStep3(),\r\n                submitDonation: () =>  submitDonation()\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DonationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DonationProvider;","import React, {useState} from 'react';\r\nimport RequestContext from './RequestContext';\r\nimport { toast } from 'react-toastify';\r\nimport { putOrder } from '../../lib/StitchFunctions';\r\n\r\nconst RequestProvider = props => {\r\n    const [errors, setErrors] = useState({})\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [step, setStep] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [formData, setFormData] = useState({ \r\n        firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], freeTextItems: [''], dropoff: null, householdNum: 1 })\r\n\r\n    const stepOneIsValid = () => {\r\n        if(!formData.firstName) return true\r\n        if(!formData.lastName) return true\r\n        if(!formData.phoneNumber || !formData.phoneNumber.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/g)) return true\r\n        if(!formData.emailAddress) return true\r\n        if(!formData.address) return true\r\n        if(!formData.zipcode) return true\r\n        if(!formData.householdNum || formData.householdNum === 0) return true\r\n        return false\r\n    }\r\n\r\n    const stepTwoIsValid = () => {\r\n        if(formData.items.length === 0) return true\r\n        return false\r\n    }\r\n\r\n    const stepThreeIsValid = () => {\r\n        if(!formData.dropoff) return true\r\n        return false\r\n    }\r\n\r\n    const validateStep1 = (values) => {\r\n        setStep(2)\r\n    };\r\n\r\n    const validateStep2 = () => {\r\n        // todo handle requested item validation\r\n        setStep(3)\r\n    };\r\n\r\n    const validateStep3 = async() => {\r\n        setErrors({})\r\n        setShowModal(true)\r\n    }\r\n\r\n    const submitRequest = async() => {\r\n        // todo handle dropoff time validation\r\n        setLoading(true);\r\n        // format put request data\r\n        const formattedData = formatRequest();\r\n        const response = await putOrder(formattedData);\r\n        setLoading(false);\r\n        setErrors({})\r\n\r\n        if(response.status === '200'){\r\n            toast('Request submitted successfully!')\r\n            setFormData({ \r\n                firstName: '', lastName: '', phoneNumber: '', emailAddress: '', additionalInfo: '', address: '', zipcode: '', items: [], freeTextItems: [''], dropoff: null, householdNum: 0 })\r\n            setStep(4)\r\n            setShowModal(false)\r\n        } else {\r\n            if(response.status === '409'){\r\n                setErrors({...errors, address: 'Address is not valid.'})\r\n                toast('We could validate this address, please double check.');\r\n            } else {\r\n                if(response.message.indexOf('does not exist') > -1){\r\n                    setErrors({...errors, address: 'Address is not valid.'})\r\n                    toast('We could not validate this address, please double check.', {autoClose:10000});\r\n                } else {\r\n                    toast(response.message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const formatRequest = () => {\r\n        // todo write logic to format the request object to match the data model given by backend\r\n        const body = {};\r\n        body.firstName = formData.firstName;\r\n        body.lastName = formData.lastName;\r\n        body.address = formData.address;\r\n        body.emailAddress = formData.emailAddress;\r\n        body.phoneNumber =  formData.phoneNumber;\r\n        body.zipcode = formData.zipcode;\r\n        body.time = formData.dropoff.id;\r\n        body.type = 'REQUEST';\r\n        body.items = [...formData.items.map(item => ({name: item.value, quantity: 1})), ...formData.freeTextItems.map(item => ({name: item, quantity: 1}))]\r\n        body.additionalInfo = formData.additionalInfo;\r\n        body.householdNum = formData.householdNum;\r\n        return body; \r\n    };\r\n\r\n    return (\r\n        <RequestContext.Provider \r\n            value={{\r\n                state: {\r\n                    step, // shorthand for step: step\r\n                    loading,\r\n                    showModal,\r\n                    formData,\r\n                    errors\r\n                    // state values you want to expose go here\r\n                },\r\n                setStep: (num) => setStep(num),\r\n                setErrors: (obj) => setErrors(obj),\r\n                setLoading: (bool) => setLoading(bool),\r\n                setFormData: (data) => setFormData(data),\r\n                setShowModal: (bool) => setShowModal(bool),\r\n                validateStep1: () => validateStep1(),\r\n                stepOneIsValid: () => stepOneIsValid(),\r\n                stepTwoIsValid: () => stepTwoIsValid(),\r\n                stepThreeIsValid: () => stepThreeIsValid(),\r\n                validateStep2: () => validateStep2(),\r\n                validateStep3: () => validateStep3(), \r\n                submitRequest: () => submitRequest()\r\n                // functions you want to expose go here\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RequestContext.Provider>\r\n    )\r\n};\r\n\r\nexport default RequestProvider;","import React, { useState } from 'react';\r\nimport DispatchContext from './DispatchContext';\r\nimport { getOrders, getDrivers, assignOrder, updateOrderStatus, getOrder, updateOrderFields, establishMongoDbConnection } from '../../lib/StitchFunctions';\r\nimport {toast} from 'react-toastify'\r\n\r\nconst DispatchProvider = props => {\r\n    const [orders, setOrders] = useState(false)\r\n    const [drivers, setDrivers] = useState(false)\r\n    const [selectedOrder, setSelectedOrder] = useState(false)\r\n    const [typeFilter, setTypeFilter] = useState(false)\r\n    const [statusFilter, setStatusFilter] = useState(false)\r\n    const [orderChanges, setOrderChanges] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false)\r\n\r\n    const getOrdersForDispatcher = async (notify) =>{\r\n        try{\r\n            const prom = await getOrders()\r\n            if(prom.status === '200') setOrders(prom.data.sort((a, b) => a.dateCreated < b.dateCreated))\r\n            if(notify) toast('Orders updated!')\r\n            if(loading) setLoading(false)\r\n        } catch(e){\r\n            console.log(e)\r\n            //set error into global state?\r\n        }\r\n    }\r\n\r\n    const getDriversForDispatcher = async () => {\r\n        try {\r\n            const prom = await getDrivers()\r\n            if(prom.status === '200') setDrivers(prom.data)    \r\n            console.log(prom.data)\r\n        } catch(e) {\r\n            \r\n        }\r\n    }\r\n\r\n    const setFormValue = (key) => {\r\n        try {\r\n            if(!orderChanges.enabled) {  \r\n                if(!selectedOrder[key]) return {}\r\n                return selectedOrder[key]\r\n            }\r\n            else {\r\n                if(orderChanges[key]) return orderChanges[key]\r\n                else {\r\n                    if(!selectedOrder[key]) return {}\r\n                    return selectedOrder[key]\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const updateOrder = async () => {\r\n        if(!orderChanges) return\r\n        setLoading(true)\r\n        if(orderChanges.driver === '' || orderChanges.driver) { //process driver change with assignOrder api\r\n            let prom = await assignOrder(selectedOrder._id, orderChanges.driver.email ? orderChanges.driver.email : '')\r\n            if(prom.status === '400') {\r\n                toast('We had an issue updating the order. Please try again later.')\r\n                setLoading(false)\r\n                return\r\n            }\r\n        }\r\n\r\n        if(orderChanges.status){\r\n            let prom = await updateOrderStatus(selectedOrder._id, orderChanges.status)\r\n            if(prom.status === '400') {\r\n                toast('We had an issue updating the order. Please try again later.')\r\n                setLoading(false)\r\n                return\r\n            }\r\n        }\r\n\r\n        const addressChanged = orderChanges.address ? true : false\r\n        let newFormData = {...selectedOrder}\r\n\r\n        Object.keys(orderChanges).forEach((key) => {\r\n            newFormData[key] = orderChanges[key]\r\n        })\r\n\r\n        let updateProm = await updateOrderFields(newFormData ,addressChanged)\r\n\r\n        if(updateProm.status === '400') {\r\n            toast('We had an issue updating the order. Please try again later.')\r\n            setLoading(false)\r\n            return\r\n        }\r\n\r\n        toast('Order successfully updated!')\r\n        await getOrdersForDispatcher()\r\n        setSelectedOrder(await getOrder(selectedOrder._id))\r\n        setLoading(false)\r\n        setShowConfirmModal(false)\r\n    }\r\n\r\n    return (\r\n        <DispatchContext.Provider \r\n            value={{\r\n                state: {\r\n                    // put your state that you want to expose in here\r\n                    orders: orders,\r\n                    selectedOrder: selectedOrder,\r\n                    typeFilter: typeFilter,\r\n                    statusFilter: statusFilter,\r\n                    drivers: drivers,\r\n                    orderChanges: orderChanges,\r\n                    loading: loading,\r\n                    showConfirmModal: showConfirmModal\r\n                },\r\n                // expose functions here\r\n                getOrdersForDispatcher: (bool) => getOrdersForDispatcher(bool),\r\n                getDriversForDispatcher: () => getDriversForDispatcher(),\r\n                setSelectedOrder: (obj) => setSelectedOrder(obj),\r\n                setTypeFilter: (str) => setTypeFilter(str),\r\n                setStatusFilter: (str) => setStatusFilter(str),\r\n                setDrivers: () => setDrivers(),\r\n                setOrderChanges: (bool) => setOrderChanges(bool),\r\n                setFormValue: (str) => setFormValue(str),\r\n                updateOrder: () => updateOrder(),\r\n                setShowConfirmModal: (bool) => setShowConfirmModal(bool),\r\n                setLoading: (bool) => setLoading(bool)\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DispatchContext.Provider>\r\n    )\r\n};\r\n\r\nexport default DispatchProvider;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ContextWrapper from './ContextWrapper';\r\n\r\nReactDOM.render(<ContextWrapper><App /></ContextWrapper>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// manage the context providers in here, this function will just return the context providers which wraps app.js\r\n// global state is the only provider and consumer most likely in here\r\nimport React from 'react';\r\nimport GlobalStateProvider from \"./contexts/Global/GlobalStateProvider\";\r\nimport GlobalStateContext from \"./contexts/Global/GlobalStateContext\";\r\nimport DonationProvider from \"./contexts/DonationModule/DonationProvider\";\r\nimport RequestProvider from './contexts/RequestModule/RequestProvider';\r\nimport DispatchProvider from './contexts/DispatcherModule/DispatchProvider';\r\n\r\n// if you want you can pass the globalContext right into your provider as a prop. It will then be available\r\nexport default props => (\r\n    <GlobalStateProvider>\r\n        <GlobalStateContext.Consumer>\r\n            {globalContext => (\r\n                <DonationProvider>\r\n                    <RequestProvider>\r\n                        <DispatchProvider>\r\n                            {props.children}\r\n                        </DispatchProvider>\r\n                    </RequestProvider>\r\n                </DonationProvider>\r\n            )}\r\n        </GlobalStateContext.Consumer>\r\n    </GlobalStateProvider>\r\n)","module.exports = __webpack_public_path__ + \"static/media/fulllogo.ec71ed57.png\";"],"sourceRoot":""}